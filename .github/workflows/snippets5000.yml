# This is a basic workflow to help you get started with Actions
name: 'Snippets 5000'

# Controls when the action will run. Triggers the workflow on push or pull request
# events on the main branch only.
on:
  pull_request:
    branches: [ main ]
    types: [opened, synchronize, reopened]
  workflow_dispatch:
    inputs:
      reason:
        description: 'The reason for running the workflow'
        required: true
        default: 'Manual run'

env:
  DOTNET_INSTALLER_CHANNEL: '8.0'
  DOTNET_DO_INSTALL: 'true' # True to install preview versions, False to use the pre-installed (released) SDK
  EnableNuGetPackageRestore: 'True'
  repo: 'docs'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "snippets-build"
  snippets-build:
    # The type of runner that the job will run on
    runs-on: windows-2022
    permissions:
        statuses: write

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v4.1.1 #@v3.1.0

    # Get the latest preview SDK (or sdk not installed by the runner)
    - name: Setup .NET SDK
      if: ${{ env.DOTNET_DO_INSTALL == 'true' }}
      run: |
        echo "Downloading dotnet-install.ps1"
        Invoke-WebRequest https://raw.githubusercontent.com/dotnet/install-scripts/master/src/dotnet-install.ps1 -OutFile dotnet-install.ps1
        echo "Installing dotnet version ${{ env.DOTNET_INSTALLER_CHANNEL }}"
        .\dotnet-install.ps1 -InstallDir "c:\program files\dotnet" -Channel "${{ env.DOTNET_INSTALLER_CHANNEL }}" -Quality preview

    # Print dotnet info
    - name: Display .NET info
      run: |
        dotnet --info

    # Clone docs tools repo
    - name: Clone docs-tools repository
      run: |
        git clone https://github.com/dotnet/docs-tools

    # Run snippets 5000
    - name: Run snippets 5000 for PR
      env:
        GitHubKey: ${{ secrets.GITHUB_TOKEN }}
      run: |
        dotnet run --project docs-tools\snippets5000\Snippets5000\Snippets5000.csproj -- --sourcepath "${{ github.workspace }}" --pullrequest ${{ github.event.number }} --owner ${{ github.repository_owner }} --repo ${{ github.event.repository.name }}

    # Update build output json file
    - name: Upload build results
      uses: actions/upload-artifact@26f96dfa697d77e81fd5907df203aa23a56210a8 #@v4.3.0
      with:
        name: build
        path: ./output.json
