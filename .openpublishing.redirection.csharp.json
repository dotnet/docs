{
    "redirections": [
        {
            "source_path_from_root": "/redirections/proposals/csharp-7.0/binary-literals.md",
            "redirect_url": "/dotnet/csharp/language-reference/language-specification/lexical-structure#6453-integer-literals"
        },
        {
            "source_path_from_root": "/redirections/proposals/csharp-7.0/digit-separators.md",
            "redirect_url": "/dotnet/csharp/language-reference/language-specification/lexical-structure#6453-integer-literals"
        },
        {
            "source_path_from_root": "/redirections/proposals/csharp-7.0/local-functions.md",
            "redirect_url": "/dotnet/csharp/language-reference/language-specification/statements#1264-local-function-declarations"
        },
        {
            "source_path_from_root": "/redirections/proposals/csharp-7.0/throw-expression.md",
            "redirect_url": "/dotnet/csharp/language-reference/language-specification/expressions#1115-the-throw-expression-operator"
        },
        {
            "source_path_from_root": "/redirections/proposals/csharp-7.0/out-var.md",
            "redirect_url": "/dotnet/csharp/language-reference/language-specification/expressions#1117-declaration-expressions"
        },
        {
            "source_path_from_root": "/redirections/proposals/csharp-7.0/pattern-matching.md",
            "redirect_url": "/dotnet/csharp/language-reference/language-specification/patterns.md"
        },
        {
            "source_path_from_root": "/redirections/proposals/csharp-7.0/task-types.md",
            "redirect_url": "/dotnet/csharp/language-reference/language-specification/classes#15152-task-type-builder-pattern"
        },
        {
            "source_path_from_root": "/redirections/proposals/csharp-7.1/async-main.md",
            "redirect_url": "/dotnet/csharp/language-reference/language-specification/basic-concepts#71-application-startup"
        },
        {
            "source_path_from_root": "/redirections/proposals/csharp-7.1/target-typed-default.md",
            "redirect_url": "/dotnet/csharp/language-reference/language-specification/expressions#11719-default-value-expressions"
        },
        {
            "source_path_from_root": "/redirections/proposals/csharp-7.1/infer-tuple-names.md",
            "redirect_url": "/dotnet/csharp/language-reference/language-specification/types#8311-tuple-types"
        },
        {
            "source_path_from_root": "/redirections/proposals/csharp-7.1/generics-pattern-match.md",
            "redirect_url": "/dotnet/csharp/language-reference/language-specification/patterns"
        },
        {
            "source_path_from_root": "/redirections/proposals/csharp-7.2/conditional-ref.md",
            "redirect_url": "/dotnet/csharp/language-reference/language-specification/expressions#1218-conditional-operator"
        },
        {
            "source_path_from_root": "/redirections/proposals/csharp-7.2/non-trailing-named-arguments.md",
            "redirect_url": "/dotnet/csharp/language-reference/language-specification/expressions#11621-general"
        },
        {
            "source_path_from_root": "/redirections/proposals/csharp-7.2/private-protected.md",
            "redirect_url": "/dotnet/csharp/language-reference/language-specification/classes#1436-access-modifiers"
        },
        {
            "source_path_from_root": "/redirections/proposals/csharp-7.2/readonly-ref.md",
            "redirect_url": "/dotnet/csharp/language-reference/language-specification/variables#97-reference-variables-and-returns"
        },
        {
            "source_path_from_root": "/redirections/proposals/csharp-7.2/readonly-struct.md",
            "redirect_url": "/dotnet/csharp/language-reference/language-specification/structs#1524-struct-interfaces"
        },
        {
            "source_path_from_root": "/redirections/proposals/csharp-7.2/span-safety.md",
            "redirect_url": "/dotnet/csharp/language-reference/language-specification/variables#97-reference-variables-and-returns"
        },
        {
            "source_path_from_root": "/redirections/proposals/csharp-7.3/auto-prop-field-attrs.md",
            "redirect_url": "/dotnet/csharp/language-reference/language-specification/attributes#213-attribute-specification"
        },
        {
            "source_path_from_root": "/redirections/proposals/csharp-7.3/blittable.md",
            "redirect_url": "/dotnet/csharp/language-reference/language-specification/classes#1425-type-parameter-constraints"
        },
        {
            "source_path_from_root": "/redirections/proposals/csharp-7.3/expression-variables-in-initializers.md",
            "redirect_url": "/dotnet/csharp/language-reference/language-specification/expressions#1117-declaration-expressions"
        },
        {
            "source_path_from_root": "/redirections/proposals/csharp-7.3/improved-overload-candidates.md",
            "redirect_url": "/dotnet/csharp/language-reference/language-specification/expressions#11642-applicable-function-member"
        },
        {
            "source_path_from_root": "/redirections/proposals/csharp-7.3/indexing-movable-fixed-fields.md",
            "redirect_url": "/dotnet/csharp/language-reference/language-specification/unsafe-code#2283-fixed-size-buffers-in-expressions"
        },
        {
            "source_path_from_root": "/redirections/proposals/csharp-7.3/leading-digit-separator.md",
            "redirect_url": "/dotnet/csharp/language-reference/language-specification/lexical-structure#6453-integer-literals"
        },
        {
            "source_path_from_root": "/redirections/proposals/csharp-7.3/pattern-based-fixed.md",
            "redirect_url": "/dotnet/csharp/language-reference/language-specification/unsafe-code#227-the-fixed-statement"
        },
        {
            "source_path_from_root": "/redirections/proposals/csharp-7.3/ref-local-reassignment.md",
            "redirect_url": "/dotnet/csharp/language-reference/language-specification/variables#97-reference-variables-and-returns"
        },
        {
            "source_path_from_root": "/redirections/proposals/csharp-7.3/stackalloc-array-initializers.md",
            "redirect_url": "/dotnet/csharp/language-reference/language-specification/expressions#12821-stack-allocation"
        },
        {
            "source_path_from_root": "/redirections/proposals/csharp-7.3/tuple-equality.md",
            "redirect_url": "/dotnet/csharp/language-reference/language-specification/expressions#111211-tuple-equality-operators"
        },
        {
            "source_path_from_root": "/redirections/proposals/csharp-10.0/generic-attributes.md",
            "redirect_url": "/dotnet/csharp/language-reference/proposals/csharp-11.0/generic-attributes"
        },
        {
            "source_path_from_root": "/docs/csharp/async.md",
            "redirect_url": "/dotnet/csharp/asynchronous-programming"
        },
        {
            "source_path_from_root": "/docs/csharp/basic-types.md",
            "redirect_url": "/dotnet/csharp/fundamentals/types"
        },
        {
            "source_path_from_root": "/docs/csharp/classes.md",
            "redirect_url": "/dotnet/csharp/fundamentals/types/classes"
        },
        {
            "source_path_from_root": "/docs/csharp/codedoc.md",
            "redirect_url": "/dotnet/csharp/language-reference/xmldoc/recommended-tags"
        },
        {
            "source_path_from_root": "/docs/csharp/csharp-6.md",
            "redirect_url": "/dotnet/csharp/whats-new/csharp-version-history#c-version-60"
        },
        {
            "source_path_from_root": "/docs/csharp/csharp-7.md",
            "redirect_url": "/dotnet/csharp/whats-new/csharp-version-history#c-version-70"
        },
        {
            "source_path_from_root": "/docs/csharp/csharp.md",
            "redirect_url": "/dotnet/csharp"
        },
        {
            "source_path_from_root": "/docs/csharp/deconstruct.md",
            "redirect_url": "/dotnet/csharp/fundamentals/functional/deconstruct"
        },
        {
            "source_path_from_root": "/docs/csharp/delegates-events.md",
            "redirect_url": "/dotnet/csharp/delegates-overview"
        },
        {
            "source_path_from_root": "/docs/csharp/discards.md",
            "redirect_url": "/dotnet/csharp/fundamentals/functional/discards"
        },
        {
            "source_path_from_root": "/docs/csharp/expression-trees.md",
            "redirect_url": "/dotnet/csharp/advanced-topics/expression-trees"
        },
        {
            "source_path_from_root": "/docs/csharp/expression-classes.md",
            "redirect_url": "/dotnet/csharp/advanced-topics/expression-trees/expression-classes"
        },
        {
            "source_path_from_root": "/docs/csharp/expression-trees-building.md",
            "redirect_url": "/dotnet/csharp/advanced-topics/expression-trees/expression-trees-building"
        },
        {
            "source_path_from_root": "/docs/csharp/expression-trees-explained.md",
            "redirect_url": "/dotnet/csharp/advanced-topics/expression-trees/expression-trees-explained"
        },
        {
            "source_path_from_root": "/docs/csharp/expression-trees-execution.md",
            "redirect_url": "/dotnet/csharp/advanced-topics/expression-trees/expression-trees-execution"
        },
        {
            "source_path_from_root": "/docs/csharp/expression-trees-interpreting.md",
            "redirect_url": "/dotnet/csharp/advanced-topics/expression-trees/expression-trees-interpreting"
        },
        {
            "source_path_from_root": "/docs/csharp/expression-trees-summary.md",
            "redirect_url": "/dotnet/csharp/advanced-topics/expression-trees"
        },
        {
            "source_path_from_root": "/docs/csharp/expression-trees-translating.md",
            "redirect_url": "/dotnet/csharp/advanced-topics/expression-trees/expression-trees-translating"
        },
        {
            "source_path_from_root": "/docs/csharp/features.md",
            "redirect_url": "/dotnet/csharp/programming-guide/concepts"
        },
        {
            "source_path_from_root": "/docs/csharp/generics.md",
            "redirect_url": "/dotnet/csharp/fundamentals/types/generics"
        },
        {
            "source_path_from_root": "/docs/csharp/getting-started/additional-resources.md",
            "redirect_url": "/dotnet/csharp/tour-of-csharp"
        },
        {
            "source_path_from_root": "/docs/csharp/getting-started/breaking-changes-in-visual-studio-2013.md",
            "redirect_url": "/previous-versions/visualstudio/visual-studio-2013/hh678682(v=vs.120)"
        },
        {
            "source_path_from_root": "/docs/csharp/getting-started/consuming-library-with-visual-studio-2017.md",
            "redirect_url": "/nuget/quickstart/install-and-use-a-package-in-visual-studio"
        },
        {
            "source_path_from_root": "/docs/csharp/getting-started/consuming-library-with-visual-studio.md",
            "redirect_url": "/nuget/quickstart/install-and-use-a-package-in-visual-studio"
        },
        {
            "source_path_from_root": "/docs/csharp/getting-started/debugging-with-visual-studio-2017.md",
            "redirect_url": "/dotnet/core/tutorials/debugging-with-visual-studio"
        },
        {
            "source_path_from_root": "/docs/csharp/getting-started/debugging-with-visual-studio.md",
            "redirect_url": "/dotnet/core/tutorials/debugging-with-visual-studio"
        },
        {
            "source_path_from_root": "/docs/csharp/getting-started/getting-started-with-csharp.md",
            "redirect_url": "/dotnet/csharp/tour-of-csharp"
        },
        {
            "source_path_from_root": "/docs/csharp/getting-started/index.md",
            "redirect_url": "/dotnet/csharp/tour-of-csharp"
        },
        {
            "source_path_from_root": "/docs/csharp/getting-started/library-with-visual-studio-2017.md",
            "redirect_url": "/dotnet/core/tutorials/library-with-visual-studio",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/getting-started/library-with-visual-studio.md",
            "redirect_url": "/dotnet/core/tutorials/library-with-visual-studio"
        },
        {
            "source_path_from_root": "/docs/csharp/getting-started/publishing-with-visual-studio-2017.md",
            "redirect_url": "/dotnet/core/tutorials/publishing-with-visual-studio"
        },
        {
            "source_path_from_root": "/docs/csharp/getting-started/publishing-with-visual-studio.md",
            "redirect_url": "/dotnet/core/tutorials/publishing-with-visual-studio"
        },
        {
            "source_path_from_root": "/docs/csharp/getting-started/testing-library-with-visual-studio.md",
            "redirect_url": "/dotnet/core/tutorials/testing-library-with-visual-studio"
        },
        {
            "source_path_from_root": "/docs/csharp/getting-started/whats-new.md",
            "redirect_url": "/dotnet/csharp/whats-new/csharp-11"
        },
        {
            "source_path_from_root": "/docs/csharp/getting-started/with-visual-studio-2017.md",
            "redirect_url": "/dotnet/core/tutorials/with-visual-studio",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/getting-started/with-visual-studio-code.md",
            "redirect_url": "/dotnet/core/tutorials/with-visual-studio-code",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/getting-started/with-visual-studio.md",
            "redirect_url": "/dotnet/core/tutorials/with-visual-studio"
        },
        {
            "source_path_from_root": "/docs/csharp/how-to/safely-cast-using-pattern-matching-is-and-as-operators.md",
            "redirect_url": "/dotnet/csharp/fundamentals/tutorials/safely-cast-using-pattern-matching-is-and-as-operators"
        },
        {
            "source_path_from_root": "/docs/csharp/implicitly-typed-lambda-expressions.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/lambda-expressions"
        },
        {
            "source_path_from_root": "/docs/csharp/interactive-with-bash.md",
            "redirect_url": "/dotnet/csharp/index"
        },
        {
            "source_path_from_root": "/docs/csharp/interactive-with-powershell.md",
            "redirect_url": "/dotnet/csharp/index"
        },
        {
            "source_path_from_root": "/docs/csharp/interactive-with-visualstudio.md",
            "redirect_url": "/dotnet/csharp/index"
        },
        {
            "source_path_from_root": "/docs/csharp/interactive.md",
            "redirect_url": "/dotnet/csharp/index"
        },
        {
            "source_path_from_root": "/docs/csharp/interfaces.md",
            "redirect_url": "/dotnet/csharp/fundamentals/types/interfaces"
        },
        {
            "source_path_from_root": "/docs/csharp/interop.md",
            "redirect_url": "/dotnet/csharp/advanced-topics/interop/index"
        },
        {
            "source_path_from_root": "/docs/csharp/lambda-expressions.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/lambda-expressions"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/builtin-types/nint-nuint.md",
            "redirect_url": "/dotnet/csharp/language-reference/builtin-types/integral-numeric-types#native-sized-integers"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-messages/cs0178.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/array-declaration-errors"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-messages/cs0188.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/feature-version-errors"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-messages/cs0234.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/assembly-references"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-messages/cs0246.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/assembly-references"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-messages/cs1683.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/assembly-references"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-messages/cs0270.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/array-declaration-errors"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-messages/cs0650.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/array-declaration-errors"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-messages/cs0767.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/ref-modifiers-errors"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-messages/cs0826.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/array-declaration-errors"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-messages/cs0834.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/expression-tree-restrictions"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-messages/cs0843.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/feature-version-errors"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-messages/cs0845.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/expression-tree-restrictions"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-messages/cs0846.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/array-declaration-errors"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-messages/cs0854.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/expression-tree-restrictions"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-messages/cs1704.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/assembly-references"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-messages/cs1739.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/parameter-argument-mismatch"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-messages/cs1740.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/parameter-argument-mismatch"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-messages/cs1741.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/ref-modifiers-errors"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-messages/cs1742.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/parameter-argument-mismatch"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-messages/cs1921.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/array-declaration-errors"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-messages/cs1946.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/expression-tree-restrictions"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-messages/cs1988.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/ref-modifiers-errors"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-messages/cs3007.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/array-declaration-errors"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-messages/cs7000.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/using-directive-errors"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-messages/cs8400.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/feature-version-errors"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-messages/cs8153.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/lambda-expression-errors#conversion-to-expression-trees"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-messages/cs8155.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/lambda-expression-errors#conversion-to-expression-trees"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-messages/cs8166.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/ref-modifiers-errors"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-messages/cs8167.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/ref-modifiers-errors"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-messages/cs8168.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/ref-modifiers-errors"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-messages/cs8169.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/ref-modifiers-errors"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-messages/cs8175.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/lambda-expression-errors#syntax-limitations-in-lambda-expressions"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-messages/cs8373.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/ref-modifiers-errors"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-messages/cs8374.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/ref-modifiers-errors"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-messages/cs8401.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/feature-version-errors"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-messages/cs8892.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/warning-waves#cs8892"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-messages/cs8964.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/parameter-argument-mismatch"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-options/addmodule-compiler-option.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-options/inputs"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-options/app-deployment.md",
            "redirect_url": "/dotnet/framework/deployment/deployment-guide-for-developers"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-options/appconfig-compiler-option.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-options/advanced"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-options/baseaddress-compiler-option.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-options/advanced"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-options/bugreport-compiler-option.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-options"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-options/checked-compiler-option.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-options/language"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-options/codepage-compiler-option.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-options/advanced"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-options/command-line-building-with-csc-exe.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-options"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-options/debug-compiler-option.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-options/code-generation"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-options/define-compiler-option.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-options/language"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-options/delaysign-compiler-option.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-options/security"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-options/deterministic-compiler-option.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-options/code-generation"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-options/doc-compiler-option.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-options/output"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-options/errorreport-compiler-option.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-options"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-options/filealign-compiler-option.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-options/advanced"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-options/fullpaths-compiler-option.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-options/advanced"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-options/help-compiler-option.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-options/miscellaneous"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-options/highentropyva-compiler-option.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-options/security"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-options/how-to-set-environment-variables-for-the-visual-studio-command-line.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-options"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-options/keycontainer-compiler-option.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-options/security"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-options/keyfile-compiler-option.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-options/security"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-options/langversion-compiler-option.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-options/language"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-options/lib-compiler-option.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-options/advanced"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-options/link-compiler-option.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-options/inputs"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-options/linkresource-compiler-option.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-options/resources"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-options/listed-alphabetically.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-options"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-options/listed-by-category.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-options"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-options/main-compiler-option.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-options/advanced"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-options/moduleassemblyname-compiler-option.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-options/advanced"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-options/noconfig-compiler-option.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-options/miscellaneous"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-options/nologo-file-compiler-option.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-options/miscellaneous"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-options/nostdlib-compiler-option.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-options/advanced"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-options/nowarn-compiler-option.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-options/errors-warnings"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-options/nowin32manifest-compiler-option.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-options/resources"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-options/nullable-compiler-option.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-options/language"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-options/optimize-compiler-option.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-options/code-generation"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-options/out-compiler-option.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-options/output"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-options/pathmap-compiler-option.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-options/advanced"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-options/pdb-compiler-option.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-options/advanced"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-options/platform-compiler-option.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-options/output"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-options/preferreduilang-compiler-option.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-options/advanced"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-options/publicsign-compiler-option.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-options/security"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-options/recurse-compiler-option.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-options"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-options/reference-compiler-option.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-options/inputs"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-options/refonly-compiler-option.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-options/code-generation"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-options/refout-compiler-option.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-options/output"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-options/resource-compiler-option.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-options/resources"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-options/response-file-compiler-option.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-options/miscellaneous"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-options/subsystemversion-compiler-option.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-options/advanced"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-options/target-appcontainerexe-compiler-option.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-options/output"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-options/target-compiler-option.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-options/output"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-options/target-exe-compiler-option.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-options/output"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-options/target-library-compiler-option.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-options/output"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-options/target-module-compiler-option.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-options/output"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-options/target-winexe-compiler-option.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-options/output"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-options/target-winmdobj-compiler-option.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-options/output"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-options/unsafe-compiler-option.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-options/language"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-options/utf8output-compiler-option.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-options/advanced"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-options/warn-compiler-option.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-options/errors-warnings"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-options/warnaserror-compiler-option.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-options/errors-warnings"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-options/win32icon-compiler-option.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-options/resources"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-options/win32manifest-compiler-option.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-options/resources"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/compiler-options/win32res-compiler-option.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-options/resources"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/access-keywords.md",
            "redirect_url": "/dotnet/csharp/language-reference/keywords/base"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/as.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/type-testing-and-cast#as-operator"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/await.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/await"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/bool.md",
            "redirect_url": "/dotnet/csharp/language-reference/builtin-types/bool"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/break.md",
            "redirect_url": "/dotnet/csharp/language-reference/statements/jump-statements"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/built-in-types-table.md",
            "redirect_url": "/dotnet/csharp/language-reference/builtin-types/built-in-types"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/byte.md",
            "redirect_url": "/dotnet/csharp/language-reference/builtin-types/integral-numeric-types"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/char.md",
            "redirect_url": "/dotnet/csharp/language-reference/builtin-types/char"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/checked.md",
            "redirect_url": "/dotnet/csharp/language-reference/statements/checked-and-unchecked"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/checked-and-unchecked.md",
            "redirect_url": "/dotnet/csharp/language-reference/statements/checked-and-unchecked"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/continue.md",
            "redirect_url": "/dotnet/csharp/language-reference/statements/jump-statements"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/contextual-keywords.md",
            "redirect_url": "/dotnet/csharp/language-reference/keywords/index#contextual-keywords"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/conversion-keywords.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/user-defined-conversion-operators"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/decimal.md",
            "redirect_url": "/dotnet/csharp/language-reference/builtin-types/floating-point-numeric-types"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/default-values-table.md",
            "redirect_url": "/dotnet/csharp/language-reference/builtin-types/default-values"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/delegate.md",
            "redirect_url": "/dotnet/csharp/language-reference/builtin-types/reference-types"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/do.md",
            "redirect_url": "/dotnet/csharp/language-reference/statements/iteration-statements"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/double.md",
            "redirect_url": "/dotnet/csharp/language-reference/builtin-types/floating-point-numeric-types"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/dynamic.md",
            "redirect_url": "/dotnet/csharp/language-reference/builtin-types/reference-types"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/enum.md",
            "redirect_url": "/dotnet/csharp/language-reference/builtin-types/enum"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/exception-handling-statements.md",
            "redirect_url": "/dotnet/csharp/language-reference/keywords/statement-keywords"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/explicit-numeric-conversions-table.md",
            "redirect_url": "/dotnet/csharp/language-reference/builtin-types/numeric-conversions"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/explicit.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/user-defined-conversion-operators"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/false-literal.md",
            "redirect_url": "/dotnet/csharp/language-reference/builtin-types/bool"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/false-operator.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/true-false-operators"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/false.md",
            "redirect_url": "/dotnet/csharp/language-reference/builtin-types/bool"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/fixed-statement.md",
            "redirect_url": "/dotnet/csharp/language-reference/statements/fixed"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/float.md",
            "redirect_url": "/dotnet/csharp/language-reference/builtin-types/floating-point-numeric-types"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/floating-point-types-table.md",
            "redirect_url": "/dotnet/csharp/language-reference/builtin-types/floating-point-numeric-types"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/for.md",
            "redirect_url": "/dotnet/csharp/language-reference/statements/iteration-statements"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/foreach-in.md",
            "redirect_url": "/dotnet/csharp/language-reference/statements/iteration-statements"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/formatting-numeric-results-table.md",
            "redirect_url": "/dotnet/standard/base-types/standard-numeric-format-strings"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/global.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/namespace-alias-qualifier"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/goto.md",
            "redirect_url": "/dotnet/csharp/language-reference/statements/jump-statements"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/if-else.md",
            "redirect_url": "/dotnet/csharp/language-reference/statements/selection-statements"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/implicit-numeric-conversions-table.md",
            "redirect_url": "/dotnet/csharp/language-reference/builtin-types/numeric-conversions"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/implicit.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/user-defined-conversion-operators"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/in-parameter-modifier.md",
            "redirect_url": "/dotnet/csharp/language-reference/keywords/method-parameters#in-parameter-modifier"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/int.md",
            "redirect_url": "/dotnet/csharp/language-reference/builtin-types/integral-numeric-types"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/integral-types-table.md",
            "redirect_url": "/dotnet/csharp/language-reference/builtin-types/integral-numeric-types"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/interpolated-strings.md",
            "redirect_url": "/dotnet/csharp/language-reference/tokens/interpolated"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/is.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/is"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/iteration-statements.md",
            "redirect_url": "/dotnet/csharp/language-reference/statements/iteration-statements"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/jump-statements.md",
            "redirect_url": "/dotnet/csharp/language-reference/keywords/statement-keywords"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/literal-keywords.md",
            "redirect_url": "/dotnet/csharp/language-reference/keywords/null"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/lock-statement.md",
            "redirect_url": "/dotnet/csharp/language-reference/statements/lock"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/long.md",
            "redirect_url": "/dotnet/csharp/language-reference/builtin-types/integral-numeric-types"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/modifiers.md",
            "redirect_url": "/dotnet/csharp/language-reference/keywords"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/nameof.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/nameof"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/namespace-keywords.md",
            "redirect_url": "/dotnet/csharp/language-reference/keywords/namespace"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/new-operator.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/new-operator"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/object.md",
            "redirect_url": "/dotnet/csharp/language-reference/builtin-types/reference-types"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/operator-keywords.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/index"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/operator.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/operator-overloading"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/out-parameter-modifier.md",
            "redirect_url": "/dotnet/csharp/language-reference/keywords/method-parameters#out-parameter-modifier"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/params.md",
            "redirect_url": "/dotnet/csharp/language-reference/keywords/method-parameters#params-modifier"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/reference-tables-for-types.md",
            "redirect_url": "/dotnet/csharp/language-reference/keywords"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/return.md",
            "redirect_url": "/dotnet/csharp/language-reference/statements/jump-statements"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/sbyte.md",
            "redirect_url": "/dotnet/csharp/language-reference/builtin-types/integral-numeric-types"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/selection-statements.md",
            "redirect_url": "/dotnet/csharp/language-reference/statements/selection-statements"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/short.md",
            "redirect_url": "/dotnet/csharp/language-reference/builtin-types/integral-numeric-types"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/sizeof.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/sizeof"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/stackalloc.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/stackalloc"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/string.md",
            "redirect_url": "/dotnet/csharp/language-reference/builtin-types/reference-types"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/struct.md",
            "redirect_url": "/dotnet/csharp/language-reference/builtin-types/struct"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/switch.md",
            "redirect_url": "/dotnet/csharp/language-reference/statements/selection-statements"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/throw.md",
            "redirect_url": "/dotnet/csharp/language-reference/statements/exception-handling-statements"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/true-false-operators.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/true-false-operators"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/true-literal.md",
            "redirect_url": "/dotnet/csharp/language-reference/builtin-types/bool"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/true-operator.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/true-false-operators"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/true.md",
            "redirect_url": "/dotnet/csharp/language-reference/builtin-types/bool"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/try-catch.md",
            "redirect_url": "/dotnet/csharp/language-reference/statements/exception-handling-statements"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/try-catch-finally.md",
            "redirect_url": "/dotnet/csharp/language-reference/statements/exception-handling-statements"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/try-finally.md",
            "redirect_url": "/dotnet/csharp/language-reference/statements/exception-handling-statements"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/typeof.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/type-testing-and-cast#typeof-operator"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/types.md",
            "redirect_url": "/dotnet/csharp/language-reference/keywords"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/uint.md",
            "redirect_url": "/dotnet/csharp/language-reference/builtin-types/integral-numeric-types"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/ulong.md",
            "redirect_url": "/dotnet/csharp/language-reference/builtin-types/integral-numeric-types"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/unchecked.md",
            "redirect_url": "/dotnet/csharp/language-reference/statements/checked-and-unchecked"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/ushort.md",
            "redirect_url": "/dotnet/csharp/language-reference/builtin-types/integral-numeric-types"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/using-statement.md",
            "redirect_url": "/dotnet/csharp/language-reference/statements/using"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/using-static.md",
            "redirect_url": "/dotnet/csharp/language-reference/keywords/using-directive"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/value-types-table.md",
            "redirect_url": "/dotnet/csharp/language-reference/builtin-types/value-types"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/value-types.md",
            "redirect_url": "/dotnet/csharp/language-reference/builtin-types/value-types"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/var.md",
            "redirect_url": "/dotnet/csharp/language-reference/statements/declarations#implicitly-typed-local-variables"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/void.md",
            "redirect_url": "/dotnet/csharp/language-reference/builtin-types/void"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/while.md",
            "redirect_url": "/dotnet/csharp/language-reference/statements/iteration-statements"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/keywords/yield.md",
            "redirect_url": "/dotnet/csharp/language-reference/statements/yield"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/language-specification/index.md",
            "redirect_url": "/dotnet/csharp/language-reference/language-specification/introduction"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/operators/addition-assignment-operator.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/arithmetic-operators#compound-assignment"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/operators/and-assignment-operator.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/boolean-logical-operators#compound-assignment"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/operators/and-operator.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/boolean-logical-operators#logical-and-operator-"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/operators/bitwise-complement-operator.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/bitwise-and-shift-operators#bitwise-complement-operator-"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/operators/conditional-and-operator.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/boolean-logical-operators#conditional-logical-and-operator-"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/operators/conditional-or-operator.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/boolean-logical-operators#conditional-logical-or-operator-"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/operators/decrement-operator.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/arithmetic-operators#decrement-operator---"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/operators/dereference-operator.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/pointer-related-operators#pointer-member-access-operator--"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/operators/division-assignment-operator.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/arithmetic-operators#compound-assignment"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/operators/division-operator.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/arithmetic-operators#division-operator-"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/operators/equality-comparison-operator.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/equality-operators#equality-operator-"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/operators/greater-than-equal-operator.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/comparison-operators#greater-than-or-equal-operator-"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/operators/greater-than-operator.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/comparison-operators#greater-than-operator-"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/operators/increment-operator.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/arithmetic-operators#increment-operator-"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/operators/index-operator.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/member-access-operators#indexer-operator-"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/operators/invocation-operator.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/member-access-operators#invocation-operator-"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/operators/left-shift-assignment-operator.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/bitwise-and-shift-operators#compound-assignment"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/operators/left-shift-operator.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/bitwise-and-shift-operators#left-shift-operator-"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/operators/less-than-equal-operator.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/comparison-operators#less-than-or-equal-operator-"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/operators/less-than-operator.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/comparison-operators#less-than-operator-"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/operators/logical-negation-operator.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/boolean-logical-operators#logical-negation-operator-"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/operators/member-access-operator.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/member-access-operators#member-access-operator-"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/operators/modulus-assignment-operator.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/arithmetic-operators#compound-assignment"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/operators/modulus-operator.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/arithmetic-operators#remainder-operator-"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/operators/multiplication-assignment-operator.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/arithmetic-operators#compound-assignment"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/operators/multiplication-operator.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/arithmetic-operators#multiplication-operator-"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/operators/namespace-alias-qualifer.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/namespace-alias-qualifier"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/operators/not-equal-operator.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/equality-operators#inequality-operator-"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/operators/null-conditional-operator.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/null-coalescing-operator"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/operators/null-conditional-operators.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/member-access-operators#null-conditional-operators--and-"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/operators/or-assignment-operator.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/boolean-logical-operators#compound-assignment"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/operators/or-operator.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/boolean-logical-operators#logical-or-operator-"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/operators/remainder-assignment-operator.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/arithmetic-operators#compound-assignment"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/operators/remainder-operator.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/arithmetic-operators#remainder-operator-"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/operators/right-shift-assignment-operator.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/bitwise-and-shift-operators#compound-assignment"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/operators/right-shift-operator.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/bitwise-and-shift-operators#right-shift-operator-"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/operators/null-parameter-check.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/operators/subtraction-assignment-operator.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/arithmetic-operators#compound-assignment"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/operators/type-testing-and-conversion-operators.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/type-testing-and-cast"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/operators/xor-assignment-operator.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/boolean-logical-operators#compound-assignment"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/operators/xor-operator.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/boolean-logical-operators#logical-exclusive-or-operator-"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/preprocessor-directives/index.md",
            "redirect_url": "/dotnet/csharp/language-reference/preprocessor-directives",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/preprocessor-directives/preprocessor-define.md",
            "redirect_url": "/dotnet/csharp/language-reference/preprocessor-directives"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/preprocessor-directives/preprocessor-elif.md",
            "redirect_url": "/dotnet/csharp/language-reference/preprocessor-directives"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/preprocessor-directives/preprocessor-else.md",
            "redirect_url": "/dotnet/csharp/language-reference/preprocessor-directives"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/preprocessor-directives/preprocessor-endif.md",
            "redirect_url": "/dotnet/csharp/language-reference/preprocessor-directives"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/preprocessor-directives/preprocessor-endregion.md",
            "redirect_url": "/dotnet/csharp/language-reference/preprocessor-directives"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/preprocessor-directives/preprocessor-error.md",
            "redirect_url": "/dotnet/csharp/language-reference/preprocessor-directives"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/preprocessor-directives/preprocessor-if.md",
            "redirect_url": "/dotnet/csharp/language-reference/preprocessor-directives"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/preprocessor-directives/preprocessor-line.md",
            "redirect_url": "/dotnet/csharp/language-reference/preprocessor-directives"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/preprocessor-directives/preprocessor-nullable.md",
            "redirect_url": "/dotnet/csharp/language-reference/preprocessor-directives"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/preprocessor-directives/preprocessor-pragma-checksum.md",
            "redirect_url": "/dotnet/csharp/language-reference/preprocessor-directives"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/preprocessor-directives/preprocessor-pragma-warning.md",
            "redirect_url": "/dotnet/csharp/language-reference/preprocessor-directives"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/preprocessor-directives/preprocessor-pragma.md",
            "redirect_url": "/dotnet/csharp/language-reference/preprocessor-directives"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/preprocessor-directives/preprocessor-region.md",
            "redirect_url": "/dotnet/csharp/language-reference/preprocessor-directives"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/preprocessor-directives/preprocessor-undef.md",
            "redirect_url": "/dotnet/csharp/language-reference/preprocessor-directives"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/preprocessor-directives/preprocessor-warning.md",
            "redirect_url": "/dotnet/csharp/language-reference/preprocessor-directives"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/proposals/csharp-10.0/lambda-attributes.md",
            "redirect_url": "/dotnet/csharp/language-reference/proposals/csharp-10.0/lambda-improvements"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/proposals/csharp-7.0/index.md",
            "redirect_url": "/dotnet/csharp/language-reference/language-specification/readme"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/proposals/csharp-7.1/index.md",
            "redirect_url": "/dotnet/csharp/language-reference/language-specification/readme"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/proposals/csharp-7.2/index.md",
            "redirect_url": "/dotnet/csharp/language-reference/language-specification/variables#928-input-parameters"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/proposals/csharp-7.3/index.md",
            "redirect_url": "/dotnet/csharp/language-reference/proposals/csharp-7.3/ref-local-reassignment"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/proposals/csharp-8.0/index.md",
            "redirect_url": "/dotnet/csharp/language-reference/proposals/csharp-8.0/nullable-reference-types"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/proposals/csharp-9.0/index.md",
            "redirect_url": "/dotnet/csharp/language-reference/proposals/csharp-9.0/records"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/proposals/csharp-10.0/index.md",
            "redirect_url": "/dotnet/csharp/language-reference/proposals/csharp-10.0/record-structs"
        },
        {
            "source_path_from_root": "/docs/csharp/language-reference/proposals/csharp-11.0/index.md",
            "redirect_url": "/dotnet/csharp/language-reference/proposals/csharp-11.0/static-abstracts-in-interfaces"
        },
        {
            "source_path_from_root": "/docs/csharp/linq/create-a-nested-group.md",
            "redirect_url": "/dotnet/csharp/linq/standard-query-operators/grouping-data"
        },
        {
            "source_path_from_root": "/docs/csharp/linq/group-query-results.md",
            "redirect_url": "/dotnet/csharp/linq/standard-query-operators/grouping-data"
        },
        {
            "source_path_from_root": "/docs/csharp/linq/join-by-using-composite-keys.md",
            "redirect_url": "/dotnet/csharp/linq/standard-query-operators/join-operations"
        },
        {
            "source_path_from_root": "/docs/csharp/linq/perform-a-subquery-on-a-grouping-operation.md",
            "redirect_url": "/dotnet/csharp/linq/standard-query-operators/grouping-data"
        },
        {
            "source_path_from_root": "/docs/csharp/linq/perform-grouped-joins.md",
            "redirect_url": "/dotnet/csharp/linq/standard-query-operators/join-operations"
        },
        {
            "source_path_from_root": "/docs/csharp/linq/perform-inner-joins.md",
            "redirect_url": "/dotnet/csharp/linq/standard-query-operators/join-operations"
        },
        {
            "source_path_from_root": "/docs/csharp/linq/perform-left-outer-joins.md",
            "redirect_url": "/dotnet/csharp/linq/standard-query-operators/join-operations"
        },
        {
            "source_path_from_root": "/docs/csharp/linq/order-the-results-of-a-join-clause.md",
            "redirect_url": "/dotnet/csharp/linq/standard-query-operators/"
        },
        {
            "source_path_from_root": "/docs/csharp/linq/perform-custom-join-operations.md",
            "redirect_url": "/dotnet/csharp/linq/"
        },
        {
            "source_path_from_root": "/docs/csharp/linq/query-expression-basics.md",
            "redirect_url": "/dotnet/csharp/linq/get-started/query-expression-basics"
        },
        {
            "source_path_from_root": "/docs/csharp/linq/write-linq-queries.md",
            "redirect_url": "/dotnet/csharp/linq/get-started/write-linq-queries"
        },
        {
            "source_path_from_root": "/docs/csharp/linq/linq-in-csharp.md",
            "redirect_url": "/dotnet/csharp/linq/"
        },
        {
            "source_path_from_root": "/docs/csharp/local-functions-vs-lambdas.md",
            "redirect_url": "/dotnet/csharp/programming-guide/classes-and-structs/local-functions"
        },
        {
            "source_path_from_root": "/docs/csharp/methods-lambda-expressions.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/lambda-expressions"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs0012.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/assembly-references"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs0022.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/array-declaration-errors"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs0105.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/using-directive-errors"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs0138.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/using-directive-errors"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs0171.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/feature-version-errors"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs0182.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/parameter-argument-mismatch"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs0192.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/ref-modifiers-errors"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs0199.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/ref-modifiers-errors"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs0206.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/ref-modifiers-errors"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs0248.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/feature-version-errors"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs0251.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/feature-version-errors"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs0400.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/assembly-references"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs0431.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/using-directive-errors"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs0432.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/using-directive-errors"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs0440.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/using-directive-errors"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs0514.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/constructor-errors#static-constructors"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs0515.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/constructor-errors#static-constructors"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs0516.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/constructor-errors#constructor-calls-with-base-and-this"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs0517.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/constructor-errors#constructor-calls-with-base-and-this"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs0522.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/constructor-errors#constructor-calls-with-base-and-this"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs0526.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/constructor-errors#constructor-declarations"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs0568.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/constructor-errors#constructors-in-struct-types"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs0570.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/constructor-errors#CS0570"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs0576.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/using-directive-errors"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs0591.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/parameter-argument-mismatch"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs0599.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/parameter-argument-mismatch"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs0611.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/array-declaration-errors"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs0617.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/parameter-argument-mismatch"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs0623.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/array-declaration-errors"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs0631.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/ref-modifiers-errors"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs0633.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/parameter-argument-mismatch"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs0643.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/parameter-argument-mismatch"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs0655.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/parameter-argument-mismatch"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs0687.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/using-directive-errors"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs0710.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/constructor-errors#constructor-declarations"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs0719.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/array-declaration-errors"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs0747.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/array-declaration-errors"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs0748.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/lambda-expression-errors#lambda-expression-parameters-and-returns"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs0765.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/expression-tree-restrictions"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs0820.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/array-declaration-errors"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs0824.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/constructor-errors#constructor-declarations"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs0831.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/expression-tree-restrictions"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs0832.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/expression-tree-restrictions"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs0835.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/expression-tree-restrictions"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs0838.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/expression-tree-restrictions"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs0839.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/parameter-argument-mismatch"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs1016.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/parameter-argument-mismatch"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs1510.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/ref-modifiers-errors"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs1529.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/using-directive-errors"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs1537.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/using-directive-errors"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs1552.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/array-declaration-errors"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs1586.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/array-declaration-errors"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs1605.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/ref-modifiers-errors"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs1621.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/lambda-expression-errors#syntax-limitations-in-lambda-expressions"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs1623.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/ref-modifiers-errors"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs1628.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/lambda-expression-errors#syntax-limitations-in-lambda-expressions"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs1632.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/lambda-expression-errors#syntax-limitations-in-lambda-expressions"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs1649.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/ref-modifiers-errors"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs1651.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/ref-modifiers-errors"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs1655.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/ref-modifiers-errors"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs1657.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/ref-modifiers-errors"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs1673.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/lambda-expression-errors#syntax-limitations-in-lambda-expressions"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs1686.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/lambda-expression-errors#syntax-limitations-in-lambda-expressions"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs1706.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/lambda-expression-errors#syntax-limitations-in-lambda-expressions"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs1714.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/assembly-references"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs1920.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/array-declaration-errors"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs1925.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/array-declaration-errors"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs1939.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/ref-modifiers-errors"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs1944.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/expression-tree-restrictions"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs1945.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/expression-tree-restrictions"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs1951.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/expression-tree-restrictions"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs1952.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/expression-tree-restrictions"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs1953.md",
            "redirect_url": "/dotnet/csharp/misc/cs0837"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs1954.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/array-declaration-errors"
        },
        {
            "source_path_from_root": "/docs/csharp/misc/cs3016.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/array-declaration-errors"
        },
        {
            "source_path_from_root": "/docs/csharp/namespaces-and-assemblies.md",
            "redirect_url": "/dotnet/csharp/fundamentals/types/namespaces"
        },
        {
            "source_path_from_root": "/docs/csharp/nullable-attributes.md",
            "redirect_url": "/dotnet/csharp/nullable-migration-strategies"
        },
        {
            "source_path_from_root": "/docs/csharp/nullable-warnings.md",
            "redirect_url": "/dotnet/csharp/language-reference/compiler-messages/nullable-warnings"
        },
        {
            "source_path_from_root": "/docs/csharp/parallel.md",
            "redirect_url": "/dotnet/standard/parallel-programming/index"
        },
        {
            "source_path_from_root": "/docs/csharp/pattern-matching.md",
            "redirect_url": "/dotnet/csharp/fundamentals/functional/pattern-matching"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/arrays/arrays-as-objects.md",
            "redirect_url": "/dotnet/csharp/programming-guide/arrays"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/arrays/passing-arrays-using-ref-and-out.md",
            "redirect_url": "/dotnet/csharp/programming-guide/arrays"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/classes-and-structs/anonymous-types.md",
            "redirect_url": "/dotnet/csharp/fundamentals/types/anonymous-types"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/classes-and-structs/classes.md",
            "redirect_url": "/dotnet/csharp/fundamentals/types/classes"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/classes-and-structs/destructors.md",
            "redirect_url": "/dotnet/csharp/programming-guide/classes-and-structs/finalizers"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/classes-and-structs/how-to-access-a-collection-class-with-foreach.md",
            "redirect_url": "/dotnet/csharp/language-reference/statements/iteration-statements"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/classes-and-structs/how-to-know-the-difference-passing-a-struct-and-passing-a-class-to-a-method.md",
            "redirect_url": "/dotnet/csharp/language-reference/keywords/method-parameters"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/classes-and-structs/how-to-use-named-and-optional-arguments-in-office-programming.md",
            "redirect_url": "/dotnet/csharp/advanced-topics/interop/how-to-use-named-and-optional-arguments-in-office-programming"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/classes-and-structs/index.md",
            "redirect_url": "/dotnet/csharp/fundamentals/object-oriented"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/classes-and-structs/inheritance.md",
            "redirect_url": "/dotnet/csharp/fundamentals/object-oriented/inheritance"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/classes-and-structs/objects.md",
            "redirect_url": "/dotnet/csharp/fundamentals/object-oriented/objects"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/classes-and-structs/passing-parameters.md",
            "redirect_url": "/dotnet/csharp/language-reference/keywords/method-parameters"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/classes-and-structs/passing-reference-type-parameters.md",
            "redirect_url": "/dotnet/csharp/language-reference/keywords/method-parameters"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/classes-and-structs/passing-value-type-parameters.md",
            "redirect_url": "/dotnet/csharp/language-reference/keywords/method-parameters"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/classes-and-structs/polymorphism.md",
            "redirect_url": "/dotnet/csharp/fundamentals/object-oriented/polymorphism"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/classes-and-structs/records.md",
            "redirect_url": "/dotnet/csharp/fundamentals/types/records"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/classes-and-structs/ref-returns.md",
            "redirect_url": "/dotnet/csharp/language-reference/statements/declarations"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/classes-and-structs/structs.md",
            "redirect_url": "/dotnet/csharp/language-reference/builtin-types/struct"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/classes-and-structs/using-structs.md",
            "redirect_url": "/dotnet/csharp/language-reference/builtin-types/struct"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/arrays/implicitly-typed-arrays.md",
            "redirect_url": "/dotnet/csharp/language-reference/builtin-types/arrays#implicitly-typed-arrays"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/arrays/index.md",
            "redirect_url": "/dotnet/csharp/language-reference/builtin-types/arrays"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/arrays/jagged-arrays.md",
            "redirect_url": "/dotnet/csharp/language-reference/builtin-types/arrays#jagged-arrays"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/arrays/multidimensional-arrays.md",
            "redirect_url": "/dotnet/csharp/language-reference/builtin-types/arrays#multidimensional-arrays"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/arrays/passing-arrays-as-arguments.md",
            "redirect_url": "/dotnet/csharp/language-reference/builtin-types/arrays#passing-arrays-as-arguments"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/arrays/single-dimensional-arrays.md",
            "redirect_url": "/dotnet/csharp/language-reference/builtin-types/arrays#single-dimensional-arrays"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/arrays/using-foreach-with-arrays.md",
            "redirect_url": "/dotnet/csharp/language-reference/builtin-types/arrays"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/assemblies-gac/friend-assemblies.md",
            "redirect_url": "/dotnet/standard/assembly/friend",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/assemblies-gac/how-to-create-and-use-assemblies-using-the-command-line.md",
            "redirect_url": "/dotnet/standard/assembly/index"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/assemblies-gac/how-to-create-signed-friend-assemblies.md",
            "redirect_url": "/dotnet/standard/assembly/create-signed-friend"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/assemblies-gac/how-to-create-unsigned-friend-assemblies.md",
            "redirect_url": "/dotnet/standard/assembly/create-unsigned-friend"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/assemblies-gac/how-to-determine-if-a-file-is-an-assembly.md",
            "redirect_url": "/dotnet/standard/assembly/identify"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/assemblies-gac/how-to-load-and-unload-assemblies.md",
            "redirect_url": "/dotnet/standard/assembly/load-unload"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/assemblies-gac/how-to-share-an-assembly-with-other-applications.md",
            "redirect_url": "/dotnet/framework/app-domains/how-to-share-an-assembly-with-other-applications"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/assemblies-gac/index.md",
            "redirect_url": "/dotnet/standard/assembly/index",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/assemblies-gac/walkthrough-embedding-type-information-from-microsoft-office-assemblies.md",
            "redirect_url": "/previous-versions/visualstudio/visual-studio-2013/ee317478(v%3dvs.120)"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/assemblies-gac/walkthrough-embedding-types-from-managed-assemblies-in-visual-studio.md",
            "redirect_url": "/dotnet/standard/assembly/embed-types-visual-studio"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/async/asynchronous-programming-with-async-and-await.md",
            "redirect_url": "/dotnet/csharp/asynchronous-programming"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/async/cancel-remaining-async-tasks-after-one-is-complete.md",
            "redirect_url": "/dotnet/csharp/asynchronous-programming"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/async/control-flow-in-async-programs.md",
            "redirect_url": "/dotnet/csharp/asynchronous-programming/task-asynchronous-programming-model#BKMK_WhatHappensUnderstandinganAsyncMethod"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/async/fine-tuning-your-async-application.md",
            "redirect_url": "/dotnet/csharp/asynchronous-programming"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/async/handling-reentrancy-in-async-apps.md",
            "redirect_url": "/dotnet/csharp/asynchronous-programming"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/async/how-to-extend-the-async-walkthrough-by-using-task-whenall.md",
            "redirect_url": "/dotnet/csharp/asynchronous-programming"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/async/how-to-make-multiple-web-requests-in-parallel-by-using-async-and-await.md",
            "redirect_url": "/dotnet/csharp/asynchronous-programming"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/async/walkthrough-accessing-the-web-by-using-async-and-await.md",
            "redirect_url": "/dotnet/csharp/asynchronous-programming"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/async/async-return-types.md",
            "redirect_url": "/dotnet/csharp/asynchronous-programming/async-return-types"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/async/cancel-async-tasks-after-a-period-of-time.md",
            "redirect_url": "/dotnet/csharp/asynchronous-programming/cancel-async-tasks-after-a-period-of-time"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/async/index.md",
            "redirect_url": "/dotnet/csharp/asynchronous-programming/async-scenarios"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/async/start-multiple-async-tasks-and-process-them-as-they-complete.md",
            "redirect_url": "/dotnet/csharp/asynchronous-programming/start-multiple-async-tasks-and-process-them-as-they-complete"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/async/task-asynchronous-programming-model.md",
            "redirect_url": "/dotnet/csharp/asynchronous-programming/task-asynchronous-programming-model"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/async/using-async-for-file-access.md",
            "redirect_url": "/dotnet/csharp/asynchronous-programming/using-async-for-file-access"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/async/cancel-an-async-task-or-a-list-of-tasks.md",
            "redirect_url": "/dotnet/csharp/asynchronous-programming/cancel-an-async-task-or-a-list-of-tasks"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/attributes/index.md",
            "redirect_url": "/dotnet/csharp/advanced-topics/reflection-and-attributes/"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/attributes/attributeusage.md",
            "redirect_url": "/dotnet/csharp/language-reference/attributes/general"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/attributes/common-attributes.md",
            "redirect_url": "/dotnet/csharp/language-reference/attributes/global"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/attributes/creating-custom-attributes.md",
            "redirect_url": "/dotnet/csharp/advanced-topics/reflection-and-attributes/creating-custom-attributes"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/attributes/accessing-attributes-by-using-reflection.md",
            "redirect_url": "/dotnet/csharp/advanced-topics/reflection-and-attributes/accessing-attributes-by-using-reflection"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/attributes/how-to-create-a-c-cpp-union-by-using-attributes.md",
            "redirect_url": "/dotnet/csharp/advanced-topics/reflection-and-attributes/how-to-create-a-c-cpp-union-by-using-attributes"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/caller-information.md",
            "redirect_url": "/dotnet/csharp/language-reference/attributes/caller-information"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/collections.md",
            "redirect_url": "/dotnet/csharp/language-reference/builtin-types/collections",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/expression-trees/index.md",
            "redirect_url": "/dotnet/csharp/advanced-topics/expression-trees/index"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/expression-trees/how-to-execute-expression-trees.md",
            "redirect_url": "/dotnet/csharp/advanced-topics/expression-trees/expression-trees-execution"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/expression-trees/how-to-modify-expression-trees.md",
            "redirect_url": "/dotnet/csharp/advanced-topics/expression-trees/expression-trees-translating"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/expression-trees/debugging-expression-trees-in-visual-studio.md",
            "redirect_url": "/dotnet/csharp/advanced-topics/expression-trees/debugging-expression-trees-in-visual-studio"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/expression-trees/debugview-syntax.md",
            "redirect_url": "/dotnet/csharp/programming-guide/concepts/linq/how-to-use-expression-trees-to-build-dynamic-queries"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/expression-trees/how-to-use-expression-trees-to-build-dynamic-queries.md",
            "redirect_url": "/dotnet/csharp/advanced-topics/expression-trees/debugview-syntax"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/adding-elements-attributes-and-nodes-to-an-xml-tree.md",
            "redirect_url": "/dotnet/standard/linq/add-elements-attributes-nodes-xml-tree",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/advanced-query-techniques-linq-to-xml.md",
            "redirect_url": "/dotnet/standard/linq/join-two-collections",
            "redirect_document_id": false
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/aggregation-operations.md",
            "redirect_url": "/dotnet/csharp/linq/standard-query-operators/",
            "redirect_document_id": false
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/applicability-of-functional-transformation.md",
            "redirect_url": "/dotnet/standard/linq/applicability-functional-transformation",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/atomized-xname-and-xnamespace-objects-linq-to-xml.md",
            "redirect_url": "/dotnet/standard/linq/atomized-xname-xnamespace-objects",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/basic-linq-query-operations.md",
            "redirect_url": "/dotnet/csharp/linq/standard-query-operators/"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/classification-of-standard-query-operators-by-manner-of-execution.md",
            "redirect_url": "/dotnet/csharp/linq/query-a-collection-of-objects"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/query-expression-syntax-for-standard-query-operators.md",
            "redirect_url": "/dotnet/csharp/linq/standard-query-operators/"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/basic-queries-linq-to-xml.md",
            "redirect_url": "/dotnet/standard/linq/basic-queries-linq-to-xml",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/chaining-queries-example.md",
            "redirect_url": "/dotnet/standard/linq/chain-queries-example",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/chaining-standard-query-operators-together.md",
            "redirect_url": "/dotnet/standard/linq/chain-standard-query-operators-together",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/cloning-vs-attaching.md",
            "redirect_url": "/dotnet/standard/linq/create-xml-trees#example-attach-vs-clone",
            "redirect_document_id": false
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/comparison-of-xpath-and-linq-to-xml.md",
            "redirect_url": "/dotnet/standard/linq/comparison-xpath-linq-xml",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/concatenation-operations.md",
            "redirect_url": "/dotnet/csharp/linq/standard-query-operators/",
            "redirect_document_id": false
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/concepts-and-terminology-functional-transformation.md",
            "redirect_url": "/dotnet/standard/linq/concepts-terminology-functional-transformation",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/converting-data-types.md",
            "redirect_url": "/dotnet/csharp/linq/standard-query-operators/converting-data-types",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/creating-the-source-office-open-xml-document.md",
            "redirect_url": "/dotnet/standard/linq/create-source-office-open-xml-document",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/creating-xml-trees-linq-to-xml-2.md",
            "redirect_url": "/dotnet/standard/linq/create-xml-trees",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/creating-xml-trees.md",
            "redirect_url": "/dotnet/standard/linq/create-xml-trees",
            "redirect_document_id": false
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/data-transformations-with-linq.md",
            "redirect_url": "/dotnet/csharp/linq/standard-query-operators/"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/deferred-execution-and-lazy-evaluation-in-linq-to-xml.md",
            "redirect_url": "/dotnet/standard/linq/deferred-execution-lazy-evaluation",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/deferred-execution-example.md",
            "redirect_url": "/dotnet/standard/linq/deferred-execution-example",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/element-operations.md",
            "redirect_url": "/dotnet/csharp/linq/standard-query-operators/",
            "redirect_document_id": false
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/equality-operations.md",
            "redirect_url": "/dotnet/csharp/linq/standard-query-operators/",
            "redirect_document_id": false
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/example-that-outputs-office-open-xml-document-parts.md",
            "redirect_url": "/dotnet/standard/linq/example-outputs-office-open-xml-document-parts",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/filtering-data.md",
            "redirect_url": "/dotnet/csharp/linq/standard-query-operators/filtering-data",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/finding-text-in-word-documents.md",
            "redirect_url": "/dotnet/standard/linq/find-text-word-documents",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/finding-the-default-paragraph-style.md",
            "redirect_url": "/dotnet/standard/linq/find-default-paragraph-style",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/functional-construction-linq-to-xml.md",
            "redirect_url": "/dotnet/standard/linq/functional-construction",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/functional-programming-vs-imperative-programming.md",
            "redirect_url": "/dotnet/standard/linq/functional-vs-imperative-programming",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/functional-transformation-of-xml.md",
            "redirect_url": "/dotnet/standard/linq/functional-transformation-xml",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/functional-vs-procedural-programming-linq-to-xml.md",
            "redirect_url": "/dotnet/standard/linq/functional-vs-procedural-programming",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/generation-operations.md",
            "redirect_url": "/dotnet/csharp/linq/standard-query-operators/",
            "redirect_document_id": false
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/getting-started-linq-to-xml.md",
            "redirect_url": "/dotnet/standard/linq/linq-xml-overview",
            "redirect_document_id": false
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/getting-started-with-linq.md",
            "redirect_url": "/dotnet/csharp/linq/"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-build-linq-to-xml-examples.md",
            "redirect_url": "/dotnet/standard/linq/build-linq-xml-examples",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-calculate-intermediate-values.md",
            "redirect_url": "/dotnet/standard/linq/calculate-intermediate-values",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-catch-parsing-errors.md",
            "redirect_url": "/dotnet/standard/linq/catch-parsing-errors",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-chain-axis-method-calls-linq-to-xml.md",
            "redirect_url": "/dotnet/standard/linq/chain-axis-method-calls",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-change-the-namespace-for-an-entire-xml-tree.md",
            "redirect_url": "/dotnet/standard/linq/change-namespace-entire-xml-tree",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-control-namespace-prefixes-linq-to-xml.md",
            "redirect_url": "/dotnet/standard/linq/control-namespace-prefixes",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-control-the-type-of-a-projection.md",
            "redirect_url": "/dotnet/standard/linq/control-type-projection",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-create-a-document-with-namespaces-linq-to-xml.md",
            "redirect_url": "/dotnet/standard/linq/create-document-namespaces-csharp",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-create-a-tree-from-an-xmlreader.md",
            "redirect_url": "/dotnet/standard/linq/create-tree-xmlreader",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-create-hierarchy-using-grouping.md",
            "redirect_url": "/dotnet/standard/linq/create-hierarchy-grouping",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-debug-empty-query-results-sets.md",
            "redirect_url": "/dotnet/standard/linq/debug-empty-query-results-sets",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-filter-on-an-attribute-xpath-linq-to-xml.md",
            "redirect_url": "/dotnet/standard/linq/filter-attribute",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-filter-on-an-optional-element.md",
            "redirect_url": "/dotnet/standard/linq/filter-optional-element",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-filter-on-element-names-linq-to-xml.md",
            "redirect_url": "/dotnet/standard/linq/filter-element-names",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-find-a-child-element-xpath-linq-to-xml.md",
            "redirect_url": "/dotnet/standard/linq/find-child-element",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-find-a-list-of-child-elements-xpath-linq-to-xml.md",
            "redirect_url": "/dotnet/standard/linq/find-list-child-elements",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-find-a-single-descendant-using-the-descendants-method.md",
            "redirect_url": "/dotnet/standard/linq/find-single-descendant-descendants-method",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-find-a-union-of-two-location-paths-xpath-linq-to-xml.md",
            "redirect_url": "/dotnet/standard/linq/find-union-two-location-paths",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-find-all-nodes-in-a-namespace.md",
            "redirect_url": "/dotnet/standard/linq/find-all-nodes-namespace",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-find-an-attribute-of-the-parent-xpath-linq-to-xml.md",
            "redirect_url": "/dotnet/standard/linq/find-attribute-parent",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-find-an-element-with-a-specific-attribute.md",
            "redirect_url": "/dotnet/standard/linq/find-element-specific-attribute",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-find-an-element-with-a-specific-child-element.md",
            "redirect_url": "/dotnet/standard/linq/find-element-specific-child-element",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-find-attributes-of-siblings-with-a-specific-name-xpath-linq-to-xml.md",
            "redirect_url": "/dotnet/standard/linq/find-attributes-siblings-specific-name",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-find-child-elements-based-on-position-xpath-linq-to-xml.md",
            "redirect_url": "/dotnet/standard/linq/find-child-elements-based-position",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-find-descendant-elements-xpath-linq-to-xml.md",
            "redirect_url": "/dotnet/standard/linq/find-descendant-elements",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-find-descendants-of-a-child-element-xpath-linq-to-xml.md",
            "redirect_url": "/dotnet/standard/linq/find-descendants-child-element",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-find-descendants-with-a-specific-element-name.md",
            "redirect_url": "/dotnet/standard/linq/find-descendants-specific-element-name",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-find-elements-in-a-namespace-xpath-linq-to-xml.md",
            "redirect_url": "/dotnet/standard/linq/find-elements-namespace",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-find-elements-with-a-specific-attribute-xpath-linq-to-xml.md",
            "redirect_url": "/dotnet/standard/linq/find-elements-specific-attribute",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-find-preceding-siblings-xpath-linq-to-xml.md",
            "redirect_url": "/dotnet/standard/linq/find-preceding-siblings",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-find-related-elements-xpath-linq-to-xml.md",
            "redirect_url": "/dotnet/standard/linq/find-related-elements",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-find-sibling-nodes-xpath-linq-to-xml.md",
            "redirect_url": "/dotnet/standard/linq/find-sibling-nodes",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-find-the-immediate-preceding-sibling-xpath-linq-to-xml.md",
            "redirect_url": "/dotnet/standard/linq/find-immediate-preceding-sibling",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-find-the-root-element-xpath-linq-to-xml.md",
            "redirect_url": "/dotnet/standard/linq/find-root-element",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-generate-text-files-from-xml.md",
            "redirect_url": "/dotnet/standard/linq/generate-text-files-xml",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-generate-xml-from-csv-files.md",
            "redirect_url": "/dotnet/standard/linq/generate-xml-csv-files",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-join-two-collections-linq-to-xml.md",
            "redirect_url": "/dotnet/standard/linq/join-two-collections",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-list-all-nodes-in-a-tree.md",
            "redirect_url": "/dotnet/standard/linq/list-all-nodes-tree",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-load-xml-from-a-file.md",
            "redirect_url": "/dotnet/standard/linq/load-xml-file",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-modify-an-office-open-xml-document.md",
            "redirect_url": "/dotnet/standard/linq/modify-office-open-xml-document",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-parse-a-string.md",
            "redirect_url": "/dotnet/standard/linq/parse-string",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-perform-streaming-transform-of-large-xml-documents.md",
            "redirect_url": "/dotnet/standard/linq/perform-streaming-transform-large-xml-documents",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-perform-streaming-transformations-of-text-to-xml.md",
            "redirect_url": "/dotnet/standard/linq/perform-streaming-transformations-text-xml",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-populate-an-xml-tree-from-the-file-system.md",
            "redirect_url": "/dotnet/standard/linq/populate-xml-tree-file-system",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-populate-an-xml-tree-with-an-xmlwriter-linq-to-xml.md",
            "redirect_url": "/dotnet/standard/linq/populate-xml-tree-xmlwriter",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-project-a-new-type-linq-to-xml.md",
            "redirect_url": "/dotnet/standard/linq/project-new-type",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-project-an-anonymous-type.md",
            "redirect_url": "/dotnet/standard/linq/project-anonymous-type",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-project-an-object-graph.md",
            "redirect_url": "/dotnet/standard/linq/project-object-graph",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-query-an-assembly-s-metadata-with-reflection-linq.md",
            "redirect_url": "/dotnet/csharp/advanced-topics/reflection-and-attributes/how-to-query-assembly-metadata-with-reflection-linq",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-query-linq-to-xml-using-xpath.md",
            "redirect_url": "/dotnet/standard/linq/query-linq-xml-xpath",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-read-and-write-an-encoded-document.md",
            "redirect_url": "/dotnet/standard/linq/read-write-encoded-document",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-retrieve-a-collection-of-attributes-linq-to-xml.md",
            "redirect_url": "/dotnet/standard/linq/retrieve-collection-attributes",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-retrieve-a-collection-of-elements-linq-to-xml.md",
            "redirect_url": "/dotnet/standard/linq/retrieve-collection-elements",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-retrieve-a-single-attribute-linq-to-xml.md",
            "redirect_url": "/dotnet/standard/linq/retrieve-single-attribute",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-retrieve-a-single-child-element-linq-to-xml.md",
            "redirect_url": "/dotnet/standard/linq/retrieve-single-child-element",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-retrieve-paragraphs-from-an-office-open-xml-document.md",
            "redirect_url": "/dotnet/standard/linq/retrieve-paragraphs-office-open-xml-document",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-retrieve-the-shallow-value-of-an-element.md",
            "redirect_url": "/dotnet/standard/linq/retrieve-shallow-value-element",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-retrieve-the-value-of-an-attribute-linq-to-xml.md",
            "redirect_url": "/dotnet/standard/linq/retrieve-value-attribute",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-retrieve-the-value-of-an-element-linq-to-xml.md",
            "redirect_url": "/dotnet/standard/linq/retrieve-value-element",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-serialize-using-datacontractserializer.md",
            "redirect_url": "/dotnet/standard/linq/serialize-datacontractserializer",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-serialize-using-xmlserializer.md",
            "redirect_url": "/dotnet/standard/linq/serialize-xmlserializer",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-sort-elements-on-multiple-keys.md",
            "redirect_url": "/dotnet/standard/linq/sort-elements-multiple-keys",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-sort-elements.md",
            "redirect_url": "/dotnet/standard/linq/sort-elements",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-stream-xml-fragments-from-an-xmlreader.md",
            "redirect_url": "/dotnet/standard/linq/stream-xml-fragments-xmlreader",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-stream-xml-fragments-with-access-to-header-information.md",
            "redirect_url": "/dotnet/standard/linq/stream-xml-fragments-access-header-information",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-transform-the-shape-of-an-xml-tree.md",
            "redirect_url": "/dotnet/standard/linq/transform-shape-xml-tree",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-use-annotations-to-transform-linq-to-xml-trees-in-an-xslt-style.md",
            "redirect_url": "/dotnet/standard/linq/use-annotations-transform-linq-xml-trees-xslt-style",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-validate-using-xsd-linq-to-xml.md",
            "redirect_url": "/dotnet/standard/linq/validate-xsd",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-work-with-dictionaries-using-linq-to-xml.md",
            "redirect_url": "/dotnet/standard/linq/work-dictionaries-linq-xml",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-write-a-linq-to-xml-axis-method.md",
            "redirect_url": "/dotnet/standard/linq/write-linq-xml-axis-method",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-write-a-query-that-finds-elements-based-on-context.md",
            "redirect_url": "/dotnet/standard/linq/write-query-finds-elements-based-context",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-write-queries-on-xml-in-namespaces.md",
            "redirect_url": "/dotnet/standard/linq/write-queries-xml-namespaces",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/how-to-write-queries-with-complex-filtering.md",
            "redirect_url": "/dotnet/standard/linq/write-queries-complex-filtering",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/in-memory-xml-tree-modification-vs-functional-construction-linq-to-xml.md",
            "redirect_url": "/dotnet/standard/linq/in-memory-xml-tree-modification-vs-functional-construction",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/intermediate-materialization.md",
            "redirect_url": "/dotnet/standard/linq/intermediate-materialization",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/index.md",
            "redirect_url": "/dotnet/csharp/linq/"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/introduction-to-linq.md",
            "redirect_url": "/dotnet/csharp/programming-guide/concepts/linq"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/introduction-to-linq-queries.md",
            "redirect_url": "/dotnet/csharp/linq/get-started/introduction-to-linq-queries"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/type-relationships-in-linq-query-operations.md",
            "redirect_url": "/dotnet/csharp/linq/get-started/type-relationships-in-linq-query-operations"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/features-that-support-linq.md",
            "redirect_url": "/dotnet/csharp/linq/get-started/features-that-support-linq"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/grouping-data.md",
            "redirect_url": "/dotnet/csharp/linq/standard-query-operators/grouping-data"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/introduction-to-pure-functional-transformations.md",
            "redirect_url": "/dotnet/standard/linq/introduction-pure-functional-transformations",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/join-operations.md",
            "redirect_url": "/dotnet/csharp/linq/standard-query-operators/join-operations"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/linq-and-generic-types.md",
            "redirect_url": "/dotnet/csharp/linq/get-started/type-relationships-in-linq-query-operations"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/linq-and-reflection.md",
            "redirect_url": "/dotnet/csharp/advanced-topics/reflection-and-attributes/how-to-query-assembly-metadata-with-reflection-linq"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/linq-and-strings.md",
            "redirect_url": "/dotnet/csharp/linq"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/linq-to-objects.md",
            "redirect_url": "/dotnet/csharp/linq/query-a-collection-of-objects"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/linq-to-xml-annotations.md",
            "redirect_url": "/dotnet/standard/linq/linq-xml-annotations",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/linq-to-xml-axes-overview.md",
            "redirect_url": "/dotnet/standard/linq/linq-xml-axes-overview",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/linq-to-xml-axes.md",
            "redirect_url": "/dotnet/standard/linq/linq-xml-axes-overview",
            "redirect_document_id": false
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/linq-to-xml-classes-overview.md",
            "redirect_url": "/dotnet/standard/linq/linq-xml-classes-overview",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/linq-to-xml-events.md",
            "redirect_url": "/dotnet/standard/linq/linq-xml-events",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/linq-to-xml-for-xpath-users.md",
            "redirect_url": "/dotnet/standard/linq/comparison-xpath-linq-xml",
            "redirect_document_id": false
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/linq-to-xml-overview.md",
            "redirect_url": "/dotnet/standard/linq/linq-xml-overview",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/linq-to-xml-programming-overview.md",
            "redirect_url": "/dotnet/standard/linq/linq-xml-overview",
            "redirect_document_id": false
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/linq-to-xml-security.md",
            "redirect_url": "/dotnet/standard/linq/linq-xml-security",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/linq-to-xml-vs-dom.md",
            "redirect_url": "/dotnet/standard/linq/linq-xml-vs-dom",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/linq-to-xml-vs-other-xml-technologies.md",
            "redirect_url": "/dotnet/standard/linq/linq-xml-vs-xml-technologies",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/linq-to-xml.md",
            "redirect_url": "/dotnet/standard/linq/linq-xml-overview",
            "redirect_document_id": false
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/maintaining-name-value-pairs.md",
            "redirect_url": "/dotnet/standard/linq/maintain-name-value-pairs",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/mixed-declarative-code-imperative-code-bugs-linq-to-xml.md",
            "redirect_url": "/dotnet/standard/linq/mixed-declarative-imperative-code-bugs",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/modifying-elements-attributes-and-nodes-in-an-xml-tree.md",
            "redirect_url": "/dotnet/standard/linq/modify-elements-attributes-nodes-xml-tree",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/modifying-xml-trees-linq-to-xml.md",
            "redirect_url": "/dotnet/standard/linq/in-memory-xml-tree-modification-vs-functional-construction",
            "redirect_document_id": false
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/namespaces-overview-linq-to-xml.md",
            "redirect_url": "/dotnet/standard/linq/namespaces-overview",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/parsing-xml.md",
            "redirect_url": "/dotnet/standard/linq/parse-string",
            "redirect_document_id": false
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/partitioning-data.md",
            "redirect_url": "/dotnet/csharp/linq/standard-query-operators/partitioning-data",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/performance-of-chained-queries-linq-to-xml.md",
            "redirect_url": "/dotnet/standard/linq/performance-chained-queries",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/pre-atomization-of-xname-objects-linq-to-xml.md",
            "redirect_url": "/dotnet/standard/linq/pre-atomization-xname-objects",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/preserving-white-space-while-loading-or-parsing-xml1.md",
            "redirect_url": "/dotnet/standard/linq/preserve-white-space-loading-parsing-xml",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/preserving-white-space-while-serializing.md",
            "redirect_url": "/dotnet/standard/linq/preserve-white-space-serializing",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/programming-guide-linq-to-xml.md",
            "redirect_url": "/dotnet/standard/linq/linq-xml-overview",
            "redirect_document_id": false
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/programming-with-nodes.md",
            "redirect_url": "/dotnet/standard/linq/program-nodes",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/projecting-xml-in-a-different-shape.md",
            "redirect_url": "/dotnet/standard/linq/project-xml-different-shape",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/projection-operations.md",
            "redirect_url": "/dotnet/csharp/linq/standard-query-operators/projection-operations",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/projections-and-transformations-linq-to-xml.md",
            "redirect_url": "/dotnet/standard/linq/work-dictionaries-linq-xml",
            "redirect_document_id": false
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/pure-functional-transformations-of-xml.md",
            "redirect_url": "/dotnet/standard/linq/introduction-pure-functional-transformations",
            "redirect_document_id": false
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/quantifier-operations.md",
            "redirect_url": "/dotnet/csharp/linq/standard-query-operators/quantifier-operations",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/query-syntax-and-method-syntax-in-linq.md",
            "redirect_url": "/dotnet/csharp/linq/get-started/write-linq-queries",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/querying-an-xdocument-vs-querying-an-xelement.md",
            "redirect_url": "/dotnet/standard/linq/query-xdocument-vs-query-xelement",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/querying-xml-trees.md",
            "redirect_url": "/dotnet/standard/linq/query-xml-trees-overview",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/refactoring-into-pure-functions.md",
            "redirect_url": "/dotnet/standard/linq/refactor-pure-functions",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/refactoring-using-a-pure-function.md",
            "redirect_url": "/dotnet/standard/linq/refactor-pure-function",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/refactoring-using-an-extension-method.md",
            "redirect_url": "/dotnet/standard/linq/refactor-extension-method",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/reference-linq-to-xml.md",
            "redirect_url": "/dotnet/standard/linq/reference",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/removing-elements-attributes-and-nodes-from-an-xml-tree.md",
            "redirect_url": "/dotnet/standard/linq/remove-elements-attributes-nodes-xml-tree",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/retrieving-the-paragraphs-and-their-styles.md",
            "redirect_url": "/dotnet/standard/linq/retrieve-paragraphs-styles",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/retrieving-the-text-of-the-paragraphs.md",
            "redirect_url": "/dotnet/standard/linq/retrieve-text-paragraphs",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/sample-xml-documents-linq-to-xml.md",
            "redirect_url": "/dotnet/standard/linq/sample-xml-file-typical-purchase-order",
            "redirect_document_id": false
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/sample-xml-file-books-linq-to-xml.md",
            "redirect_url": "/dotnet/standard/linq/sample-xml-file-books",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/sample-xml-file-consolidated-purchase-orders.md",
            "redirect_url": "/dotnet/standard/linq/sample-xml-file-consolidated-purchase-orders",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/sample-xml-file-customers-and-orders-in-a-namespace.md",
            "redirect_url": "/dotnet/standard/linq/sample-xml-file-customers-orders-namespace",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/sample-xml-file-customers-and-orders-linq-to-xml-2.md",
            "redirect_url": "/dotnet/standard/linq/sample-xml-file-customers-orders",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/sample-xml-file-multiple-purchase-orders-in-a-namespace.md",
            "redirect_url": "/dotnet/standard/linq/sample-xml-file-multiple-purchase-orders-namespace",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/sample-xml-file-multiple-purchase-orders-linq-to-xml.md",
            "redirect_url": "/dotnet/standard/linq/sample-xml-file-multiple-purchase-orders",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/sample-xml-file-numerical-data-in-a-namespace.md",
            "redirect_url": "/dotnet/standard/linq/sample-xml-file-numerical-data-namespace",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/sample-xml-file-numerical-data-linq-to-xml.md",
            "redirect_url": "/dotnet/standard/linq/sample-xml-file-numerical-data",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/sample-xml-file-test-configuration-in-a-namespace1.md",
            "redirect_url": "/dotnet/standard/linq/sample-xml-file-test-configuration-namespace",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/sample-xml-file-test-configuration-linq-to-xml.md",
            "redirect_url": "/dotnet/standard/linq/sample-xml-file-test-configuration",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/sample-xml-file-typical-purchase-order-in-a-namespace.md",
            "redirect_url": "/dotnet/standard/linq/sample-xml-file-typical-purchase-order-namespace",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/sample-xml-file-typical-purchase-order-linq-to-xml-1.md",
            "redirect_url": "/dotnet/standard/linq/sample-xml-file-typical-purchase-order",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/sample-xsd-file-customers-and-orders1.md",
            "redirect_url": "/dotnet/standard/linq/sample-xsd-file-customers-orders",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/scope-of-default-namespaces.md",
            "redirect_url": "/dotnet/standard/linq/scope-default-namespaces",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/serializing-to-an-xmlreader-invoking-xslt.md",
            "redirect_url": "/dotnet/standard/linq/serialize-xmlreader-invoke-xslt",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/serializing-to-files-textwriters-and-xmlwriters.md",
            "redirect_url": "/dotnet/standard/linq/serialize-files-textwriters-xmlwriters",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/serializing-with-an-xml-declaration.md",
            "redirect_url": "/dotnet/standard/linq/serialize-xml-declaration",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/serializing-xml-trees.md",
            "redirect_url": "/dotnet/standard/linq/serialize-files-textwriters-xmlwriters",
            "redirect_document_id": false
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/set-operations.md",
            "redirect_url": "/dotnet/csharp/linq/standard-query-operators/set-operations",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/shape-of-wordprocessingml-documents.md",
            "redirect_url": "/dotnet/standard/linq/xml-shape-wordprocessingml-documents",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/sorting-data.md",
            "redirect_url": "/dotnet/csharp/linq/standard-query-operators/sorting-data",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/standard-query-operators-overview.md",
            "redirect_url": "/dotnet/csharp/linq/standard-query-operators/"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/statically-compiled-queries-linq-to-xml.md",
            "redirect_url": "/dotnet/standard/linq/statically-compiled-queries",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/style-part-of-a-wordprocessingml-document.md",
            "redirect_url": "/dotnet/standard/linq/style-part-wordprocessingml-document",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/tutorial-chaining-queries-together.md",
            "redirect_url": "/dotnet/standard/linq/chain-queries-example",
            "redirect_document_id": false
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/tutorial-manipulating-content-in-a-wordprocessingml-document.md",
            "redirect_url": "/dotnet/standard/linq/xml-shape-wordprocessingml-documents",
            "redirect_document_id": false
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/using-xslt-to-transform-an-xml-tree.md",
            "redirect_url": "/dotnet/standard/linq/use-xslt-transform-xml-tree",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/valid-content-of-xelement-and-xdocument-objects3.md",
            "redirect_url": "/dotnet/standard/linq/valid-content-xelement-xdocument-objects",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/wordprocessingml-document-with-styles.md",
            "redirect_url": "/dotnet/standard/linq/wordprocessingml-document-styles",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/working-with-xml-namespaces.md",
            "redirect_url": "/dotnet/standard/linq/namespaces-overview",
            "redirect_document_id": false
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/xattribute-class-overview.md",
            "redirect_url": "/dotnet/standard/linq/xattribute-class-overview",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/xdocument-class-overview.md",
            "redirect_url": "/dotnet/standard/linq/xdocument-class-overview",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/xelement-class-overview.md",
            "redirect_url": "/dotnet/standard/linq/xelement-class-overview",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/linq-to-adonet-portal-page.md",
            "redirect_url": "/dotnet/csharp/linq/"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/enabling-a-data-source-for-linq-querying1.md",
            "redirect_url": "/dotnet/csharp/linq/"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/linq/visual-studio-ide-and-tools-support-for-linq.md",
            "redirect_url": "/dotnet/csharp/linq/"

        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/object-oriented-programming.md",
            "redirect_url": "/dotnet/csharp/fundamentals/tutorials/oop",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/reflection.md",
            "redirect_url": "/dotnet/csharp/advanced-topics/reflection-and-attributes/",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/serialization/index.md",
            "redirect_url": "/dotnet/standard/serialization/"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/serialization/how-to-read-object-data-from-an-xml-file.md",
            "redirect_url": "dotnet/standard/serialization/how-to-deserialize-an-object"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/serialization/how-to-write-object-data-to-an-xml-file.md",
            "redirect_url": "/dotnet/standard/serialization/how-to-serialize-an-object"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/serialization/walkthrough-persisting-an-object-in-visual-studio.md",
            "redirect_url": "/dotnet/standard/serialization/system-text-json/how-to"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/threading/how-to-use-a-thread-pool.md",
            "redirect_url": "/dotnet/api/system.threading.threadpool.queueuserworkitem"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/threading/index.md",
            "redirect_url": "/dotnet/standard/threading/"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/threading/multithreaded-applications.md",
            "redirect_url": "/dotnet/standard/threading/using-threads-and-threading"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/threading/parameters-and-return-values-for-multithreaded-procedures.md",
            "redirect_url": "/dotnet/standard/threading/creating-threads-and-passing-data-at-start-time"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/threading/thread-pooling.md",
            "redirect_url": "/dotnet/standard/threading/the-managed-thread-pool"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/threading/thread-synchronization.md",
            "redirect_url": "/dotnet/standard/threading/overview-of-synchronization-primitives"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/threading/thread-timers.md",
            "redirect_url": "/dotnet/standard/threading/timers"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/concepts/threading/walkthrough-multithreading-with-the-backgroundworker-component.md",
            "redirect_url": "/dotnet/api/system.componentmodel.backgroundworker"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/enumeration-types.md",
            "redirect_url": "/dotnet/csharp/language-reference/builtin-types/enum"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/events/how-to-use-a-dictionary-to-store-event-instances.md",
            "redirect_url": "/dotnet/standard/events/how-to-handle-multiple-events-using-event-properties"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/exceptions/compiler-generated-exceptions.md",
            "redirect_url": "/dotnet/csharp/fundamentals/exceptions/compiler-generated-exceptions"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/exceptions/creating-and-throwing-exceptions.md",
            "redirect_url": "/dotnet/csharp/fundamentals/exceptions/creating-and-throwing-exceptions"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/exceptions/exception-handling.md",
            "redirect_url": "/dotnet/csharp/fundamentals/exceptions/exception-handling"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/exceptions/exceptions-and-exception-handling.md",
            "redirect_url": "/dotnet/csharp/fundamentals/exceptions"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/exceptions/how-to-catch-a-non-cls-exception.md",
            "redirect_url": "/dotnet/csharp/how-to/how-to-catch-a-non-cls-exception"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/exceptions/how-to-execute-cleanup-code-using-finally.md",
            "redirect_url": "/dotnet/csharp/fundamentals/exceptions/how-to-execute-cleanup-code-using-finally"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/exceptions/how-to-handle-an-exception-using-try-catch.md",
            "redirect_url": "/dotnet/csharp/fundamentals/exceptions/how-to-handle-an-exception-using-try-catch"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/exceptions/index.md",
            "redirect_url": "/dotnet/csharp/fundamentals/exceptions"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/exceptions/using-exceptions.md",
            "redirect_url": "/dotnet/csharp/fundamentals/exceptions/using-exceptions"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/file-system/index.md",
            "redirect_url": "/dotnet/standard/io/"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/file-system/how-to-copy-delete-and-move-files-and-folders.md",
            "redirect_url": "/dotnet/standard/io/how-to-copy-directories"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/file-system/how-to-create-a-file-or-folder.md",
            "redirect_url": "/dotnet/standard/io/how-to-read-and-write-to-a-newly-created-data-file"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/file-system/how-to-create-a-key-in-the-registry.md",
            "redirect_url": "/dotnet/api/microsoft.win32.registry"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/file-system/how-to-get-information-about-files-folders-and-drives.md",
            "redirect_url": "/dotnet/standard/io/common-i-o-tasks"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/file-system/how-to-iterate-through-a-directory-tree.md",
            "redirect_url": "/dotnet/standard/io/how-to-enumerate-directories-and-files"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/file-system/how-to-provide-a-progress-dialog-box-for-file-operations.md",
            "redirect_url": "dotnet/visual-basic/developing-apps/programming/drives-directories-files/how-to-copy-a-directory-to-another-directory"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/file-system/how-to-read-from-a-text-file.md",
            "redirect_url": "dotnet/standard/io/how-to-read-text-from-a-file"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/file-system/how-to-read-a-text-file-one-line-at-a-time.md",
            "redirect_url": "dotnet/standard/io/how-to-read-text-from-a-file"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/file-system/how-to-write-to-a-text-file.md",
            "redirect_url": "dotnet/standard/io/how-to-write-text-to-a-file"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/generics/benefits-of-generics.md",
            "redirect_url": "/dotnet/csharp/programming-guide/generics"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/generics/generics-and-attributes.md",
            "redirect_url": "/dotnet/csharp/advanced-topics/reflection-and-attributes/generics-and-attributes",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/generics/generics-and-reflection.md",
            "redirect_url": "/dotnet/csharp/advanced-topics/reflection-and-attributes/generics-and-reflection",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/generics/default-keyword-in-generics.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/default",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/generics/generics-in-the-net-framework-class-library.md",
            "redirect_url": "/dotnet/standard/generics/index"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/generics/index.md",
            "redirect_url": "/dotnet/csharp/fundamentals/types/generics"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/generics/introduction-to-generics.md",
            "redirect_url": "/dotnet/standard/generics/index"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/inside-a-program/coding-conventions.md",
            "redirect_url": "/dotnet/csharp/fundamentals/coding-style/coding-conventions"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/inside-a-program/general-structure-of-a-csharp-program.md",
            "redirect_url": "/dotnet/csharp/fundamentals/program-structure"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/inside-a-program/hello-world-your-first-program.md",
            "redirect_url": "/dotnet/csharp/tutorials/intro-to-csharp/hello-world"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/inside-a-program/identifier-names.md",
            "redirect_url": "/dotnet/csharp/fundamentals/coding-style/identifier-names"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/inside-a-program/index.md",
            "redirect_url": "/dotnet/csharp/fundamentals/program-structure"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/interfaces/index.md",
            "redirect_url": "/dotnet/csharp/fundamentals/types/interfaces"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/interop/example-com-class.md",
            "redirect_url": "/dotnet/csharp/advanced-topics/interop/example-com-class"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/interop/how-to-access-office-onterop-objects.md",
            "redirect_url": "/dotnet/csharp/advanced-topics/interop/how-to-access-office-interop-objects"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/interop/how-to-use-indexed-properties-in-com-interop-rogramming.md",
            "redirect_url": "/dotnet/csharp/advanced-topics/interop/how-to-use-indexed-properties-in-com-interop-programming"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/interop/how-to-use-platform-invoke-to-play-a-wave-file.md",
            "redirect_url": "/dotnet/csharp/advanced-topics/interop/how-to-use-platform-invoke-to-play-a-wave-file"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/interop/index.md",
            "redirect_url": "/dotnet/csharp/advanced-topics/interop/index"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/interop/interoperability-overview.md",
            "redirect_url": "/dotnet/csharp/advanced-topics/interop/index"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/interop/walkthrough-office-programming.md",
            "redirect_url": "/dotnet/csharp/advanced-topics/interop/walkthrough-office-programming"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/linq-query-expressions/how-to-create-a-nested-group.md",
            "redirect_url": "/dotnet/csharp/linq/standard-query-operators/grouping-data"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/linq-query-expressions/how-to-dynamically-specify-predicate-filters-at-runtime.md",
            "redirect_url": "/dotnet/csharp/linq/dynamically-specify-predicate-filters-at-runtime"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/linq-query-expressions/how-to-group-query-results.md",
            "redirect_url": "/dotnet/csharp/linq/standard-query-operators/grouping-data"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/linq-query-expressions/how-to-group-results-by-contiguous-keys.md",
            "redirect_url": "/dotnet/csharp/linq/group-results-by-contiguous-keys"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/linq-query-expressions/how-to-handle-exceptions-in-query-expressions.md",
            "redirect_url": "/dotnet/csharp/linq/handle-exceptions-in-query-expressions"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/linq-query-expressions/how-to-handle-null-values-in-query-expressions.md",
            "redirect_url": "/dotnet/csharp/linq/handle-null-values-in-query-expressions"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/linq-query-expressions/how-to-join-by-using-composite-keys.md",
            "redirect_url": "/dotnet/csharp/linq/standard-query-operators/join-operations"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/linq-query-expressions/how-to-order-the-results-of-a-join-clause.md",
            "redirect_url": "/dotnet/csharp/linq/standard-query-operators/"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/linq-query-expressions/how-to-perform-a-subquery-on-a-grouping-operation.md",
            "redirect_url": "/dotnet/csharp/linq/standard-query-operators/grouping-data"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/linq-query-expressions/how-to-perform-custom-join-operations.md",
            "redirect_url": "/dotnet/csharp/linq/"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/linq-query-expressions/how-to-perform-grouped-joins.md",
            "redirect_url": "/dotnet/csharp/linq/standard-query-operators/join-operations"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/linq-query-expressions/how-to-perform-inner-joins.md",
            "redirect_url": "/dotnet/csharp/linq/standard-query-operators/join-operations"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/linq-query-expressions/how-to-perform-left-outer-joins.md",
            "redirect_url": "/dotnet/csharp/linq/standard-query-operators/join-operations"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/linq-query-expressions/how-to-query-a-collection-of-objects.md",
            "redirect_url": "/dotnet/csharp/linq/query-a-collection-of-objects"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/linq-query-expressions/how-to-return-a-query-from-a-method.md",
            "redirect_url": "/dotnet/csharp/linq/return-a-query-from-a-method"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/linq-query-expressions/how-to-store-the-results-of-a-query-in-memory.md",
            "redirect_url": "/dotnet/csharp/linq/store-the-results-of-a-query-in-memory"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/linq-query-expressions/how-to-write-linq-queries.md",
            "redirect_url": "/dotnet/csharp/linq/get-started/write-linq-queries"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/linq-query-expressions/index.md",
            "redirect_url": "/dotnet/csharp/linq/index"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/linq-query-expressions/query-expression-basics.md",
            "redirect_url": "/dotnet/csharp/linq/get-started/query-expression-basics"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/main-and-command-args/command-line-arguments.md",
            "redirect_url": "/dotnet/csharp/fundamentals/program-structure/main-command-line"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/main-and-command-args/how-to-access-command-line-arguments-using-foreach.md",
            "redirect_url": "/dotnet/csharp/language-reference/builtin-types/arrays"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/main-and-command-args/how-to-display-command-line-arguments.md",
            "redirect_url": "/dotnet/csharp/fundamentals/tutorials/how-to-display-command-line-arguments"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/main-and-command-args/index.md",
            "redirect_url": "/dotnet/csharp/fundamentals/program-structure/main-command-line"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/main-and-command-args/main-and-command-line-arguments.md",
            "redirect_url": "/dotnet/csharp/fundamentals/program-structure/main-command-line"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/main-and-command-args/main-return-values.md",
            "redirect_url": "/dotnet/csharp/fundamentals/program-structure/main-command-line"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/main-and-command-args/top-level-statements.md",
            "redirect_url": "/dotnet/csharp/fundamentals/program-structure/top-level-statements"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/namespaces/how-to-use-the-global-namespace-alias.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/namespace-alias-qualifier"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/namespaces/how-to-use-the-my-namespace.md",
            "redirect_url": "/dotnet/csharp/fundamentals/types/namespaces"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/namespaces/index.md",
            "redirect_url": "/dotnet/csharp/fundamentals/types/namespaces"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/namespaces/using-namespaces.md",
            "redirect_url": "/dotnet/csharp/fundamentals/types/namespaces"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/nullable-types/boxing-nullable-types.md",
            "redirect_url": "/dotnet/csharp/language-reference/builtin-types/nullable-value-types"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/nullable-types/how-to-identify-a-nullable-type.md",
            "redirect_url": "/dotnet/csharp/language-reference/builtin-types/nullable-value-types#how-to-identify-a-nullable-value-type"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/nullable-types/how-to-safely-cast-from-bool-to-bool.md",
            "redirect_url": "/dotnet/csharp/language-reference/builtin-types/nullable-value-types"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/nullable-types/index.md",
            "redirect_url": "/dotnet/csharp/language-reference/builtin-types/nullable-value-types"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/nullable-types/using-nullable-types.md",
            "redirect_url": "/dotnet/csharp/language-reference/builtin-types/nullable-value-types"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/statements-expressions-operators/anonymous-functions.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/lambda-expressions"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/statements-expressions-operators/anonymous-methods.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/delegate-operator"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/statements-expressions-operators/conversion-operators.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/user-defined-conversion-operators"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/statements-expressions-operators/default-value-expressions.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/default"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/statements-expressions-operators/expressions.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/index"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/statements-expressions-operators/how-to-implement-user-defined-conversions-between-structs.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/user-defined-conversion-operators"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/statements-expressions-operators/how-to-use-lambda-expressions-in-a-query.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/lambda-expressions"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/statements-expressions-operators/how-to-use-lambda-expressions-outside-linq.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/lambda-expressions"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/statements-expressions-operators/how-to-use-operator-overloading-to-create-a-complex-number-class.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/operator-overloading"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/statements-expressions-operators/index.md",
            "redirect_url": "/dotnet/csharp/programming-guide/statements-expressions-operators/statements"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/statements-expressions-operators/lambda-expressions.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/lambda-expressions"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/statements-expressions-operators/operators.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/index"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/statements-expressions-operators/overloadable-operators.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/operator-overloading#overloadable-operators"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/statements-expressions-operators/using-conversion-operators.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/user-defined-conversion-operators"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/strings/how-to-compare-strings.md",
            "redirect_url": "/dotnet/csharp/how-to/compare-strings"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/strings/how-to-concatenate-multiple-strings.md",
            "redirect_url": "/dotnet/csharp/how-to/concatenate-multiple-strings"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/strings/how-to-convert-a-string-to-a-datetime.md",
            "redirect_url": "/dotnet/standard/base-types/parsing-datetime"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/strings/how-to-convert-between-legacy-encondings-and-unicode.md",
            "redirect_url": "/previous-versions/visualstudio/visual-studio-2013/cc165448(v=vs.120)"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/strings/how-to-convert-rtf-to-plain-text.md",
            "redirect_url": "/previous-versions/visualstudio/visual-studio-2013/cc488002(v=vs.120)"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/strings/how-to-modify-string-contents.md",
            "redirect_url": "/dotnet/csharp/how-to/modify-string-contents"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/strings/how-to-parse-strings-using-string-split.md",
            "redirect_url": "/dotnet/csharp/how-to/parse-strings-using-split"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/strings/how-to-search-strings-using-regular-expressions.md",
            "redirect_url": "/dotnet/csharp/how-to/search-strings"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/strings/how-to-search-strings-using-string-methods.md",
            "redirect_url": "/dotnet/csharp/how-to/search-strings"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/types/how-to-safely-cast-using-as-and-is-operators.md",
            "redirect_url": "/dotnet/csharp/fundamentals/tutorials/safely-cast-using-pattern-matching-is-and-as-operators"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/types/index.md",
            "redirect_url": "/dotnet/csharp/fundamentals/types"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/types/using-type-dynamic.md",
            "redirect_url": "/dotnet/csharp/advanced-topics/interop/using-type-dynamic"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/types/walkthrough-creating-and-using-dynamic-objects.md",
            "redirect_url": "/dotnet/csharp/advanced-topics/interop/walkthrough-creating-and-using-dynamic-objects"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/unsafe-code-pointers/arithmetic-operations-on-pointers.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/pointer-related-operators#pointer-arithmetic-operators"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/unsafe-code-pointers/fixed-size-buffers.md",
            "redirect_url": "/dotnet/csharp/language-reference/unsafe-code#fixed-size-buffers"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/unsafe-code-pointers/how-to-access-a-member-with-a-pointer.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/pointer-related-operators#pointer-member-access-operator--"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/unsafe-code-pointers/how-to-access-an-array-element-with-a-pointer.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/pointer-related-operators#pointer-element-access-operator-"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/unsafe-code-pointers/how-to-increment-and-decrement-pointers.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/pointer-related-operators#pointer-increment-and-decrement"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/unsafe-code-pointers/how-to-obtain-the-address-of-a-variable.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/pointer-related-operators#address-of-operator-"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/unsafe-code-pointers/how-to-obtain-the-value-of-a-pointer-variable.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/pointer-related-operators#pointer-indirection-operator-"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/unsafe-code-pointers/how-to-use-pointers-to-copy-an-array-of-bytes.md",
            "redirect_url": "/dotnet/csharp/language-reference/unsafe-code#how-to-use-pointers-to-copy-an-array-of-bytes"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/unsafe-code-pointers/index.md",
            "redirect_url": "/dotnet/csharp/language-reference/unsafe-code"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/unsafe-code-pointers/manipulating-pointers.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/pointer-related-operators"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/unsafe-code-pointers/pointer-comparison.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/pointer-related-operators#pointer-comparison-operators"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/unsafe-code-pointers/pointer-conversions.md",
            "redirect_url": "/dotnet/csharp/language-reference/unsafe-code#pointer-types"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/unsafe-code-pointers/pointer-expressions.md",
            "redirect_url": "/dotnet/csharp/language-reference/operators/pointer-related-operators"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/unsafe-code-pointers/pointer-types.md",
            "redirect_url": "/dotnet/csharp/language-reference/unsafe-code#pointer-types"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/xmldoc/code-inline.md",
            "redirect_url": "/dotnet/csharp/language-reference/xmldoc/recommended-tags"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/xmldoc/code.md",
            "redirect_url": "/dotnet/csharp/language-reference/xmldoc/recommended-tags"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/xmldoc/cref-attribute.md",
            "redirect_url": "/dotnet/csharp/language-reference/xmldoc/recommended-tags"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/xmldoc/delimiters-for-documentation-tags.md",
            "redirect_url": "/dotnet/csharp/programming-guide/xmldoc"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/xmldoc/example.md",
            "redirect_url": "/dotnet/csharp/language-reference/xmldoc/recommended-tags"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/xmldoc/exception.md",
            "redirect_url": "/dotnet/csharp/language-reference/xmldoc/recommended-tags"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/xmldoc/how-to-use-the-xml-documentation-features.md",
            "redirect_url": "/dotnet/csharp/language-reference/xmldoc"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/xmldoc/include.md",
            "redirect_url": "/dotnet/csharp/language-reference/xmldoc/recommended-tags"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/xmldoc/index.md",
            "redirect_url": "/dotnet/csharp/language-reference/xmldoc"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/xmldoc/inheritdoc.md",
            "redirect_url": "/dotnet/csharp/language-reference/xmldoc/recommended-tags"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/xmldoc/list.md",
            "redirect_url": "/dotnet/csharp/language-reference/xmldoc/recommended-tags"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/xmldoc/para.md",
            "redirect_url": "/dotnet/csharp/language-reference/xmldoc/recommended-tags"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/xmldoc/param.md",
            "redirect_url": "/dotnet/csharp/language-reference/xmldoc/recommended-tags"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/xmldoc/paramref.md",
            "redirect_url": "/dotnet/csharp/language-reference/xmldoc/recommended-tags"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/xmldoc/permission.md",
            "redirect_url": "/dotnet/csharp/language-reference/xmldoc/index"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/xmldoc/processing-the-xml-file.md",
            "redirect_url": "/dotnet/csharp/language-reference/xmldoc"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/xmldoc/processing-the-xml-file.md#id-strings",
            "redirect_url": "/dotnet/csharp/language-reference/xmldoc#id-strings"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/xmldoc/recommended-tags-for-documentation-comments.md",
            "redirect_url": "/dotnet/csharp/language-reference/xmldoc/recommended-tags"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/xmldoc/remarks.md",
            "redirect_url": "/dotnet/csharp/language-reference/xmldoc/recommended-tags"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/xmldoc/returns.md",
            "redirect_url": "/dotnet/csharp/language-reference/xmldoc/recommended-tags"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/xmldoc/see.md",
            "redirect_url": "/dotnet/csharp/language-reference/xmldoc/recommended-tags"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/xmldoc/seealso.md",
            "redirect_url": "/dotnet/csharp/language-reference/xmldoc/recommended-tags"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/xmldoc/summary.md",
            "redirect_url": "/dotnet/csharp/language-reference/xmldoc/recommended-tags"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/xmldoc/typeparam.md",
            "redirect_url": "/dotnet/csharp/language-reference/xmldoc/recommended-tags"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/xmldoc/typeparamref.md",
            "redirect_url": "/dotnet/csharp/language-reference/xmldoc/recommended-tags"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/xmldoc/value.md",
            "redirect_url": "/dotnet/csharp/language-reference/xmldoc/recommended-tags"
        },
        {
            "source_path_from_root": "/docs/csharp/programming-guide/xmldoc/xml-documentation-comments.md",
            "redirect_url": "/dotnet/csharp/programming-guide/xmldoc"
        },
        {
            "source_path_from_root": "/docs/csharp/quick-starts/arrays-and-collections.md",
            "redirect_url": "/dotnet/csharp/tour-of-csharp/tutorials/arrays-and-collections",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/quick-starts/branches-and-loops-local.md",
            "redirect_url": "/dotnet/csharp/tour-of-csharp/tutorials/branches-and-loops-local",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/quick-starts/branches-and-loops.md",
            "redirect_url": "/dotnet/csharp/tutorials/intro-to-csharp/branches-and-loops"
        },
        {
            "source_path_from_root": "/docs/csharp/quick-starts/hello-world.md",
            "redirect_url": "/dotnet/csharp/tutorials/intro-to-csharp/hello-world"
        },
        {
            "source_path_from_root": "/docs/csharp/quick-starts/index.md",
            "redirect_url": "/dotnet/csharp/tutorials/intro-to-csharp/",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/quick-starts/interpolated-strings-local.md",
            "redirect_url": "/dotnet/csharp/tutorials/exploration/interpolated-strings-local",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/quick-starts/interpolated-strings.md",
            "redirect_url": "/dotnet/csharp/tutorials/exploration/interpolated-strings"
        },
        {
            "source_path_from_root": "/docs/csharp/quick-starts/introduction-to-classes.md",
            "redirect_url": "/dotnet/csharp/fundamentals/tutorials/classes",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/quick-starts/list-collection.md",
            "redirect_url": "/dotnet/csharp/tutorials/intro-to-csharp/list-collection"
        },
        {
            "source_path_from_root": "/docs/csharp/quick-starts/local-environment.md",
            "redirect_url": "/dotnet/csharp/tour-of-csharp/tutorials/local-environment",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/quick-starts/numbers-in-csharp-local.md",
            "redirect_url": "/dotnet/csharp/tour-of-csharp/tutorials/numbers-in-csharp-local",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/quick-starts/numbers-in-csharp.md",
            "redirect_url": "/dotnet/csharp/tutorials/intro-to-csharp/numbers-in-csharp"
        },
        {
            "source_path_from_root": "/docs/csharp/reference-semantics-with-value-types.md",
            "redirect_url": "/dotnet/csharp/advanced-topics/performance"
        },
        {
            "source_path_from_root": "/docs/csharp/reflection.md",
            "redirect_url": "/dotnet/framework/reflection-and-codedom"
        },
        {
            "source_path_from_root": "/docs/csharp/roslyn/index.md",
            "redirect_url": "/dotnet/csharp/roslyn-sdk/"
        },
        {
            "source_path_from_root": "/docs/csharp/whats-new/tutorials/static-abstract-interface-methods.md",
            "redirect_url": "/dotnet/csharp/whats-new/tutorials/static-virtual-interface-members"
        },
        {
            "source_path_from_root": "/docs/csharp/whats-new/tutorials/top-level-statements.md",
            "redirect_url": "/dotnet/csharp/tutorials/top-level-statements"
        },
        {
            "source_path_from_root": "/docs/csharp/whats-new/tutorials/records.md",
            "redirect_url": "/dotnet/csharp/tutorials/records"
        },
        {
            "source_path_from_root": "/docs/csharp/structs.md",
            "redirect_url": "/dotnet/csharp/language-reference/builtin-types/struct"
        },
        {
            "source_path_from_root": "/docs/csharp/tour-of-csharp/arrays.md",
            "redirect_url": "/dotnet/csharp/tour-of-csharp/features#arrays-collections-and-LINQ"
        },
        {
            "source_path_from_root": "/docs/csharp/tour-of-csharp/attributes.md",
            "redirect_url": "/dotnet/csharp/tour-of-csharp/features#attributes"
        },
        {
            "source_path_from_root": "/docs/csharp/tour-of-csharp/delegates.md",
            "redirect_url": "/dotnet/csharp/tour-of-csharp/features#delegates-and-lambda-expressions"
        },
        {
            "source_path_from_root": "/docs/csharp/tour-of-csharp/enums.md",
            "redirect_url": "/dotnet/csharp/language-reference/builtin-types/enum"
        },
        {
            "source_path_from_root": "/docs/csharp/tour-of-csharp/expressions.md",
            "redirect_url": "/dotnet/csharp/tour-of-csharp/program-building-blocks#expressions"
        },
        {
            "source_path_from_root": "/docs/csharp/tour-of-csharp/interfaces.md",
            "redirect_url": "/dotnet/csharp/tour-of-csharp/types#interfaces"
        },
        {
            "source_path_from_root": "/docs/csharp/tour-of-csharp/program-structure.md",
            "redirect_url": "/dotnet/csharp/tour-of-csharp/#program-structure"
        },
        {
            "source_path_from_root": "/docs/csharp/tour-of-csharp/statements.md",
            "redirect_url": "/dotnet/csharp/tour-of-csharp/program-building-blocks#statements"
        },
        {
            "source_path_from_root": "/docs/csharp/tour-of-csharp/structs.md",
            "redirect_url": "/dotnet/csharp/language-reference/builtin-types/struct"
        },
        {
            "source_path_from_root": "/docs/csharp/tour-of-csharp/types-and-variables.md",
            "redirect_url": "/dotnet/csharp/tour-of-csharp/types"
        },
        {
            "source_path_from_root": "/docs/csharp/tuples.md",
            "redirect_url": "/dotnet/csharp/language-reference/builtin-types/value-tuples"
        },
        {
            "source_path_from_root": "/docs/csharp/tutorials/attributes.md",
            "redirect_url": "/dotnet/csharp/advanced-topics/reflection-and-attributes/attribute-tutorial"
        },
        {
            "source_path_from_root": "/docs/csharp/tutorials/default-interface-members-versions.md",
            "redirect_url": "/dotnet/csharp/advanced-topics/interface-implementation/default-interface-methods-versions"
        },
        {
            "source_path_from_root": "/docs/csharp/tutorials/default-interface-methods-versions.md",
            "redirect_url": "/dotnet/csharp/advanced-topics/interface-implementation/default-interface-methods-versions"
        },
        {
            "source_path_from_root": "/docs/csharp/tutorials/exploration/csharp-6.yml",
            "redirect_url": "/dotnet/csharp/whats-new/csharp-version-history#c-version-70"
        },
        {
            "source_path_from_root": "/docs/csharp/tutorials/exploration/csharp-7.yml",
            "redirect_url": "/dotnet/csharp/whats-new/csharp-version-history#c-version-70"
        },
        {
            "source_path_from_root": "/docs/csharp/tutorials/exploration/patterns-objects.md",
            "redirect_url": "/dotnet/csharp/whats-new/tutorials/patterns-objects"
        },
        {
            "source_path_from_root": "/docs/csharp/tutorials/exploration/records.md",
            "redirect_url": "/dotnet/csharp/tutorials/records"
        },
        {
            "source_path_from_root": "/docs/csharp/tutorials/exploration/top-level-statements.md",
            "redirect_url": "/dotnet/csharp/tutorials/top-level-statements"
        },
        {
            "source_path_from_root": "/docs/csharp/tutorials/generate-consume-asynchronous-stream.md",
            "redirect_url": "/dotnet/csharp/asynchronous-programming/generate-consume-asynchronous-stream"
        },
        {
            "source_path_from_root": "/docs/csharp/tutorials/index.md",
            "redirect_url": "/dotnet/csharp/fundamentals/tutorials/how-to-display-command-line-arguments"
        },
        {
            "source_path_from_root": "/docs/csharp/tutorials/inheritance.md",
            "redirect_url": "/dotnet/csharp/fundamentals/object-oriented/inheritance"
        },
        {
            "source_path_from_root": "/docs/csharp/tutorials/intro-to-csharp/arrays-and-collections.md",
            "redirect_url": "/dotnet/csharp/tour-of-csharp/tutorials/arrays-and-collections"
        },
        {
            "source_path_from_root": "/docs/csharp/tutorials/intro-to-csharp/branches-and-loops-local.md",
            "redirect_url": "/dotnet/csharp/tour-of-csharp/tutorials/branches-and-loops-local"
        },
        {
            "source_path_from_root": "/docs/csharp/tutorials/intro-to-csharp/branches-and-loops.yml",
            "redirect_url": "/dotnet/csharp/tour-of-csharp/tutorials/branches-and-loops"
        },
        {
            "source_path_from_root": "/docs/csharp/tutorials/intro-to-csharp/hello-world.yml",
            "redirect_url": "/dotnet/csharp/tour-of-csharp/tutorials/hello-world"
        },
        {
            "source_path_from_root": "/docs/csharp/tutorials/intro-to-csharp/index.md",
            "redirect_url": "/dotnet/csharp/tour-of-csharp/tutorials/"
        },
        {
            "source_path_from_root": "/docs/csharp/tutorials/intro-to-csharp/interpolated-strings-local.md",
            "redirect_url": "/dotnet/csharp/tutorials/exploration/interpolated-strings-local"
        },
        {
            "source_path_from_root": "/docs/csharp/tutorials/intro-to-csharp/interpolated-strings.yml",
            "redirect_url": "/dotnet/csharp/tutorials/exploration/interpolated-strings"
        },
        {
            "source_path_from_root": "/docs/csharp/tutorials/intro-to-csharp/introduction-to-classes.md",
            "redirect_url": "/dotnet/csharp/fundamentals/tutorials/classes"
        },
        {
            "source_path_from_root": "/docs/csharp/tutorials/intro-to-csharp/list-collection.yml",
            "redirect_url": "/dotnet/csharp/tour-of-csharp/tutorials/list-collection"
        },
        {
            "source_path_from_root": "/docs/csharp/tutorials/intro-to-csharp/local-environment.md",
            "redirect_url": "/dotnet/csharp/tour-of-csharp/tutorials/local-environment"
        },
        {
            "source_path_from_root": "/docs/csharp/tutorials/mixins-with-default-interface-methods.md",
            "redirect_url": "/dotnet/csharp/advanced-topics/interface-implementation/mixins-with-default-interface-methods"
        },
        {
            "source_path_from_root": "/docs/csharp/tutorials/intro-to-csharp/numbers-in-csharp-local.md",
            "redirect_url": "/dotnet/csharp/tour-of-csharp/tutorials/numbers-in-csharp-local"
        },
        {
            "source_path_from_root": "/docs/csharp/tutorials/intro-to-csharp/numbers-in-csharp.yml",
            "redirect_url": "/dotnet/csharp/tour-of-csharp/tutorials/numbers-in-csharp"
        },
        {
            "source_path_from_root": "/docs/csharp/tutorials/intro-to-csharp/object-oriented-programming.md",
            "redirect_url": "/dotnet/csharp/fundamentals/tutorials/oop"
        },
        {
            "source_path_from_root": "/docs/csharp/tutorials/microservices.md",
            "redirect_url": "/dotnet/core/docker/"
        },
        {
            "source_path_from_root": "/docs/csharp/tutorials/pattern-matching.md",
            "redirect_url": "/dotnet/csharp/fundamentals/tutorials/pattern-matching"
        },
        {
            "source_path_from_root": "/docs/csharp/tutorials/upgrade-to-nullable-references.md",
            "redirect_url": "/dotnet/csharp/nullable-migration-strategies"
        },
        {
            "source_path_from_root": "/docs/csharp/type-system.md",
            "redirect_url": "/dotnet/csharp/fundamentals/types"
        },
        {
            "source_path_from_root": "/docs/csharp/walkthroughs.md",
            "redirect_url": "/dotnet/csharp"
        },
        {
            "source_path_from_root": "/docs/csharp/whats-new.md",
            "redirect_url": "/dotnet/csharp/whats-new/csharp-12",
            "redirect_document_id": true
        },
        {
            "source_path_from_root": "/docs/csharp/whats-new/csharp-6.md",
            "redirect_url": "/dotnet/csharp/whats-new/csharp-version-history#c-version-60"
        },
        {
            "source_path_from_root": "/docs/csharp/whats-new/csharp-7-1.md",
            "redirect_url": "/dotnet/csharp/whats-new/csharp-version-history#c-version-71"
        },
        {
            "source_path_from_root": "/docs/csharp/whats-new/csharp-7-2.md",
            "redirect_url": "/dotnet/csharp/whats-new/csharp-version-history#c-version-72"
        },
        {
            "source_path_from_root": "/docs/csharp/whats-new/csharp-7-3.md",
            "redirect_url": "/dotnet/csharp/whats-new/csharp-version-history#c-version-73"
        },
        {
            "source_path_from_root": "/docs/csharp/whats-new/csharp-7.md",
            "redirect_url": "/dotnet/csharp/whats-new/csharp-version-history#c-version-70"
        },
        {
            "source_path_from_root": "/docs/csharp/whats-new/csharp-9.md",
            "redirect_url": "/dotnet/csharp/whats-new/csharp-version-history#c-version-9"
        },
        {
            "source_path_from_root": "/docs/csharp/whats-new/csharp-8.md",
            "redirect_url": "/dotnet/csharp/whats-new/csharp-version-history#c-version-80"
        },
        {
            "source_path_from_root": "/docs/csharp/whats-new/index.md",
            "redirect_url": "/dotnet/csharp/whats-new/csharp-12",
            "ms.custom": "updateeachrelease"
        },
        {
            "source_path_from_root": "/docs/csharp/whats-new/tutorials/upgrade-to-nullable-references.md",
            "redirect_url": "/dotnet/csharp/nullable-migration-strategies"
        },
        {
            "source_path_from_root": "/docs/csharp/whats-new/tutorials/default-interface-methods-versions.md",
            "redirect_url": "/dotnet/csharp/advanced-topics/interface-implementation/default-interface-methods-versions"
        },
        {
            "source_path_from_root": "/docs/csharp/whats-new/tutorials/generate-consume-asynchronous-stream.md",
            "redirect_url": "/dotnet/csharp/asynchronous-programming/generate-consume-asynchronous-stream"
        },
        {
            "source_path_from_root": "/docs/csharp/whats-new/tutorials/mixins-with-default-interface-methods.md",
            "redirect_url": "/dotnet/csharp/advanced-topics/interface-implementation/mixins-with-default-interface-methods"
        },
        {
            "source_path_from_root": "/docs/csharp/whats-new/tutorials/nullable-reference-types.md",
            "redirect_url": "/dotnet/csharp/tutorials/nullable-reference-types"
        },
        {
            "source_path_from_root": "/docs/csharp/whats-new/tutorials/ranges-indexes.md",
            "redirect_url": "/dotnet/csharp/tutorials/ranges-indexes"
        },
        {
            "source_path_from_root": "/docs/csharp/write-safe-efficient-code.md",
            "redirect_url": "/dotnet/csharp/advanced-topics/performance"
        }
    ]
}
