- name: ".NET Microservices: Architecture for Containerized .NET Applications"
  href: index.md
  items:
  - name: Introduction to Containers and Docker
    href: container-docker-introduction/index.md
    items:
    - name: What is Docker?
      href: container-docker-introduction/docker-defined.md
    - name: Docker terminology
      href: container-docker-introduction/docker-terminology.md
    - name: Docker containers, images, and registries
      href: container-docker-introduction/docker-containers-images-registries.md
  - name: Choosing Between .NET 5 and .NET Framework for Docker Containers
    href: net-core-net-framework-containers/index.md
    items:
    - name: General guidance
      href: net-core-net-framework-containers/general-guidance.md
    - name: When to choose .NET for Docker containers
      href: net-core-net-framework-containers/net-core-container-scenarios.md
    - name: When to choose .NET Framework for Docker containers
      href: net-core-net-framework-containers/net-framework-container-scenarios.md
    - name: "Decision table: .NET frameworks to use for Docker"
      href: net-core-net-framework-containers/container-framework-choice-factors.md
    - name: What OS to target with .NET containers
      href: net-core-net-framework-containers/net-container-os-targets.md
    - name: Official .NET Docker images
      href: net-core-net-framework-containers/official-net-docker-images.md
  - name: Architecting Container and Microservice Based Applications
    href: architect-microservice-container-applications/index.md
    items:
    - name: Containerizing monolithic applications
      href: architect-microservice-container-applications/containerize-monolithic-applications.md
    - name: State and data in Docker applications
      href: architect-microservice-container-applications/docker-application-state-data.md
    - name: Service-oriented architecture
      href: architect-microservice-container-applications/service-oriented-architecture.md
    - name: Microservices architecture
      href: architect-microservice-container-applications/microservices-architecture.md
    - name: Data sovereignty per microservice
      href: architect-microservice-container-applications/data-sovereignty-per-microservice.md
    - name: Logical architecture versus physical architecture
      href: architect-microservice-container-applications/logical-versus-physical-architecture.md
    - name: Challenges and solutions for distributed data management
      href: architect-microservice-container-applications/distributed-data-management.md
    - name: Identifying domain-model boundaries for each microservice
      href: architect-microservice-container-applications/identify-microservice-domain-model-boundaries.md
    - name: Direct client-to-microservice communication versus the API Gateway pattern
      href: architect-microservice-container-applications/direct-client-to-microservice-communication-versus-the-api-gateway-pattern.md
    - name: Communication in a microservice architecture
      href: architect-microservice-container-applications/communication-in-microservice-architecture.md
    - name: Asynchronous message-based communication
      href: architect-microservice-container-applications/asynchronous-message-based-communication.md
    - name: Creating, evolving, and versioning microservice APIs and contracts
      href: architect-microservice-container-applications/maintain-microservice-apis.md
    - name: Microservices addressability and the service registry
      href: architect-microservice-container-applications/microservices-addressability-service-registry.md
    - name: Creating composite UI based on microservices, including visual UI shape and layout generated by multiple microservices
      href: architect-microservice-container-applications/microservice-based-composite-ui-shape-layout.md
    - name: Resiliency and high availability in microservices
      href: architect-microservice-container-applications/resilient-high-availability-microservices.md
    - name: Orchestrating microservices and multi-container applications for high scalability and availability
      href: architect-microservice-container-applications/scalable-available-multi-container-microservice-applications.md
  - name: Development Process for Docker Based Applications
    href: docker-application-development-process/index.md
    items:
    - name: Development workflow for Docker apps
      href: docker-application-development-process/docker-app-development-workflow.md
  - name: Designing and Developing Multi Container and Microservice Based .NET Applications
    href: multi-container-microservice-net-applications/index.md
    items:
    - name: Designing a microservice-oriented application
      href: multi-container-microservice-net-applications/microservice-application-design.md
    - name: Creating a simple data-driven CRUD microservice
      href: multi-container-microservice-net-applications/data-driven-crud-microservice.md
    - name: Defining your multi-container application with docker-compose.yml
      href: multi-container-microservice-net-applications/multi-container-applications-docker-compose.md
    - name: Using a database server running as a container
      href: multi-container-microservice-net-applications/database-server-container.md
    - name: Implementing event-based communication between microservices (integration events)
      href: multi-container-microservice-net-applications/integration-event-based-microservice-communications.md
    - name: Implementing an event bus with RabbitMQ for the development or test environment
      href: multi-container-microservice-net-applications/rabbitmq-event-bus-development-test-environment.md
    - name: Subscribing to events
      href: multi-container-microservice-net-applications/subscribe-events.md
    - name: Testing ASP.NET Core services and web apps
      href: multi-container-microservice-net-applications/test-aspnet-core-services-web-apps.md
    - name: Implement background tasks in microservices with IHostedService
      href: multi-container-microservice-net-applications/background-tasks-with-ihostedservice.md
    - name: Implementing API Gateways with Ocelot
      href: multi-container-microservice-net-applications/implement-api-gateways-with-ocelot.md
  - name: Tackling Business Complexity in a Microservice with DDD and CQRS Patterns
    href: microservice-ddd-cqrs-patterns/index.md
    items:
    - name: Applying simplified CQRS and DDD patterns in a microservice
      href: microservice-ddd-cqrs-patterns/apply-simplified-microservice-cqrs-ddd-patterns.md
    - name: Applying CQRS and CQS approaches in a DDD microservice in eShopOnContainers
      href: microservice-ddd-cqrs-patterns/eshoponcontainers-cqrs-ddd-microservice.md
    - name: Implementing reads/queries in a CQRS microservice
      href: microservice-ddd-cqrs-patterns/cqrs-microservice-reads.md
    - name: Designing a DDD-oriented microservice
      href: microservice-ddd-cqrs-patterns/ddd-oriented-microservice.md
    - name: Designing a microservice domain model
      href: microservice-ddd-cqrs-patterns/microservice-domain-model.md
    - name: Implementing a microservice domain model with .NET
      href: microservice-ddd-cqrs-patterns/net-core-microservice-domain-model.md
    - name: Seedwork (reusable base classes and interfaces for your domain model)
      href: microservice-ddd-cqrs-patterns/seedwork-domain-model-base-classes-interfaces.md
    - name: Implementing value objects
      href: microservice-ddd-cqrs-patterns/implement-value-objects.md
    - name: Using Enumeration classes instead of enum types
      href: microservice-ddd-cqrs-patterns/enumeration-classes-over-enum-types.md
    - name: Designing validations in the domain model layer
      href: microservice-ddd-cqrs-patterns/domain-model-layer-validations.md
    - name: Client-side validation (validation in the presentation layers)
      href: microservice-ddd-cqrs-patterns/client-side-validation.md
    - name: "Domain events: design and implementation"
      href: microservice-ddd-cqrs-patterns/domain-events-design-implementation.md
    - name: Designing the infrastructure persistence layer
      href: microservice-ddd-cqrs-patterns/infrastructure-persistence-layer-design.md
    - name: Implementing the infrastructure persistence layer with Entity Framework Core
      href: microservice-ddd-cqrs-patterns/infrastructure-persistence-layer-implementation-entity-framework-core.md
    - name: Using NoSQL databases as a persistence infrastructure
      href: microservice-ddd-cqrs-patterns/nosql-database-persistence-infrastructure.md
    - name: Designing the microservice application layer and Web API
      href: microservice-ddd-cqrs-patterns/microservice-application-layer-web-api-design.md
    - name: Implementing the microservice application layer using the Web API
      href: microservice-ddd-cqrs-patterns/microservice-application-layer-implementation-web-api.md
  - name: Implementing Resilient Applications
    href: implement-resilient-applications/index.md
    items:
    - name: Handling partial failure
      href: implement-resilient-applications/handle-partial-failure.md
    - name: Strategies for handling partial failure
      href: implement-resilient-applications/partial-failure-strategies.md
    - name: Implementing retries with exponential backoff
      href: implement-resilient-applications/implement-retries-exponential-backoff.md
    - name: Implementing resilient Entity Framework Core SQL connections
      href: implement-resilient-applications/implement-resilient-entity-framework-core-sql-connections.md
    - name: Use IHttpClientFactory to implement resilient HTTP requests
      href: implement-resilient-applications/use-httpclientfactory-to-implement-resilient-http-requests.md
    - name: Implement HTTP call retries with exponential backoff with Polly
      href: implement-resilient-applications/implement-http-call-retries-exponential-backoff-polly.md
    - name: Implement the Circuit Breaker pattern
      href: implement-resilient-applications/implement-circuit-breaker-pattern.md
    - name: Health monitoring
      href: implement-resilient-applications/monitor-app-health.md
  - name: Securing .NET Microservices and Web Applications
    href: secure-net-microservices-web-applications/index.md
    items:
    - name: About authorization in .NET microservices and web applications
      href: secure-net-microservices-web-applications/authorization-net-microservices-web-applications.md
    - name: Storing application secrets safely during development
      href: secure-net-microservices-web-applications/developer-app-secrets-storage.md
    - name: Using Azure Key Vault to protect secrets at production time
      href: secure-net-microservices-web-applications/azure-key-vault-protects-secrets.md
  - name: Key takeaways
    href: key-takeaways.md
