### YamlMime:FAQ
metadata:
  title: .NET dumps FAQ
  description: Get answers to frequently asked questions about dumps in .NET.
  ms.topic: faq
  ms.date: 09/23/2022
title: FAQ for dumps
summary: This article answers commonly asked questions about collecting dumps in .NET.
 
sections: 
  - name: Collecting dumps on macOS and Linux 
    questions: 
      - question: |
          How do I collect dumps on Linux?
        answer: | 
          On Linux-based systems, set `ptrace_scope` for `/proc/sys/kernel` to `1` or `0`. Any value higher than this requires running as root to prevent dump collection from being blocked.  

      - question: |
          How do I collect dumps using an Open Container Initiative technology?
        answer: |
          For applications running under an Open Container Initiative technology, the `seccomp` profile must allow for calls to `ptrace`. For example, `Docker` uses [containerd](https://github.com/moby/containerd) under the hood as a container runtime. When initializing the runtime, it specifies a default [seccomp profile](https://github.com/moby/moby/blob/master/profiles/seccomp/default.json) that allows `ptrace` only if the container host has a kernel version higher than 4.8 or if the `CAP_SYS_PTRACE` capability was specified. 
           
      - question: |
           How do I collect dumps on macOS?
        answer: |
            On macOS, the use of `ptrace` requires the host of the target process to be properly entitled. See [Default Entitlements](../install/macos-notarization-issues.md#default-entitlements) for more information.
      - question: |
          Where can I learn more about how I can leverage dumps to help diagnose problems in my .NET application?
        answer: | 
          Here are some additional resources:

          * [Debug Linux dumps](debug-linux-dumps.md) 
          * [Debug a deadlock in a .NET app](debug-deadlock.md) 
