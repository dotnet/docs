### YamlMime:FAQ
metadata:
  title: GitHub Copilot app modernization - upgrade for .NET FAQ
  description: "This article answers frequently asked questions about GitHub Copilot app modernization - upgrade for .NET."
  titleSuffix: ""
  author: adegeo
  ms.author: adegeo
  ms.topic: faq
  ms.date: 09/15/2025

title: GitHub Copilot app modernization FAQ
summary: |
  GitHub Copilot app modernization is an interactive GitHub Copilot agent that adds powerful upgrade capabilities to Visual Studio. This article answers frequently asked questions. For more information about the modernization agent, see [What is GitHub Copilot app modernization](github-copilot-app-modernization-overview.md).

  The tool requires one of the following GitHub Copilot subscriptions:

  - Copilot Pro
  - Copilot Pro+
  - Copilot Business
  - Copilot Enterprise

  GitHub Copilot app modernization is included in [Visual Studio 2022 version 17.14.16 or newer](https://visualstudio.microsoft.com/downloads/).

sections:
  - name: Modernization agent
    questions:
      - question: What can the agent do?
        answer: |
          Currently, GitHub Copilot app modernization helps you upgrade your .NET (.NET, .NET Core, and .NET Framework) projects to newer versions of .NET. It also helps migrate services to Azure. It also upgrades dependencies and fixes errors in the code post-migration. The agent performs the following steps in a GitHub Copilot chat session:

          - Analyzes your projects and proposes an upgrade plan.
          - According to the plan, runs a series of tasks to upgrade your projects.
          - Operates in a working branch under a local Git repository.
          - Automatically fixes issues during the code transformation.
          - Reports progress and allow access to code changes & logs.
          - Learns from the interactive experience with you (within the context of the session) to improve subsequent transformations.

      - question: What limitations are there?
        answer: |
          - Only Git repositories are supported.
          - There's no guarantee that the upgrade suggestions are considered best practices.
          - The LLM doesn't persist learning from the upgrade. Meaning, code fixes and corrections you provide during the upgrade process don't persist and can't be remembered for future upgrades.
          - It only runs on Windows.

      - question: Which model should I use?
        answer: |
          You should use a good coding model, such as Claude Sonnet 4.0 or Claude Sonnet 3.7.

      - question: Can I train the model based on my code base?
        answer: |
          No. Unlike traditional AI tools where you might enter freeform prompts, the agent operates in a more structured way. The AI is embedded within the build-and-fix process, meaning the prompts it uses are predefined and tied to the upgrade plan. So it's not something you can train on your codebase, and it's not something you can manually steer with custom instructions, beyond the changes you can make to the plan Markdown file.

          However, the agent does have some adaptability within a session. If you manually adjust a fix, it learns from that interaction in the short term and applies similar corrections if it encounters the same issue again. Think of it as refining its approach within the scope of that upgrade.

      - question: Does the agent store my source code?
        answer: |
          The agent never stores a user's codebase and never uses your code for training the model. Once an upgrade is complete, session data is deleted.

      - question: Can I provide feedback?
        answer: |
          Yes! Use the [Suggest a feature](/visualstudio/ide/suggest-a-feature) and [Report a Problem](/visualstudio/ide/report-a-problem) features of in Visual Studio to provide feedback.

      - question: What data is collected?
        answer: |
          The agent only collects telemetry information about project types, intent to upgrade, and upgrade duration. The data is aggregated through Visual Studio itself and doesn't contain any user-identifiable information. For more information about Microsoft's privacy policy, see [Visual Studio Customer Experience Improvement Program](/visualstudio/ide/visual-studio-experience-improvement-program?view=vs-2022).

      - question: Can I disable telemetry?
        answer: |
          Yes, you can disable telemetry. In Visual Studio, select **Help** > **Privacy** > **Privacy Settings** > **"No, I would not like to participate."**

  - name: Upgrade .NET apps
    questions:
      - question: What can the agent upgrade?
        answer: |
          GitHub Copilot app modernization helps you upgrade your .NET projects or migrate them to Azure. Besides upgrading the target framework, the agent can work with the following types of projects:

          - Azure Functions.
          - Console apps and class libraries.
          - Web technologies such as:
            - MVC
            - Blazor
            - Razor Pages
            - Web API
          - Desktop technologies such as Windows Forms and Windows Presentation Foundation.
          - Test projects such as MSTest and NUnit.
          - .NET Framework projects.

  - name: Migrate to Azure
    questions:
      - question: What can the agent migrate?
        answer: |
          The agent can assist in migrating your .NET applications to Azure, including:
          - Web apps
          - API apps
          - Azure Functions
          - Containerized applications

      - question: Can I monitor assessment progress?
        answer: |
          Yes, you can monitor the progress of the assessment through the Visual Studio interface. The agent provides real-time feedback and updates on the status of the migration process.

          While the assessment is running, you can monitor its progress by viewing the command-line output:

          1. In Visual Studio, go to **View** > **Output** to open the Output window.
          2. In the Output window, find the **Show output from:** dropdown.
          3. Select **AppModernizationExtension** from the dropdown list.
          4. The command-line output from the assessment tool appears here, showing real-time progress.

          You can also access the **Output** window using the keyboard shortcut <kbd>Ctrl+Alt+O</kbd>.

additionalContent: |
    ## Related content

    To learn more, see [What is GitHub Copilot app modernization?](github-copilot-app-modernization-overview.md).
