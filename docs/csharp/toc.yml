items:
- name: C# documentation
  href: index.yml
- name: Get started
  items:
  - name: Introduction
    href: tour-of-csharp/index.md
  - name: Types
    href: tour-of-csharp/types.md
  - name: Program building blocks
    href: tour-of-csharp/program-building-blocks.md
  - name: Major language areas
    href: tour-of-csharp/features.md
  - name: Tutorials
    items:
    - name: Choose your first lesson
      href: tour-of-csharp/tutorials/index.md
    - name: Browser based tutorials
      items:
      - name: Hello world
        href: tour-of-csharp/tutorials/hello-world.yml
      - name: Numbers in C#
        href: tour-of-csharp/tutorials/numbers-in-csharp.yml
      - name: Branches and loops
        href: tour-of-csharp/tutorials/branches-and-loops.yml
      - name: List collections
        href: tour-of-csharp/tutorials/list-collection.yml
    - name: Work in your local environment
      items:
      - name: Set up your environment
        href: tour-of-csharp/tutorials/local-environment.md
      - name: Numbers in C#
        href: tour-of-csharp/tutorials/numbers-in-csharp-local.md
      - name: Branches and loops
        href: tour-of-csharp/tutorials/branches-and-loops-local.md
      - name: List collections
        href: tour-of-csharp/tutorials/arrays-and-collections.md
- name: Fundamentals
  # TODO: https://github.com/dotnet/docs/pull/23464#discussion_r633857533
  # Use "title suffix" in docfx.json for "fundamentals", and edit H1s to be unique
  items:
  - name: Program structure
    items:
    - name: Overview
      href: fundamentals/program-structure/index.md
    - name: Main method
      href: fundamentals/program-structure/main-command-line.md
    - name: Top-level statements
      href: fundamentals/program-structure/top-level-statements.md
  - name: Type system
    items:
    - name: Overview
      href: fundamentals/types/index.md
    - name: Namespaces
      href: fundamentals/types/namespaces.md
    # TODO: tuples
    - name: Classes
      href: fundamentals/types/classes.md
    # TODO: Edit Records article so it doesn't depend on classes.
    - name: Records
      href: fundamentals/types/records.md
    # TODO: structs
    - name: Interfaces
      href: fundamentals/types/interfaces.md
    - name: Generics
      href: fundamentals/types/generics.md
    - name: Anonymous Types
      href: fundamentals/types/anonymous-types.md
    # TODO: Delegates, lambdas and events
  - name: Object Oriented programming
    items:
    - name: Overview
      displayName: classes, structs, records
      href: fundamentals/object-oriented/index.md
    - name: Objects
      href: fundamentals/object-oriented/objects.md
    - name: Inheritance
      href: fundamentals/object-oriented/inheritance.md
    # Encapsulation & composition
    - name: Polymorphism
      href: fundamentals/object-oriented/polymorphism.md
  - name: Functional techniques
    items:
    # - Conceptual overview
    #   - Expressions (how different than OO and expressions?)
    #   - separation of data & algorithms
    #   - immutability (emphasize constructors & passing data to constructor, get/init)
    #   - Functional purity / functions as arguments or return values
    # In F#, discussion of "object programming" -> objects become more sophisticated records.
    # - language features:
    #   - Lambdas
    #   - Positional records as DTOs
    - name: Pattern matching
      href: fundamentals/functional/pattern-matching.md
    - name: Discards
      href: fundamentals/functional/discards.md
    - name: Deconstructing tuples and other types
      href: fundamentals/functional/deconstruct.md
  - name: Exceptions and errors
    items:
    - name: Overview
      displayName: exceptions
      href: fundamentals/exceptions/index.md
    - name: Using exceptions
      href: fundamentals/exceptions/using-exceptions.md
    - name: Exception handling
      href: fundamentals/exceptions/exception-handling.md
    - name: Creating and throwing exceptions
      href: fundamentals/exceptions/creating-and-throwing-exceptions.md
    - name: Compiler-generated exceptions
      href: fundamentals/exceptions/compiler-generated-exceptions.md
  - name: Coding style
    items:
    - name: Identifier names
      href: fundamentals/coding-style/identifier-names.md
    - name: C# coding conventions
      href: fundamentals/coding-style/coding-conventions.md
  - name: Tutorials
    items:
    - name: "How to display command-line arguments"
      href: fundamentals/tutorials/how-to-display-command-line-arguments.md
      # TODO: Command line processing tutorials
      # TODO: DTOs (tuples, anonymous types and records)
      # TODO: Values (record structs and structs)
      # TODO: Classes and objects (interfaces and classes)
      # TODO: Generics (methods and classes)
      # TODO: Fundamentals of using lambdas
    - name: Introduction to classes
      href: fundamentals/tutorials/classes.md
    - name: Object-Oriented C#
      href: fundamentals/tutorials/oop.md
    # Composing objects from parts
    - name: Inheritance in C# and .NET
      href: fundamentals/tutorials/inheritance.md
    # programming to interfaces
    - name: Converting types
      displayName: cast, is, as
      href: fundamentals/tutorials/safely-cast-using-pattern-matching-is-and-as-operators.md
    - name: Build data-driven algorithms with pattern matching
      href: fundamentals/tutorials/pattern-matching.md
    # separating data and algorithms
    # Data transformations
    ## TODO: Replace with a tutorial (include async exceptions)
    - name: "How to handle an exception using try-catch"
      href: fundamentals/exceptions/how-to-handle-an-exception-using-try-catch.md
    - name: "How to execute cleanup code using finally"
      href: fundamentals/exceptions/how-to-execute-cleanup-code-using-finally.md
- name: What's new in C#
  items:
  - name: C# 10.0 (Preview 5)
    displayName: what's new
    href: whats-new/csharp-10.md
  - name: C# 9.0
    href: whats-new/csharp-9.md
  - name: C# 8.0
    href: whats-new/csharp-8.md
  - name: C# 7.0-7.3
    href: whats-new/csharp-7.md
  - name: Compiler breaking changes
    href: whats-new/breaking-changes.md
  - name: C# Version History
    href: whats-new/csharp-version-history.md
  - name: Relationships to .NET library
    href: whats-new/relationships-between-language-and-library.md
  - name: Version compatibility
    href: whats-new/version-update-considerations.md
  - name: Tutorials
    items:
    - name: Explore record types
      href: whats-new/tutorials/records.md
    - name: Explore top-level statements
      href: whats-new/tutorials/top-level-statements.md
    - name: Explore patterns in objects
      href: whats-new/tutorials/patterns-objects.md
    - name: Safely update interfaces with default interface methods
      href: whats-new/tutorials/default-interface-methods-versions.md
    - name: Create mixin functionality with default interface methods
      href: whats-new/tutorials/mixins-with-default-interface-methods.md
    - name: Explore indexes and ranges
      href: whats-new/tutorials/ranges-indexes.md
    - name: Work with nullable reference types
      href: whats-new/tutorials/nullable-reference-types.md
    - name: Upgrade an app to nullable reference types
      href: whats-new/tutorials/upgrade-to-nullable-references.md
    - name: Generate and consume asynchronous streams
      href: whats-new/tutorials/generate-consume-asynchronous-stream.md
- name: Tutorials
  items:
  - name: Explore string interpolation - interactive
    href: tutorials/exploration/interpolated-strings.yml
  - name: Explore string interpolation - in your environment
    href: tutorials/exploration/interpolated-strings-local.md
  - name: Advanced scenarios for string Interpolation
    href: tutorials/string-interpolation.md
  - name: Console Application
    href: tutorials/console-teleprompter.md
  - name: REST Client
    href: tutorials/console-webapiclient.md
  - name: Work with LINQ
    href: tutorials/working-with-linq.md
  - name: Use Attributes
    href: tutorials/attributes.md
- name: C# concepts
  items:
  - name: Nullable reference types
    href: nullable-references.md
  - name: Choose a strategy for enabling nullable reference types
    href: nullable-migration-strategies.md
  - name: Methods
    href: methods.md
  - name: Properties
    href: properties.md
  - name: Indexers
    href: indexers.md
  - name: Iterators
    href: iterators.md
  - name: Delegates & events
    items:
    - name: Introduction to Delegates
      href: delegates-overview.md
    - name: System.Delegate and the delegate keyword
      href: delegate-class.md
    - name: Strongly Typed Delegates
      href: delegates-strongly-typed.md
    - name: Common Patterns for Delegates
      href: delegates-patterns.md
    - name: Introduction to events
      href: events-overview.md
    - name: Standard .NET event patterns
      href: event-pattern.md
    - name: The Updated .NET Event Pattern
      href: modern-events.md
    - name: Distinguishing Delegates and Events
      href: distinguish-delegates-events.md
  - name: Language-Integrated Query (LINQ)
    items:
    - name: Overview of LINQ
      href: linq/index.md
    - name: Query expression basics
      href: linq/query-expression-basics.md
    - name: LINQ in C#
      href: linq/linq-in-csharp.md
    - name: Write LINQ queries in C#
      href: linq/write-linq-queries.md
    - name: Query a collection of objects
      href: linq/query-a-collection-of-objects.md
    - name: Return a query from a method
      href: linq/return-a-query-from-a-method.md
    - name: Store the results of a query in memory
      href: linq/store-the-results-of-a-query-in-memory.md
    - name: Group query results
      href: linq/group-query-results.md
    - name: Create a nested group
      href: linq/create-a-nested-group.md
    - name: Perform a subquery on a grouping operation
      href: linq/perform-a-subquery-on-a-grouping-operation.md
    - name: Group results by contiguous keys
      href: linq/group-results-by-contiguous-keys.md
    - name: Dynamically specify predicate filters at runtime
      href: linq/dynamically-specify-predicate-filters-at-runtime.md
    - name: Perform inner joins
      href: linq/perform-inner-joins.md
    - name: Perform grouped joins
      href: linq/perform-grouped-joins.md
    - name: Perform left outer joins
      href: linq/perform-left-outer-joins.md
    - name: Order the results of a join clause
      href: linq/order-the-results-of-a-join-clause.md
    - name: Join by using composite keys
      href: linq/join-by-using-composite-keys.md
    - name: Perform custom join operations
      href: linq/perform-custom-join-operations.md
    - name: Handle null values in query expressions
      href: linq/handle-null-values-in-query-expressions.md
    - name: Handle exceptions in query expressions
      href: linq/handle-exceptions-in-query-expressions.md
  - name: Write safe, efficient code
    href: write-safe-efficient-code.md
  - name: Expression trees
    items:
    - name: Introduction to expression trees
      href: expression-trees.md
    - name: Expression Trees Explained
      href: expression-trees-explained.md
    - name: Framework Types Supporting Expression Trees
      href: expression-classes.md
    - name: Executing Expressions
      href: expression-trees-execution.md
    - name: Interpreting Expressions
      href: expression-trees-interpreting.md
    - name: Building Expressions
      href: expression-trees-building.md
    - name: Translating Expressions
      href: expression-trees-translating.md
    - name: Summary
      href: expression-trees-summary.md
  - name: Native interoperability
    href: programming-guide/interop/index.md
  - name: Versioning
    href: versioning.md
- name: How-to C# articles
  items:
  - name: Article index
    displayName: how to's
    href: how-to/index.md
  - name: Split strings into substrings
    href: how-to/parse-strings-using-split.md
  - name: Concatenate strings
    href: how-to/concatenate-multiple-strings.md
  - name: Search strings
    href: how-to/search-strings.md
  - name: Modify string contents
    href: how-to/modify-string-contents.md
  - name: Compare strings
    href: how-to/compare-strings.md
  - name: "How to catch a non-CLS exception"
    href: how-to/how-to-catch-a-non-cls-exception.md
- name: The .NET Compiler Platform SDK (Roslyn APIs)
  items:
  - name: The .NET Compiler Platform SDK (Roslyn APIs) overview
    href: roslyn-sdk/index.md
  - name: Understand the compiler API model
    href: roslyn-sdk/compiler-api-model.md
  - name: Work with syntax
    href: roslyn-sdk/work-with-syntax.md
  - name: Work with semantics
    href: roslyn-sdk/work-with-semantics.md
  - name: Work with a workspace
    href: roslyn-sdk/work-with-workspace.md
  - name: Explore code with the syntax visualizer
    href: roslyn-sdk/syntax-visualizer.md
  - name: Source Generators
    href: roslyn-sdk/source-generators-overview.md
  - name: Quick starts
    items:
    - name: Syntax analysis
      href: roslyn-sdk/get-started/syntax-analysis.md
    - name: Semantic analysis
      href: roslyn-sdk/get-started/semantic-analysis.md
    - name: Syntax Transformation
      href: roslyn-sdk/get-started/syntax-transformation.md
  - name: Tutorials
    items:
    - name: Build your first analyzer and code fix
      href: roslyn-sdk/tutorials/how-to-write-csharp-analyzer-code-fix.md
# Taken from https://github.com/dotnet/roslyn/wiki/Samples-and-Walkthroughs
#    - name: Get started writing custom analyzers and code fixes
#  - name: Tutorials
#    items:
#    - name: Build your first analyzer
#    - name: Build your first code fix
#    - name: Deploy your analyzer as a VSIX
#    - name: Deploy your analyzer as a NuGet package
#- name: Samples
# Taken from https://github.com/dotnet/roslyn/wiki/Samples-and-Walkthroughs
#  items:
#    - name: Async packages
#    - name: Console classifier
#    - name: Convert to auto property
#    - name: Format solution
#    - name: Implement notify property changed
#    - name: Make const
#    - name: How to guides
# Look at the samples, and determine which are "How To" vs. Samples.
- name: C# programming guide
  items:
  - name: Overview
    displayName: programming guide
    href: programming-guide/index.md
  - name: Programming concepts
    items:
    - name: Overview
      displayName: programming concepts
      href: programming-guide/concepts/index.md
    - name: Asynchronous programming
      displayName: async, await, asynchronous programming, task, cancellation
      items:
      - name: Overview
        displayName: asynchronous programming
        href: programming-guide/concepts/async/index.md
      - name: Asynchronous programming scenarios
        href: async.md
      - name: Task asynchronous programming model
        href: programming-guide/concepts/async/task-asynchronous-programming-model.md
      - name: Async return types
        href: programming-guide/concepts/async/async-return-types.md
      - name: Cancel tasks
        items:
        - name: Cancel a list of tasks
          href: programming-guide/concepts/async/cancel-an-async-task-or-a-list-of-tasks.md
        - name: Cancel tasks after a period of time
          href: programming-guide/concepts/async/cancel-async-tasks-after-a-period-of-time.md
      - name: Process asynchronous tasks as they complete
        href: programming-guide/concepts/async/start-multiple-async-tasks-and-process-them-as-they-complete.md
      - name: Asynchronous file access
        href: programming-guide/concepts/async/using-async-for-file-access.md
    - name: Attributes
      items:
      - name: Overview
        displayName: attributes
        href: programming-guide/concepts/attributes/index.md
      - name: Creating Custom Attributes
        href: programming-guide/concepts/attributes/creating-custom-attributes.md
      - name: Accessing Attributes by Using Reflection
        href: programming-guide/concepts/attributes/accessing-attributes-by-using-reflection.md
      - name: "How to create a C/C++ union by using attributes"
        href: programming-guide/concepts/attributes/how-to-create-a-c-cpp-union-by-using-attributes.md
    - name: Collections
      href: programming-guide/concepts/collections.md
    - name: Covariance and contravariance
      items:
      - name: Overview
        displayName: covariance and contravariance
        href: programming-guide/concepts/covariance-contravariance/index.md
      - name: Variance in Generic Interfaces
        href: programming-guide/concepts/covariance-contravariance/variance-in-generic-interfaces.md
        items:
        - name: Create Variant Generic Interfaces
          href: programming-guide/concepts/covariance-contravariance/creating-variant-generic-interfaces.md
        - name: Use Variance in Interfaces for Generic Collections
          href: programming-guide/concepts/covariance-contravariance/using-variance-in-interfaces-for-generic-collections.md
      - name: Variance in Delegates
        href: programming-guide/concepts/covariance-contravariance/variance-in-delegates.md
        items:
        - name: Use Variance in Delegates
          href: programming-guide/concepts/covariance-contravariance/using-variance-in-delegates.md
        - name: Use Variance for Func and Action Generic Delegates
          href: programming-guide/concepts/covariance-contravariance/using-variance-for-func-and-action-generic-delegates.md
    - name: Expression trees
      items:
      - name: Overview
        displayName: expression trees
        href: programming-guide/concepts/expression-trees/index.md
      - name: "How to execute expression trees"
        href: programming-guide/concepts/expression-trees/how-to-execute-expression-trees.md
      - name: "How to modify expression trees"
        href: programming-guide/concepts/expression-trees/how-to-modify-expression-trees.md
      - name: "How to use expression trees to build dynamic queries"
        href: programming-guide/concepts/expression-trees/how-to-use-expression-trees-to-build-dynamic-queries.md
      - name: Debugging Expression Trees in Visual Studio
        href: programming-guide/concepts/expression-trees/debugging-expression-trees-in-visual-studio.md
      - name: DebugView Syntax
        href: programming-guide/concepts/expression-trees/debugview-syntax.md
    - name: Iterators
      href: programming-guide/concepts/iterators.md
    - name: Language-Integrated Query (LINQ)
      items:
      - name: Overview
        displayName: LINQ overview
        href: programming-guide/concepts/linq/index.md
      - name: Getting Started with LINQ in C#
        items:
        - name: Introduction to LINQ Queries
          href: programming-guide/concepts/linq/introduction-to-linq-queries.md
        - name: LINQ and Generic Types
          href: programming-guide/concepts/linq/linq-and-generic-types.md
        - name: Basic LINQ Query Operations
          href: programming-guide/concepts/linq/basic-linq-query-operations.md
        - name: Data Transformations with LINQ
          href: programming-guide/concepts/linq/data-transformations-with-linq.md
        - name: Type Relationships in LINQ Query Operations
          href: programming-guide/concepts/linq/type-relationships-in-linq-query-operations.md
        - name: Query Syntax and Method Syntax in LINQ
          href: programming-guide/concepts/linq/query-syntax-and-method-syntax-in-linq.md
        - name: C# Features That Support LINQ
          href: programming-guide/concepts/linq/features-that-support-linq.md
        - name: "Walkthrough: Writing Queries in C# (LINQ)"
          href: programming-guide/concepts/linq/walkthrough-writing-queries-linq.md
      - name: Standard Query Operators Overview
        items:
        - name: Overview
          href: programming-guide/concepts/linq/standard-query-operators-overview.md
        - name: Query Expression Syntax for Standard Query Operators
          href: programming-guide/concepts/linq/query-expression-syntax-for-standard-query-operators.md
        - name: Classification of Standard Query Operators by Manner of Execution
          href: programming-guide/concepts/linq/classification-of-standard-query-operators-by-manner-of-execution.md
        - name: Sorting Data
          href: programming-guide/concepts/linq/sorting-data.md
        - name: Set Operations
          href: programming-guide/concepts/linq/set-operations.md
        - name: Filtering Data
          href: programming-guide/concepts/linq/filtering-data.md
        - name: Quantifier Operations
          href: programming-guide/concepts/linq/quantifier-operations.md
        - name: Projection Operations
          href: programming-guide/concepts/linq/projection-operations.md
        - name: Partitioning Data
          href: programming-guide/concepts/linq/partitioning-data.md
        - name: Join Operations
          href: programming-guide/concepts/linq/join-operations.md
        - name: Grouping Data
          href: programming-guide/concepts/linq/grouping-data.md
        - name: Generation Operations
          href: programming-guide/concepts/linq/generation-operations.md
        - name: Equality Operations
          href: programming-guide/concepts/linq/equality-operations.md
        - name: Element Operations
          href: programming-guide/concepts/linq/element-operations.md
        - name: Converting Data Types
          href: programming-guide/concepts/linq/converting-data-types.md
        - name: Concatenation Operations
          href: programming-guide/concepts/linq/concatenation-operations.md
        - name: Aggregation Operations
          href: programming-guide/concepts/linq/aggregation-operations.md
      - name: LINQ to Objects
        items:
        - name: Overview
          href: programming-guide/concepts/linq/linq-to-objects.md
        - name: LINQ and Strings
          href: programming-guide/concepts/linq/linq-and-strings.md
        - name: How to articles
          items:
          - name: "How to count occurrences of a word in a string (LINQ)"
            href: programming-guide/concepts/linq/how-to-count-occurrences-of-a-word-in-a-string-linq.md
          - name: "How to query for sentences that contain a specified set of words (LINQ)"
            href: programming-guide/concepts/linq/how-to-query-for-sentences-that-contain-a-specified-set-of-words-linq.md
          - name: "How to query for characters in a string (LINQ)"
            href: programming-guide/concepts/linq/how-to-query-for-characters-in-a-string-linq.md
          - name: "How to combine LINQ queries with regular expressions"
            href: programming-guide/concepts/linq/how-to-combine-linq-queries-with-regular-expressions.md
          - name: "How to find the set difference between two lists (LINQ)"
            href: programming-guide/concepts/linq/how-to-find-the-set-difference-between-two-lists-linq.md
          - name: "How to sort or filter text data by any word or field (LINQ)"
            href: programming-guide/concepts/linq/how-to-sort-or-filter-text-data-by-any-word-or-field-linq.md
          - name: "How to reorder the fields of a delimited file (LINQ)"
            href: programming-guide/concepts/linq/how-to-reorder-the-fields-of-a-delimited-file-linq.md
          - name: "How to combine and compare string collections (LINQ)"
            href: programming-guide/concepts/linq/how-to-combine-and-compare-string-collections-linq.md
          - name: "How to populate object collections from multiple sources (LINQ)"
            href: programming-guide/concepts/linq/how-to-populate-object-collections-from-multiple-sources-linq.md
          - name: "How to split a file into many files by using groups (LINQ)"
            href: programming-guide/concepts/linq/how-to-split-a-file-into-many-files-by-using-groups-linq.md
          - name: "How to join content from dissimilar files (LINQ)"
            href: programming-guide/concepts/linq/how-to-join-content-from-dissimilar-files-linq.md
          - name: "How to compute column values in a CSV text file (LINQ)"
            href: programming-guide/concepts/linq/how-to-compute-column-values-in-a-csv-text-file-linq.md
        - name: LINQ and Reflection
          href: programming-guide/concepts/linq/how-to-query-an-assembly-s-metadata-with-reflection-linq.md
        - name: "How to query an assembly's metadata with Reflection (LINQ)"
          href: programming-guide/concepts/linq/how-to-query-an-assembly-s-metadata-with-reflection-linq.md
        - name: LINQ and File Directories
          items:
          - name: Overview
            href: programming-guide/concepts/linq/linq-and-file-directories.md
          - name: "How to query for files with a specified attribute or name"
            href: programming-guide/concepts/linq/how-to-query-for-files-with-a-specified-attribute-or-name.md
          - name: "How to group files by extension (LINQ)"
            href: programming-guide/concepts/linq/how-to-group-files-by-extension-linq.md
          - name: "How to query for the total number of bytes in a set of folders (LINQ)"
            href: programming-guide/concepts/linq/how-to-query-for-the-total-number-of-bytes-in-a-set-of-folders-linq.md
          - name: "How to compare the contents of two folders (LINQ)"
            href: programming-guide/concepts/linq/how-to-compare-the-contents-of-two-folders-linq.md
          - name: "How to query for the largest file or files in a directory tree (LINQ)"
            href: programming-guide/concepts/linq/how-to-query-for-the-largest-file-or-files-in-a-directory-tree-linq.md
          - name: "How to query for duplicate files in a directory tree (LINQ)"
            href: programming-guide/concepts/linq/how-to-query-for-duplicate-files-in-a-directory-tree-linq.md
          - name: "How to query the contents of files in a folder (LINQ)"
            href: programming-guide/concepts/linq/how-to-query-the-contents-of-files-in-a-folder-lin.md
        - name: "How to query an ArrayList with LINQ"
          href: programming-guide/concepts/linq/how-to-query-an-arraylist-with-linq.md
        - name: "How to add custom methods for LINQ queries"
          href: programming-guide/concepts/linq/how-to-add-custom-methods-for-linq-queries.md
      - name: LINQ to ADO.NET (Portal Page)
        href: programming-guide/concepts/linq/linq-to-adonet-portal-page.md
      - name: Enabling a Data Source for LINQ Querying
        href: programming-guide/concepts/linq/enabling-a-data-source-for-linq-querying1.md
      - name: Visual Studio IDE and Tools Support for LINQ
        href: programming-guide/concepts/linq/visual-studio-ide-and-tools-support-for-linq.md
    - name: Reflection
      href: programming-guide/concepts/reflection.md
    - name: Serialization (C#)
      items:
      - name: Overview
        displayName: serialization
        href: programming-guide/concepts/serialization/index.md
      - name: "How to write object data to an XML file"
        href: programming-guide/concepts/serialization/how-to-write-object-data-to-an-xml-file.md
      - name: "How to read object data from an XML file"
        href: programming-guide/concepts/serialization/how-to-read-object-data-from-an-xml-file.md
      - name: "Walkthrough: Persisting an Object in Visual Studio"
        href: programming-guide/concepts/serialization/walkthrough-persisting-an-object-in-visual-studio.md
  - name: Statements, expressions, and operators
    items:
    - name: Overview
      displayName: statements, expressions, operators
      href: programming-guide/statements-expressions-operators/index.md
    - name: Statements
      href: programming-guide/statements-expressions-operators/statements.md
    - name: Expression-bodied members
      href: programming-guide/statements-expressions-operators/expression-bodied-members.md
    - name: Anonymous functions
      items:
      - name: Overview
        href: programming-guide/statements-expressions-operators/anonymous-functions.md
      - name: "How to use lambda expressions in a query"
        href: programming-guide/statements-expressions-operators/how-to-use-lambda-expressions-in-a-query.md
    - name: Equality and equality comparisons
      items:
      - name: Equality comparisons
        href: programming-guide/statements-expressions-operators/equality-comparisons.md
      - name: "How to define value equality for a type"
        href: programming-guide/statements-expressions-operators/how-to-define-value-equality-for-a-type.md
      - name: "How to test for reference equality (identity)"
        href: programming-guide/statements-expressions-operators/how-to-test-for-reference-equality-identity.md
  - name: Types
    items:
    - name: Casting and Type Conversions
      href: programming-guide/types/casting-and-type-conversions.md
    - name: Boxing and Unboxing
      href: programming-guide/types/boxing-and-unboxing.md
    - name: "How to convert a byte array to an int"
      href: programming-guide/types/how-to-convert-a-byte-array-to-an-int.md
    - name: "How to convert a string to a number"
      href: programming-guide/types/how-to-convert-a-string-to-a-number.md
    - name: "How to convert between hexadecimal strings and numeric types"
      href: programming-guide/types/how-to-convert-between-hexadecimal-strings-and-numeric-types.md
    - name: Using Type dynamic
      href: programming-guide/types/using-type-dynamic.md
    - name: "Walkthrough: Creating and Using Dynamic Objects (C# and Visual Basic)"
      href: programming-guide/types/walkthrough-creating-and-using-dynamic-objects.md
  - name: Classes, Structs, and Records
    items:
    - name: Polymorphism
      items:
      - name: Versioning with the Override and New Keywords
        href: programming-guide/classes-and-structs/versioning-with-the-override-and-new-keywords.md
      - name: Knowing When to Use Override and New Keywords
        href: programming-guide/classes-and-structs/knowing-when-to-use-override-and-new-keywords.md
      - name: "How to override the ToString method"
        href: programming-guide/classes-and-structs/how-to-override-the-tostring-method.md
    - name: Members
      items:
      - name: Members overview
        href: programming-guide/classes-and-structs/members.md
      - name: Abstract and Sealed Classes and Class Members
        href: programming-guide/classes-and-structs/abstract-and-sealed-classes-and-class-members.md
      - name: Static Classes and Static Class Members
        href: programming-guide/classes-and-structs/static-classes-and-static-class-members.md
      - name: Access Modifiers
        href: programming-guide/classes-and-structs/access-modifiers.md
      - name: Fields
        href: programming-guide/classes-and-structs/fields.md
      - name: Constants
        href: programming-guide/classes-and-structs/constants.md
      - name: "How to define abstract properties"
        href: programming-guide/classes-and-structs/how-to-define-abstract-properties.md
      - name: "How to define constants in C#"
        href: programming-guide/classes-and-structs/how-to-define-constants.md
    - name: Properties
      items:
      - name: Properties overview
        href: programming-guide/classes-and-structs/properties.md
      - name: Using Properties
        href: programming-guide/classes-and-structs/using-properties.md
      - name: Interface Properties
        href: programming-guide/classes-and-structs/interface-properties.md
      - name: Restricting Accessor Accessibility
        href: programming-guide/classes-and-structs/restricting-accessor-accessibility.md
      - name: "How to declare and use read write properties"
        href: programming-guide/classes-and-structs/how-to-declare-and-use-read-write-properties.md
      - name: Auto-Implemented Properties
        href: programming-guide/classes-and-structs/auto-implemented-properties.md
      - name: "How to implement a lightweight class with auto-implemented properties"
        href: programming-guide/classes-and-structs/how-to-implement-a-lightweight-class-with-auto-implemented-properties.md
    - name: Methods
      items:
      - name: Methods overview
        href: programming-guide/classes-and-structs/methods.md
      - name: Local functions
        href: programming-guide/classes-and-structs/local-functions.md
      - name: Ref returns and ref locals
        href: programming-guide/classes-and-structs/ref-returns.md
      - name: Parameters
        items:
        - name: Passing parameters
          href: programming-guide/classes-and-structs/passing-parameters.md
        - name: Passing Value-Type Parameters
          href: programming-guide/classes-and-structs/passing-value-type-parameters.md
        - name: Passing Reference-Type Parameters
          href: programming-guide/classes-and-structs/passing-reference-type-parameters.md
        - name: "How to know the difference between passing a struct and passing a class reference to a method"
          href: programming-guide/classes-and-structs/how-to-know-the-difference-passing-a-struct-and-passing-a-class-to-a-method.md
      - name: Implicitly Typed Local Variables
        href: programming-guide/classes-and-structs/implicitly-typed-local-variables.md
      - name: "How to use implicitly typed local variables and arrays in a query expression"
        href: programming-guide/classes-and-structs/how-to-use-implicitly-typed-local-variables-and-arrays-in-a-query-expression.md
      - name: Extension Methods
        href: programming-guide/classes-and-structs/extension-methods.md
      - name: "How to implement and call a custom extension method"
        href: programming-guide/classes-and-structs/how-to-implement-and-call-a-custom-extension-method.md
      - name: "How to create a new method for an enumeration"
        href: programming-guide/classes-and-structs/how-to-create-a-new-method-for-an-enumeration.md
      - name: Named and Optional Arguments
        href: programming-guide/classes-and-structs/named-and-optional-arguments.md
      - name: "How to use named and optional arguments in Office programming"
        href: programming-guide/classes-and-structs/how-to-use-named-and-optional-arguments-in-office-programming.md
    - name: Constructors
      items:
      - name: Constructors overview
        href: programming-guide/classes-and-structs/constructors.md
      - name: Using Constructors
        href: programming-guide/classes-and-structs/using-constructors.md
      - name: Instance Constructors
        href: programming-guide/classes-and-structs/instance-constructors.md
      - name: Private Constructors
        href: programming-guide/classes-and-structs/private-constructors.md
      - name: Static Constructors
        href: programming-guide/classes-and-structs/static-constructors.md
      - name: "How to write a copy constructor"
        href: programming-guide/classes-and-structs/how-to-write-a-copy-constructor.md
    - name: Finalizers
      href: programming-guide/classes-and-structs/destructors.md
    - name: Object and Collection Initializers
      href: programming-guide/classes-and-structs/object-and-collection-initializers.md
    - name: "How to initialize objects by using an object initializer"
      href: programming-guide/classes-and-structs/how-to-initialize-objects-by-using-an-object-initializer.md
    - name: "How to initialize a dictionary with a collection initializer"
      href: programming-guide/classes-and-structs/how-to-initialize-a-dictionary-with-a-collection-initializer.md
    - name: Nested Types
      href: programming-guide/classes-and-structs/nested-types.md
    - name: Partial Classes and Methods
      href: programming-guide/classes-and-structs/partial-classes-and-methods.md
    - name: "How to return subsets of element properties in a query"
      href: programming-guide/classes-and-structs/how-to-return-subsets-of-element-properties-in-a-query.md
  - name: Interfaces
    items:
    - name: Explicit Interface Implementation
      href: programming-guide/interfaces/explicit-interface-implementation.md
    - name: "How to explicitly implement interface members"
      href: programming-guide/interfaces/how-to-explicitly-implement-interface-members.md
    - name: "How to explicitly implement members of two interfaces"
      href: programming-guide/interfaces/how-to-explicitly-implement-members-of-two-interfaces.md
  - name: Delegates
    items:
    - name: Overview
      displayName: delegates
      href: programming-guide/delegates/index.md
    - name: Using Delegates
      href: programming-guide/delegates/using-delegates.md
    - name: Delegates with Named vs. Anonymous Methods
      href: programming-guide/delegates/delegates-with-named-vs-anonymous-methods.md
    - name: "How to combine delegates (Multicast Delegates) (C# Programming Guide)"
      href: programming-guide/delegates/how-to-combine-delegates-multicast-delegates.md
    - name: "How to declare, instantiate, and use a delegate"
      href: programming-guide/delegates/how-to-declare-instantiate-and-use-a-delegate.md
  - name: Arrays
    items:
    - name: Overview
      displayName: arrays
      href: programming-guide/arrays/index.md
    - name: Single-Dimensional Arrays
      href: programming-guide/arrays/single-dimensional-arrays.md
    - name: Multidimensional Arrays
      href: programming-guide/arrays/multidimensional-arrays.md
    - name: Jagged Arrays
      href: programming-guide/arrays/jagged-arrays.md
    - name: Using foreach with Arrays
      href: programming-guide/arrays/using-foreach-with-arrays.md
    - name: Passing Arrays as Arguments
      href: programming-guide/arrays/passing-arrays-as-arguments.md
    - name: Implicitly Typed Arrays
      href: programming-guide/arrays/implicitly-typed-arrays.md
  - name: Strings
    items:
    - name: Programming with strings
      href: programming-guide/strings/index.md
    - name: "How to determine whether a string represents a numeric value"
      href: programming-guide/strings/how-to-determine-whether-a-string-represents-a-numeric-value.md
  - name: Indexers
    items:
    - name: Overview
      displayName: indexers
      href: programming-guide/indexers/index.md
    - name: Using Indexers
      href: programming-guide/indexers/using-indexers.md
    - name: Indexers in Interfaces
      href: programming-guide/indexers/indexers-in-interfaces.md
    - name: Comparison Between Properties and Indexers
      href: programming-guide/indexers/comparison-between-properties-and-indexers.md
  - name: Events
    items:
    - name: Overview
      displayName: events
      href: programming-guide/events/index.md
    - name: "How to subscribe to and unsubscribe from events"
      href: programming-guide/events/how-to-subscribe-to-and-unsubscribe-from-events.md
    - name: "How to publish events that conform to .NET Guidelines"
      href: programming-guide/events/how-to-publish-events-that-conform-to-net-framework-guidelines.md
    - name: "How to raise base class events in derived classes"
      href: programming-guide/events/how-to-raise-base-class-events-in-derived-classes.md
    - name: "How to implement interface events"
      href: programming-guide/events/how-to-implement-interface-events.md
    - name: "How to implement custom event accessors"
      href: programming-guide/events/how-to-implement-custom-event-accessors.md
  - name: Generics
    items:
    - name: Generic Type Parameters
      href: programming-guide/generics/generic-type-parameters.md
    - name: Constraints on Type Parameters
      href: programming-guide/generics/constraints-on-type-parameters.md
    - name: Generic Classes
      href: programming-guide/generics/generic-classes.md
    - name: Generic Interfaces
      href: programming-guide/generics/generic-interfaces.md
    - name: Generic Methods
      href: programming-guide/generics/generic-methods.md
    - name: Generics and Arrays
      href: programming-guide/generics/generics-and-arrays.md
    - name: Generic Delegates
      href: programming-guide/generics/generic-delegates.md
    - name: Differences Between C++ Templates and C# Generics
      href: programming-guide/generics/differences-between-cpp-templates-and-csharp-generics.md
    - name: Generics in the Run Time
      href: programming-guide/generics/generics-in-the-run-time.md
    - name: Generics and Reflection
      href: programming-guide/generics/generics-and-reflection.md
    - name: Generics and Attributes
      href: programming-guide/generics/generics-and-attributes.md
  - name: Namespaces
    items:
    - name: Using namespaces
      href: programming-guide/namespaces/using-namespaces.md
    - name: "How to use the My namespace"
      href: programming-guide/namespaces/how-to-use-the-my-namespace.md
  - name: File System and the Registry
    items:
    - name: Overview
      displayName: file system registry
      href: programming-guide/file-system/index.md
    - name: "How to iterate through a directory tree"
      href: programming-guide/file-system/how-to-iterate-through-a-directory-tree.md
    - name: "How to get information about files, folders, and drives"
      href: programming-guide/file-system/how-to-get-information-about-files-folders-and-drives.md
    - name: "How to create a file or folder"
      href: programming-guide/file-system/how-to-create-a-file-or-folder.md
    - name: "How to copy, delete, and move files and folders"
      href: programming-guide/file-system/how-to-copy-delete-and-move-files-and-folders.md
    - name: "How to provide a progress dialog box for file operations"
      href: programming-guide/file-system/how-to-provide-a-progress-dialog-box-for-file-operations.md
    - name: "How to write to a text file"
      href: programming-guide/file-system/how-to-write-to-a-text-file.md
    - name: "How to read From a text file"
      href: programming-guide/file-system/how-to-read-from-a-text-file.md
    - name: "How to read a text file one line at a time"
      href: programming-guide/file-system/how-to-read-a-text-file-one-line-at-a-time.md
    - name: "How to create a key in the registry"
      href: programming-guide/file-system/how-to-create-a-key-in-the-registry.md
  - name: Interoperability
    items:
    - name: .NET Interoperability
      href: programming-guide/interop/index.md
    - name: Interoperability Overview
      href: programming-guide/interop/interoperability-overview.md
    - name: "How to access Office interop objects by using C# features"
      href: programming-guide/interop/how-to-access-office-onterop-objects.md
    - name: "How to use indexed properties in COM interop programming"
      href: programming-guide/interop/how-to-use-indexed-properties-in-com-interop-rogramming.md
    - name: "How to use platform invoke to play a WAV file"
      href: programming-guide/interop/how-to-use-platform-invoke-to-play-a-wave-file.md
    - name: "Walkthrough: Office Programming (C# and Visual Basic)"
      href: programming-guide/interop/walkthrough-office-programming.md
    - name: Example COM Class
      href: programming-guide/interop/example-com-class.md
- name: Language reference
  items:
  - name: Overview
    displayName: language reference
    href: language-reference/index.md
  - name: Configure language version
    href: language-reference/configure-language-version.md
  - name: Types
    items:
    - name: Value types
      items:
      - name: Overview
        href: language-reference/builtin-types/value-types.md
        displayName: "value types, simple types"
      - name: Integral numeric types
        href: language-reference/builtin-types/integral-numeric-types.md
        displayName: sbyte, byte, short, ushort, int, uint, nint, nuint, long, ulong, integer, literal
      - name: nint and nuint native integer types
        href: language-reference/builtin-types/nint-nuint.md
      - name: Floating-point numeric types
        href: language-reference/builtin-types/floating-point-numeric-types.md
        displayName: float, decimal, double, rational, real, literal
      - name: Built-in numeric conversions
        href: language-reference/builtin-types/numeric-conversions.md
      - name: bool
        href: language-reference/builtin-types/bool.md
        displayName: "Boolean, true, false"
      - name: char
        href: language-reference/builtin-types/char.md
        displayName: "Unicode, character, UTF-16"
      - name: Enumeration types
        href: language-reference/builtin-types/enum.md
        displayName: "enum, bit flags, bit field"
      - name: Structure types
        href: language-reference/builtin-types/struct.md
        displayName: "struct type, readonly struct, ref struct, readonly ref struct"
      - name: Tuple types
        href: language-reference/builtin-types/value-tuples.md
        displayName: "value tuples, ValueTuple"
      - name: Nullable value types
        href: language-reference/builtin-types/nullable-value-types.md
        displayName: "? token, ? symbol"
    - name: Reference types
      items:
      - name: Features of reference types
        href: language-reference/keywords/reference-types.md
      - name: Built-in reference types
        displayName: object, delegate, dynamic, string
        href: language-reference/builtin-types/reference-types.md
      - name: record
        href: language-reference/builtin-types/record.md
      - name: class
        href: language-reference/keywords/class.md
      - name: interface
        href: language-reference/keywords/interface.md
      - name: Nullable reference types
        href: language-reference/builtin-types/nullable-reference-types.md
        displayName: "? token, ? symbol"
    - name: void
      href: language-reference/builtin-types/void.md
    - name: var
      href: language-reference/keywords/var.md
    - name: Built-in types
      href: language-reference/builtin-types/built-in-types.md
    - name: Unmanaged types
      href: language-reference/builtin-types/unmanaged-types.md
    - name: Default values
      href: language-reference/builtin-types/default-values.md
  - name: Keywords
    items:
    - name: Overview
      displayName: keywords
      href: language-reference/keywords/index.md
    - name: Modifiers
      items:
      - name: Access Modifiers
        items:
        - name: Quick reference
          href: language-reference/keywords/access-modifiers.md
        - name: Accessibility Levels
          href: language-reference/keywords/accessibility-levels.md
        - name: Accessibility Domain
          href: language-reference/keywords/accessibility-domain.md
        - name: Restrictions on Using Accessibility Levels
          href: language-reference/keywords/restrictions-on-using-accessibility-levels.md
        - name: internal
          href: language-reference/keywords/internal.md
        - name: private
          href: language-reference/keywords/private.md
        - name: protected
          href: language-reference/keywords/protected.md
        - name: public
          href: language-reference/keywords/public.md
        - name: protected internal
          href: language-reference/keywords/protected-internal.md
        - name: private protected
          href: language-reference/keywords/private-protected.md
      - name: abstract
        href: language-reference/keywords/abstract.md
      - name: async
        href: language-reference/keywords/async.md
        displayName: await
      - name: const
        href: language-reference/keywords/const.md
      - name: event
        href: language-reference/keywords/event.md
      - name: extern
        href: language-reference/keywords/extern.md
      - name: in (generic modifier)
        href: language-reference/keywords/in-generic-modifier.md
      - name: new (member modifier)
        href: language-reference/keywords/new-modifier.md
      - name: out (generic modifier)
        href: language-reference/keywords/out-generic-modifier.md
      - name: override
        href: language-reference/keywords/override.md
      - name: readonly
        href: language-reference/keywords/readonly.md
      - name: sealed
        href: language-reference/keywords/sealed.md
      - name: static
        href: language-reference/keywords/static.md
      - name: unsafe
        href: language-reference/keywords/unsafe.md
      - name: virtual
        href: language-reference/keywords/virtual.md
      - name: volatile
        href: language-reference/keywords/volatile.md
    - name: Statement Keywords
      items:
      - name: Statement categories
        href: language-reference/keywords/statement-keywords.md
      - name: Selection Statements
        items:
        - name: if-else
          href: language-reference/keywords/if-else.md
        - name: switch
          href: language-reference/keywords/switch.md
      - name: Jump Statements
        items:
        - name: break
          href: language-reference/keywords/break.md
        - name: continue
          href: language-reference/keywords/continue.md
        - name: goto
          href: language-reference/keywords/goto.md
        - name: return
          href: language-reference/keywords/return.md
      - name: Exception Handling Statements
        items:
        - name: throw
          href: language-reference/keywords/throw.md
        - name: try-catch
          href: language-reference/keywords/try-catch.md
        - name: try-finally
          href: language-reference/keywords/try-finally.md
        - name: try-catch-finally
          href: language-reference/keywords/try-catch-finally.md
      - name: Checked and Unchecked
        items:
        - name: Overview
          displayName: checked unchecked
          href: language-reference/keywords/checked-and-unchecked.md
        - name: checked
          href: language-reference/keywords/checked.md
        - name: unchecked
          href: language-reference/keywords/unchecked.md
      - name: fixed Statement
        href: language-reference/keywords/fixed-statement.md
      - name: lock Statement
        href: language-reference/keywords/lock-statement.md
    - name: Method Parameters
      items:
      - name: Passing parameters
        href: language-reference/keywords/method-parameters.md
      - name: params
        href: language-reference/keywords/params.md
      - name: in (Parameter Modifier)
        href: language-reference/keywords/in-parameter-modifier.md
      - name: ref
        href: language-reference/keywords/ref.md
      - name: out (Parameter Modifier)
        href: language-reference/keywords/out-parameter-modifier.md
    - name: Namespace Keywords
      items:
      - name: namespace
        href: language-reference/keywords/namespace.md
      - name: using
        items:
        - name: Contexts for using
          href: language-reference/keywords/using.md
        - name: using Directive
          href: language-reference/keywords/using-directive.md
        - name: using static Directive
          href: language-reference/keywords/using-static.md
        - name: using Statement
          href: language-reference/keywords/using-statement.md
      - name: extern alias
        href: language-reference/keywords/extern-alias.md
    - name: Generic Type Constraint Keywords
      items:
        - name: new constraint
          href: language-reference/keywords/new-constraint.md
        - name: where
          href: language-reference/keywords/where-generic-type-constraint.md
    - name: Access Keywords
      items:
      - name: base
        href: language-reference/keywords/base.md
      - name: this
        href: language-reference/keywords/this.md
    - name: Literal Keywords
      items:
      - name: "null"
        href: language-reference/keywords/null.md
      - name: "true and false"
        href: language-reference/builtin-types/bool.md
      - name: default
        href: language-reference/keywords/default.md
    - name: Contextual Keywords
      items:
      - name: Quick reference
        displayName: contextual keywords
        href: language-reference/keywords/contextual-keywords.md
      - name: add
        href: language-reference/keywords/add.md
      - name: get
        href: language-reference/keywords/get.md
      - name: init
        href: language-reference/keywords/init.md
      - name: partial (Type)
        href: language-reference/keywords/partial-type.md
      - name: partial (Method)
        href: language-reference/keywords/partial-method.md
      - name: remove
        href: language-reference/keywords/remove.md
      - name: set
        href: language-reference/keywords/set.md
      - name: when (filter condition)
        href: language-reference/keywords/when.md
      - name: value
        href: language-reference/keywords/value.md
      - name: yield
        href: language-reference/keywords/yield.md
    - name: Query Keywords
      items:
      - name: Quick reference
        displayName: query keywords
        href: language-reference/keywords/query-keywords.md
      - name: from clause
        href: language-reference/keywords/from-clause.md
      - name: where clause
        href: language-reference/keywords/where-clause.md
      - name: select clause
        href: language-reference/keywords/select-clause.md
      - name: group clause
        href: language-reference/keywords/group-clause.md
      - name: into
        href: language-reference/keywords/into.md
      - name: orderby clause
        href: language-reference/keywords/orderby-clause.md
      - name: join clause
        href: language-reference/keywords/join-clause.md
      - name: let clause
        href: language-reference/keywords/let-clause.md
      - name: ascending
        href: language-reference/keywords/ascending.md
      - name: descending
        href: language-reference/keywords/descending.md
      - name: "on"
        href: language-reference/keywords/on.md
      - name: equals
        href: language-reference/keywords/equals.md
      - name: by
        href: language-reference/keywords/by.md
      - name: in
        href: language-reference/keywords/in.md
  - name: Operators and expressions
    items:
    - name: Overview
      href: language-reference/operators/index.md
      displayName: operator precedence, operator associativity, expressions
    - name: Arithmetic operators
      href: language-reference/operators/arithmetic-operators.md
      displayName: ++, --, +, -, *, /, %, +=, -=, *=, /=, %=, checked, unchecked
    - name: Boolean logical operators
      href: language-reference/operators/boolean-logical-operators.md
      displayName: "!, &&, ||, &, |, ^, &=, |=, ^=, AND, XOR, OR"
    - name: Bitwise and shift operators
      href: language-reference/operators/bitwise-and-shift-operators.md
      displayName: "~, &, |, ^, <<, >>, &=, |=, ^=, <<=, >>=, AND, XOR, OR"
    - name: Equality operators
      href: language-reference/operators/equality-operators.md
      displayName: ==, !=
    - name: Comparison operators
      href: language-reference/operators/comparison-operators.md
      displayName: ">, <, >=, <=, greater, less"
    - name: Member access operators and expressions
      href: language-reference/operators/member-access-operators.md
      displayName: "., [], ?., ?[], (), indexer, null-conditional, Elvis, invocation, ^, index from end, hat, .., range"
    - name: Type-testing operators and cast expression
      href: language-reference/operators/type-testing-and-cast.md
      displayName: "is operator, is keyword, as operator, as keyword, typeof, (), explicit, conversion"
    - name: User-defined conversion operators
      href: language-reference/operators/user-defined-conversion-operators.md
      displayName: implicit, explicit
    - name: Pointer-related operators
      href: language-reference/operators/pointer-related-operators.md
      displayName: "&, *, ->, [], +, -, ++, --, ==, !=, <, >, <=, >=, dereference, address-of, indirection"
    - name: Assignment operators
      href: language-reference/operators/assignment-operator.md
      displayName: "=, ref, compound"
    - name: Lambda expressions
      href: language-reference/operators/lambda-expressions.md
      displayName: anonymous functions
    - name: Patterns
      href: language-reference/operators/patterns.md
      displayName: pattern matching, and keyword, or keyword, not keyword, pattern reference
    - name: + and += operators
      href: language-reference/operators/addition-operator.md
      displayName: string concatenation, delegate combination, event subscription
    - name: "- and -= operators"
      href: language-reference/operators/subtraction-operator.md
      displayName: delegate removal, event unsubscription
    - name: "?: operator"
      href: language-reference/operators/conditional-operator.md
      displayName: conditional, ternary, ref
    - name: "! (null-forgiving) operator"
      href: language-reference/operators/null-forgiving.md
      displayName: nullable reference, null-forgiveness, null suppression
    - name: "?? and ??= operators"
      href: language-reference/operators/null-coalescing-operator.md
      displayName: null-coalescing, assignment
    - name: => operator
      href: language-reference/operators/lambda-operator.md
      displayName: lambda, expression body definition
    - name: ":: operator"
      href: language-reference/operators/namespace-alias-qualifier.md
      displayName: "namespace alias qualifier, global namespace"
    - name: await operator
      href: language-reference/operators/await.md
      displayName: async
    - name: default value expressions
      href: language-reference/operators/default.md
      displayName: default value, default operator, default literal, type default
    - name: delegate operator
      href: language-reference/operators/delegate-operator.md
      displayName: anonymous
    - name: is operator
      href: language-reference/operators/is.md
      displayName: pattern matching
    - name: nameof expression
      href: language-reference/operators/nameof.md
      displayName: nameof operator
    - name: new operator
      href: language-reference/operators/new-operator.md
      displayName: constructor
    - name: sizeof operator
      href: language-reference/operators/sizeof.md
    - name: stackalloc expression
      href: language-reference/operators/stackalloc.md
      displayName: stack allocation, span, stackalloc operator
    - name: switch expression
      href: language-reference/operators/switch-expression.md
      displayName: pattern matching, patterns
    - name: true and false operators
      href: language-reference/operators/true-false-operators.md
    - name: with expression
      href: language-reference/operators/with-expression.md
      displayName: "records, copy"
    - name: Operator overloading
      href: language-reference/operators/operator-overloading.md
  - name: Statements
    items:
    - name: Iteration statements
      displayName: for, foreach, do, while, loop
      href: language-reference/statements/iteration-statements.md
  - name: Special characters
    items:
    - name: Overview
      displayName: special characters
      href: language-reference/tokens/index.md
    - name: $ -- string interpolation
      href: language-reference/tokens/interpolated.md
    - name: "@ -- verbatim identifier"
      href: language-reference/tokens/verbatim.md
  - name: Attributes read by the compiler
    items:
    - name: Global attributes
      displayName: AssemblyName, AssemblyVersion, AssemblyCulture, AssemblyFlags, AssemblyProduct, AssemblyTrademark, AssemblyInformationalVersion, AssemblyCompany, AssemblyCopyright, AssemblyFileVersion, CLSCompliant, AssemblyTitle, AssemblyDescription, AssemblyConfiguration, AssemblyDefaultAlias
      href: language-reference/attributes/global.md
    - name: Caller information
      displayName: CallerFilePath, CallerLineNumber, CallerMemberName
      href: language-reference/attributes/caller-information.md
    - name: Nullable static analysis
      displayName: AllowNull, DisallowNull, MaybeNull, NotNull, MaybeNullWhen, NotNullWhen, NotNullIfNotNull, DoesNotReturn, DoesNotReturnIf
      href: language-reference/attributes/nullable-analysis.md
    - name: Miscellaneous
      displayName: Conditional, Obsolete, AttributeUsage, ModuleInitializer, SkipLocalsInit
      href: language-reference/attributes/general.md
  - name: Unsafe code and pointers
    displayName: unsafe code, pointers, fixed buffer, function pointer
    href: language-reference/unsafe-code.md
  - name: Preprocessor directives
    href: language-reference/preprocessor-directives.md
    displayName: \#if, \#else, \#elif, \#endif, \#define, \#undef, \#warning, \#error, \#line, \#nullable, \#region, \#endregion, \#pragma, warning, checksum
  - name: Compiler options
    items:
    - name: How to set options
      href: language-reference/compiler-options/index.md
    - name: Language options
      displayName: CheckForOverflowUnderflow, checked, AllowUnsafeBlocks, unsafe, DefineConstants, define, LangVersion, langversion, Nullable, nullable
      href: language-reference/compiler-options/language.md
    - name: Output options
      displayName: DocumentationFile, doc, OutputAssembly, out, PlatformTarget, platform, ProduceReferenceAssembly, refout, TargetType, target,
      href: language-reference/compiler-options/output.md
    - name: Input options
      displayName: References, reference, references, AddModules, addmodule, EmbedInteropTypes, link
      href: language-reference/compiler-options/inputs.md
    - name: Error and warning options
      displayName: WarningLevel, warn, TreatWarningsAsErrors, warnaserror, WarningsAsErrors, WarningsNotAsErrors, DisabledWarnings, nowarn, CodeAnalysisRuleSet, ruleset, ErrorLog, errorlog, ReportAnalyzer, reportanalyzer
      href: language-reference/compiler-options/errors-warnings.md
    - name: Code generation options
      displayName: DebugType, debug, Optimize, optimize, Deterministic, deterministic, ProduceOnlyReferenceAssembly, refonly
      href: language-reference/compiler-options/code-generation.md
    - name: Security options
      displayName: DelaySign, delaysign, KeyFile, keyfile, KeyContainer, keycontainer, PublicSign, publicsign, highentropyva, HighEntropyVA
      href: language-reference/compiler-options/security.md
    - name: Resources options
      displayName: Win32Resource, win32res, Win32Icon, win32icon, Win32Manifest, win32manifest, NoWin32Manifest, nowin32manifest, Resources, resource, LinkResources
      href: language-reference/compiler-options/resources.md
    - name: Miscellaneous options
      displayName: ResponseFiles, @, NoLogo, nologo, NoConfig, noconfig
      href: language-reference/compiler-options/miscellaneous.md
    - name: Advanced options
      displayName: MainEntryPoint, StartupObject, main, PdbFile, pdb, PathMap, pathmap, ApplicationConfiguration, appconfig, AdditionalLibPaths, lib, GenerateFullPaths, fullpath, PreferredUILang, preferreduilang, BaseAddress, baseaddress, ChecksumAlgorithm, checksumalgorithm, CodePage, codepage, Utf8Output, utf8output, FileAlignment, filealign, ErrorEndLocation, errorendlocation, NoStandardLib, nostdlib, SubsystemVersion, subsystemversion, ModuleAssemblyName, moduleassemblyname
      href: language-reference/compiler-options/advanced.md
  - name: XML documentation comments
    items:
    - name: Generate API documentation
      href: language-reference/xmldoc/index.md
    - name: Recommended tags
      href: language-reference/xmldoc/recommended-tags.md
    - name: Examples
      href: language-reference/xmldoc/examples.md 
  - name: Compiler messages
    href: language-reference/compiler-messages/index.md
- name: Specifications
  items:
  - name: C# 6.0 draft specification
    items:
    - name: Introduction
      href: ../../_csharplang/spec/introduction.md
    - name: Lexical structure
      href: ../../_csharplang/spec/lexical-structure.md
    - name: Basic concepts
      href: ../../_csharplang/spec/basic-concepts.md
    - name: Types
      href: ../../_csharplang/spec/types.md
    - name: Variables
      href: ../../_csharplang/spec/variables.md
    - name: Conversions
      href: ../../_csharplang/spec/conversions.md
    - name: Expressions
      href: ../../_csharplang/spec/expressions.md
    - name: Statements
      href: ../../_csharplang/spec/statements.md
    - name: Namespaces
      href: ../../_csharplang/spec/namespaces.md
    - name: Classes
      href: ../../_csharplang/spec/classes.md
    - name: Structs
      href: ../../_csharplang/spec/structs.md
    - name: Arrays
      href: ../../_csharplang/spec/arrays.md
    - name: Interfaces
      href: ../../_csharplang/spec/interfaces.md
    - name: Enums
      href: ../../_csharplang/spec/enums.md
    - name: Delegates
      href: ../../_csharplang/spec/delegates.md
    - name: Exceptions
      href: ../../_csharplang/spec/exceptions.md
    - name: Attributes
      href: ../../_csharplang/spec/attributes.md
    - name: Unsafe code
      href: ../../_csharplang/spec/unsafe-code.md
    - name: Documentation comments
      href: ../../_csharplang/spec/documentation-comments.md
  - name: C# 7.0 - 9.0 features
    items:
    - name: C# 7.0 features
      items:
      - name: Pattern matching
        href: ../../_csharplang/proposals/csharp-7.0/pattern-matching.md
      - name: Local functions
        href: ../../_csharplang/proposals/csharp-7.0/local-functions.md
      - name: Out variable declarations
        href: ../../_csharplang/proposals/csharp-7.0/out-var.md
      - name: Throw expressions
        href: ../../_csharplang/proposals/csharp-7.0/throw-expression.md
      - name: Binary literals
        href: ../../_csharplang/proposals/csharp-7.0/binary-literals.md
      - name: Digit separators
        href: ../../_csharplang/proposals/csharp-7.0/digit-separators.md
      - name: Async task types
        href: ../../_csharplang/proposals/csharp-7.0/task-types.md
    - name: C# 7.1 features
      items:
      - name: Async main method
        href: ../../_csharplang/proposals/csharp-7.1/async-main.md
      - name: Default expressions
        href: ../../_csharplang/proposals/csharp-7.1/target-typed-default.md
      - name: Infer tuple names
        href: ../../_csharplang/proposals/csharp-7.1/infer-tuple-names.md
      - name: Pattern matching with generics
        href: ../../_csharplang/proposals/csharp-7.1/generics-pattern-match.md
    - name: C# 7.2 features
      items:
      - name: Readonly references
        href: ../../_csharplang/proposals/csharp-7.2/readonly-ref.md
      - name: Compile-time safety for ref-like types
        href: ../../_csharplang/proposals/csharp-7.2/span-safety.md
      - name: Non-trailing named arguments
        href: ../../_csharplang/proposals/csharp-7.2/non-trailing-named-arguments.md
      - name: Private protected
        href: ../../_csharplang/proposals/csharp-7.2/private-protected.md
      - name: Conditional ref
        href: ../../_csharplang/proposals/csharp-7.2/conditional-ref.md
      - name: Leading digit separator
        href: ../../_csharplang/proposals/csharp-7.2/leading-separator.md
    - name: C# 7.3 features
      items:
      - name: Unmanaged generic type constraints
        href: ../../_csharplang/proposals/csharp-7.3/blittable.md
      - name: Indexing `fixed` fields should not require pinning regardless of the movable/unmovable context
        href: ../../_csharplang/proposals/csharp-7.3/indexing-movable-fixed-fields.md
      - name: Pattern-based `fixed` statement
        href: ../../_csharplang/proposals/csharp-7.3/pattern-based-fixed.md
      - name: Ref local reassignment
        href: ../../_csharplang/proposals/csharp-7.3/ref-local-reassignment.md
      - name: Stackalloc array initializers
        href: ../../_csharplang/proposals/csharp-7.3/stackalloc-array-initializers.md
      - name: Auto-implemented property field-targeted attributes
        href: ../../_csharplang/proposals/csharp-7.3/auto-prop-field-attrs.md
      - name: Expression variables in initializers
        href: ../../_csharplang/proposals/csharp-7.3/expression-variables-in-initializers.md
      - name: Tuple equality (==) and inequality (!=)
        href: ../../_csharplang/proposals/csharp-7.3/tuple-equality.md
      - name: Improved overload candidates
        href: ../../_csharplang/proposals/csharp-7.3/improved-overload-candidates.md
    - name: C# 8.0 features
      items:
      - name: Nullable reference types - proposal
        href: ../../_csharplang/proposals/csharp-8.0/nullable-reference-types.md
      - name: Nullable reference types - specification
        href: ../../_csharplang/proposals/csharp-9.0/nullable-reference-types-specification.md
      - name: Recursive pattern matching
        href: ../../_csharplang/proposals/csharp-8.0/patterns.md
      - name: Default interface methods
        href: ../../_csharplang/proposals/csharp-8.0/default-interface-methods.md
      - name: Async streams
        href: ../../_csharplang/proposals/csharp-8.0/async-streams.md
      - name: Ranges
        href: ../../_csharplang/proposals/csharp-8.0/ranges.md
      - name: Pattern based using and using declarations
        href: ../../_csharplang/proposals/csharp-8.0/using.md
      - name: Static local functions
        href: ../../_csharplang/proposals/csharp-8.0/static-local-functions.md
      - name: Null coalescing assignment
        href: ../../_csharplang/proposals/csharp-8.0/null-coalescing-assignment.md
      - name: Readonly instance members
        href: ../../_csharplang/proposals/csharp-8.0/readonly-instance-members.md
      - name: Nested stackalloc
        href: ../../_csharplang/proposals/csharp-8.0/nested-stackalloc.md
    - name: C# 9.0 features
      items:
      - name: Records
        href: ../../_csharplang/proposals/csharp-9.0/records.md
      - name: Top-level statements
        href: ../../_csharplang/proposals/csharp-9.0/top-level-statements.md
      - name: Nullable reference types - specification
        href: ../../_csharplang/proposals/csharp-9.0/nullable-reference-types-specification.md
      - name: Pattern matching enhancements
        href: ../../_csharplang/proposals/csharp-9.0/patterns3.md
      - name: Init only setters
        href: ../../_csharplang/proposals/csharp-9.0/init.md
      - name: Target-typed new expressions
        href: ../../_csharplang/proposals/csharp-9.0/target-typed-new.md
      - name: Module initializers
        href: ../../_csharplang/proposals/csharp-9.0/module-initializers.md
      - name: Extending partial methods
        href: ../../_csharplang/proposals/csharp-9.0/extending-partial-methods.md
      - name: Static anonymous functions
        href: ../../_csharplang/proposals/csharp-9.0/static-anonymous-functions.md
      - name: Target-typed conditional expression
        href: ../../_csharplang/proposals/csharp-9.0/target-typed-conditional-expression.md
      - name: Covariant return types
        href: ../../_csharplang/proposals/csharp-9.0/covariant-returns.md
      - name: Extension GetEnumerator in foreach loops
        href: ../../_csharplang/proposals/csharp-9.0/extension-getenumerator.md
      - name: Lambda discard parameters
        href: ../../_csharplang/proposals/csharp-9.0/lambda-discard-parameters.md
      - name: Attributes on local functions
        href: ../../_csharplang/proposals/csharp-9.0/local-function-attributes.md
      - name: Native sized integers
        href: ../../_csharplang/proposals/csharp-9.0/native-integers.md
      - name: Function pointers
        href: ../../_csharplang/proposals/csharp-9.0/function-pointers.md
      - name: Suppress emitting localsinit flag
        href: ../../_csharplang/proposals/csharp-9.0/skip-localsinit.md
      - name: Unconstrained type parameter annotations
        href: ../../_csharplang/proposals/csharp-9.0/unconstrained-type-parameter-annotations.md
