#using <System.dll>
#using <System.Web.Services.dll>
#using <System.Xml.dll>

using namespace System;
using namespace System::Net;
using namespace System::Web::Services;
using namespace System::Web::Services::Protocols;
using namespace System::Xml;

// System.Web.Services.Protocols.HttpWebClientProtocol.UserAgent
/* The following example demonstrates 'UserAgent' member of 'HttpWebClientProtocol' 
class. First the default user agent is displayed. Then the user agent is modified 
and displayed.
*/
/*
The following example is a proxy class generated by the Wsdl.exe utility
for the Math Web service. The proxy class derives from SoapHttpClientProtocol,
which derives from the abstract HttpWebClientProtocol class.

[System.Web.Services.WebServiceBindingAttribute(Name="MyMathSoap", 
Namespace="http://tempuri.org/")]
public class MyMath : System.Web.Services.Protocols.SoapHttpClientProtocol 
{
[System.Diagnostics.DebuggerStepThroughAttribute()]
public MyMath() 
{
this.Url = "http://localhost/Mymath.Cs.asmx";
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.Web.Services.Protocols.SoapDocumentMethodAttribute(
"http://tempuri.org/Add", 
Use=System.Web.Services.Description.SoapBindingUse.Literal,
ParameterStyle=
System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
public int Add(int num1, int num2) 
{
object[] results = this.Invoke("Add", 
new object[] {num1, num2});
return ((int)(results[0]));
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
public System.IAsyncResult BeginAdd(int num1, int num2, 
System.AsyncCallback callback, object asyncState) 
{
return this.BeginInvoke("Add", new object[] {num1, num2}, 
callback, asyncState);
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
public int EndAdd(System.IAsyncResult asyncResult) 
{
object[] results = this.EndInvoke(asyncResult);
return ((int)(results[0]));
}
}
*/
namespace test
{
   public ref class MyMath: public SoapHttpClientProtocol{};

}

int main()
{
   
   // <Snippet1>
   // MyMath is a proxy class.
   test::MyMath^ objMyMath = gcnew test::MyMath;
   
   // Get the default user agent.
   Console::WriteLine( "Default user agent is: {0}", objMyMath->UserAgent );
   objMyMath->UserAgent = "My Agent";
   Console::WriteLine( "Modified user agent is: {0}", objMyMath->UserAgent );
   // </Snippet1>
}
