<Window  
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    x:Class="Height_MinHeight_MaxHeight.Window1"
    Title="Height Properties Sample">
    <Border BorderBrush="Black" BorderThickness="2" Background="White">
	<StackPanel Margin="10">
	
		<TextBlock FontSize="20" DockPanel.Dock="Top">Height Properties Sample</TextBlock>
        <TextBlock TextWrapping="Wrap" Margin="0,0,0,10">Four properties are exposed on FrameworkElement that describe an element's Height characteristics. It is possible for these values to be in conflict. This example demonstrates how those conflicts between values are resolved.</TextBlock>
        <TextBlock TextWrapping="Wrap" Margin="0,0,0,10">If viewed on a continuum, MinHeight value takes precedence over MaxHeight value, which in turn takes precedence over the Height value. This is best demonstrated visually:</TextBlock>
<!-- <Snippet1> -->
            <Canvas Height="200" MinWidth="200" Background="#b0c4de" VerticalAlignment="Top"  HorizontalAlignment="Center" Name="myCanvas" Margin="0,0,0,50">
                <Rectangle HorizontalAlignment="Center" Canvas.Top="50" Canvas.Left="50"  Name="rect1" Fill="#4682b4" Height="100" Width="100"/>
            </Canvas>
<!-- </Snippet1> -->        
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
            <Button Name="Button1" Click="clipRect" Margin="0,5,5,5">Canvas.ClipToBounds="True"</Button><Button Name="Button2" Margin="0,5,5,5" Click="unclipRect">Canvas.ClipToBounds="False"</Button>
        </StackPanel>
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
              </Grid.RowDefinitions>
              <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
              </Grid.ColumnDefinitions>
    <TextBlock Grid.Row="0" FontSize="14" FontWeight="Bold" Grid.ColumnSpan="6" HorizontalAlignment="Center" Margin="0,15,0,15" TextWrapping="Wrap">
            Use the ListBoxes below to manipulate the various Height related properties of the Rectangle above.</TextBlock>
<!-- <Snippet2> -->
    <TextBlock Grid.Row="1" Grid.Column="0" Margin="10,0,0,0" TextWrapping="Wrap">Set the Rectangle Height:</TextBlock>
    <ListBox Grid.Column="1" Grid.Row="1" Margin="10,0,0,0" Height="50" Width="50" SelectionChanged="changeHeight">
      <ListBoxItem>25</ListBoxItem>
      <ListBoxItem>50</ListBoxItem>
      <ListBoxItem>75</ListBoxItem>
      <ListBoxItem>100</ListBoxItem>
      <ListBoxItem>125</ListBoxItem>
      <ListBoxItem>150</ListBoxItem>
      <ListBoxItem>175</ListBoxItem>
      <ListBoxItem>200</ListBoxItem>
    </ListBox>

	<TextBlock Grid.Row="1" Grid.Column="2" Margin="10,0,0,0" TextWrapping="Wrap">Set the Rectangle MinHeight:</TextBlock>
    <ListBox Grid.Column="3" Grid.Row="1" Margin="10,0,0,0" Height="50" Width="50" SelectionChanged="changeMinHeight">
      <ListBoxItem>25</ListBoxItem>
      <ListBoxItem>50</ListBoxItem>
      <ListBoxItem>75</ListBoxItem>
      <ListBoxItem>100</ListBoxItem>
      <ListBoxItem>125</ListBoxItem>
      <ListBoxItem>150</ListBoxItem>
      <ListBoxItem>175</ListBoxItem>
      <ListBoxItem>200</ListBoxItem>
  </ListBox>      
     
    <TextBlock Grid.Row="1" Grid.Column="4" Margin="10,0,0,0" TextWrapping="Wrap">Set the Rectangle MaxHeight:</TextBlock>
    <ListBox Grid.Column="5" Grid.Row="1" Margin="10,0,0,0" Height="50" Width="50" SelectionChanged="changeMaxHeight">
      <ListBoxItem>25</ListBoxItem>
      <ListBoxItem>50</ListBoxItem>
      <ListBoxItem>75</ListBoxItem>
      <ListBoxItem>100</ListBoxItem>
      <ListBoxItem>125</ListBoxItem>
      <ListBoxItem>150</ListBoxItem>
      <ListBoxItem>175</ListBoxItem>
      <ListBoxItem>200</ListBoxItem> 
    </ListBox>
    <!-- </Snippet2> -->
  	</Grid>

	    <TextBlock Name="txt1"/>
        <TextBlock Name="txt2"/>
        <TextBlock Name="txt3"/>
        <TextBlock Name="txt4"/>
        <TextBlock Name="txt5"/>
	</StackPanel>
	</Border>	
</Window>
