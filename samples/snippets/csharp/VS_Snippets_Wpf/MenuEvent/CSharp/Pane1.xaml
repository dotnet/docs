<Canvas
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    x:Class="Menus.Pane1"
    Name="cv1" 
    >
  <!--  The namespace + class name in the codebehind file and the x:Class attribute in the root of this document, must stay identical.  You can change them, but you must keep them in sync. -->
  <Grid Name="grid" ShowGridLines ="false" Background ="White" >
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="300"/>
      <ColumnDefinition Width="250"/>
    </Grid.ColumnDefinitions>
    <Grid.RowDefinitions>
      <RowDefinition/>
      <RowDefinition/>
      <RowDefinition/>
      <RowDefinition/>
      <RowDefinition/>
      <RowDefinition/>
      <RowDefinition/>
      <RowDefinition/>
      <RowDefinition/>
      <RowDefinition/>
      <RowDefinition/>
      <RowDefinition/>
      <RowDefinition/>
      <RowDefinition/>
      <RowDefinition/>
    </Grid.RowDefinitions>
    <TextBlock Margin="10, 10, 5, 5" Grid.Column="0" Grid.Row="0" FontSize="24">Menus</TextBlock>
    <TextBlock Margin="10, 10, 5, 5" Grid.Column="0" Grid.Row="1" FontSize="14" Grid.ColumnSpan="2">The following menu examples demonstrate:</TextBlock>
    <DockPanel Grid.Column="0" Grid.Row="2">
      <!--<Snippet1>-->
      <Menu Width="30" Margin="10, 10, 5, 5" HorizontalAlignment="Left" Background="White">
        <MenuItem Header="_File">
          <!--<Snippet11>-->
          <MenuItem Header="_New" IsCheckable="true"/>
          <!--</Snippet11>-->
          <MenuItem Header="_Open" IsCheckable="true"/>
          <MenuItem Header="_Close" IsCheckable="true"/>
          <Separator/>
          <MenuItem Header="Menu with Submenu">
            <MenuItem Header="_submenuitem1" IsCheckable="true"/>
            <MenuItem Header="_submenuitem2" IsCheckable="true">
              <MenuItem Header="_submenuitem2.1" IsCheckable="true"/>
            </MenuItem>
          </MenuItem>
          <Separator/>
          <MenuItem Header="_Menu item with ToolTip">
            <MenuItem.ToolTip>
              <ToolTip>
                ToolTip Information.
              </ToolTip>
            </MenuItem.ToolTip>
          </MenuItem>
        </MenuItem>
      </Menu>
      <!--</Snippet1>-->
    </DockPanel>
    <TextBlock Margin="5, 10, 5, 5" Grid.Column="1" Grid.Row="2" FontSize="12" 
          VerticalAlignment="Center" TextWrapping="WrapWithOverflow">
      Simple menu with submenu items and one menu item with a tooltip.
      Some of the items can be checked. To see the Access Keys
      press Ctrl+Alt.
    </TextBlock>

    <!--The following code illustrates how to use the InputGestureText property. It does not 
    activate the MenuItem. For information on that topic see the How to 
    article "Add a Command to a MenuItem" in the following documentation section: 
    WPF Fundamentals\Input and Commands\Add a Command to a MenuItem.-->


    <DockPanel Grid.Column="0" Grid.Row="3">
      <Menu Width="30" Margin="10, 10, 5, 5" HorizontalAlignment="Left" Background="White">
        <MenuItem Header="_Edit">
          <!--<Snippet6>-->
          <MenuItem Header="_Cut" InputGestureText="Ctrl+X"/>
          <MenuItem Header="_Find" InputGestureText="Ctrl+F"/>
          <!--</Snippet6>-->
        </MenuItem>
      </Menu>
    </DockPanel>
    <TextBlock Margin="10, 10, 5, 5" Grid.Column="1" Grid.Row="3" FontSize="12" 
        VerticalAlignment="Center" TextWrapping="WrapWithOverflow">
      Menu that displays menu items using the InputGestureText property.
    </TextBlock>


    <!--The following code illustrates how to use the Command property. It does not bind the 
    command to the MenuItem. For information on that topic see the How to article "Add a 
    Command to a MenuItem" in the following documentation section: 
    WPF Fundamentals\Input and Commands\Add a Command to a MenuItem.-->


    <DockPanel Grid.Column="0" Grid.Row="4">
      <Menu Width="30" Margin="10, 10, 5, 5" HorizontalAlignment="Left" Background="White">
        <MenuItem Header="_File">
          <!--<Snippet8>-->
          <MenuItem Header="_Open" Command="ApplicationCommands.Open"/>
          <MenuItem Header="_Save" Command="ApplicationCommands.Save"/>
          <!--</Snippet8>-->
        </MenuItem>
      </Menu>
    </DockPanel>
    <TextBlock Margin="10, 10, 5, 5" Grid.Column="1" Grid.Row="4" FontSize="12" 
        VerticalAlignment="Center" TextWrapping="WrapWithOverflow">
      Menu that displays menu items using the Command property.
    </TextBlock>

    <DockPanel Grid.Column="0" Grid.Row="5">
      <!--<Snippet10>-->
      <Menu Width="50"  Margin="10, 10, 5, 5" HorizontalAlignment="Left" Background="White">
        <MenuItem Header="_Animals">
          <MenuItem IsCheckable="true">
            <MenuItem.Header>
              <Image Source="data/cat.png"/>
            </MenuItem.Header>
          </MenuItem>
          <MenuItem IsCheckable="true">
            <MenuItem.Header>
              <Image Source="data/dog.png"/>
            </MenuItem.Header>
          </MenuItem>
          <MenuItem IsCheckable="true">
            <MenuItem.Header>
              <Image Source="data/fish.png"/>
            </MenuItem.Header>
          </MenuItem>
        </MenuItem>
      </Menu>
      <!--</Snippet10>-->
    </DockPanel>
    <TextBlock Margin="10, 10, 5, 5" Grid.Column="1" Grid.Row="5" FontSize="12" 
        VerticalAlignment="Center" TextWrapping="WrapWithOverflow">
      Images used as menu items.
      Notice the items can be checked.
    </TextBlock>

    <Button Margin="5, 10, 5, 5" Grid.Column="0" Grid.Row="6" Click="OnClick">Click me to create a menu with C# code.</Button>
    <TextBlock Margin="10, 10, 5, 5" Grid.Column="1" Grid.Row="6" FontSize="12" 
        VerticalAlignment="Center" TextWrapping="WrapWithOverflow">
      Creating a menu with C#.
      This menu uses InputGestureText and Commands.
    </TextBlock>

  </Grid>
  <Canvas Name="cv2" Width="550" Height="50" Canvas.Top="310" Canvas.Left="10"></Canvas>
</Canvas>
