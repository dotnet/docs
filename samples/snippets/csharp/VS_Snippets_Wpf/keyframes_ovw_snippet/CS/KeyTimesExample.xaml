<!-- <SnippetKeyTimesExampleUsingWholePage> -->
<Page xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  x:Class="SDKSample.KeyTimesExample"
  WindowTitle="KeyTimes Example" >

  <Canvas Margin="20">

    <!-- The five rectangles below are each animated across the screen with 
         key frames for 10 seconds.
         Each rectangle is animated using KeyTime properties of a different 
         value type. -->

    <!-- <SnippetTimeSpanKeyTimeExample> -->
    <!-- This rectangle is animated with KeyTimes using TimeSpan values. 
         Goes to 100 in the first 3 seconds, 100 to 200 in 
         the next 5 seconds, 300 to 500 in the next second,
         and 500 to 600 in the final second. -->
    <Rectangle Width="50" Height="50" Fill="Blue">
      <Rectangle.RenderTransform>
        <TranslateTransform x:Name="TranslateTransform01" X="10" Y="30" />
      </Rectangle.RenderTransform>
      <Rectangle.Triggers>
        <EventTrigger RoutedEvent="Rectangle.Loaded">
          <BeginStoryboard>
            <Storyboard>
              <DoubleAnimationUsingKeyFrames 
                Storyboard.TargetName="TranslateTransform01" 
                Storyboard.TargetProperty="X"
                Duration="0:0:10"
                RepeatBehavior="Forever">

                <!-- KeyTime properties are expressed as TimeSpan values 
                     which are in the form of "hours:minutes:seconds". -->
                <LinearDoubleKeyFrame Value="100" KeyTime="0:0:3" />
                <LinearDoubleKeyFrame Value="200" KeyTime="0:0:8" />
                <LinearDoubleKeyFrame Value="500" KeyTime="0:0:9" />
                <LinearDoubleKeyFrame Value="600" KeyTime="0:0:10" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </BeginStoryboard>
        </EventTrigger>
      </Rectangle.Triggers>
    </Rectangle>
    <!-- </SnippetTimeSpanKeyTimeExample> -->

    <!-- <SnippetPercentageKeyTimeExample> -->
    <!-- Identical animation behavior to the previous rectangle 
         but using percentage values for KeyTimes rather then TimeSpan. -->
    <Rectangle Height="50" Width="50" Fill="Purple">
      <Rectangle.RenderTransform>
        <TranslateTransform x:Name="TranslateTransform02" X="10" Y="110" />
      </Rectangle.RenderTransform>
      <Rectangle.Triggers>
        <EventTrigger RoutedEvent="Rectangle.Loaded">
          <BeginStoryboard>
            <Storyboard>
              <DoubleAnimationUsingKeyFrames 
                Storyboard.TargetName="TranslateTransform02" 
                Storyboard.TargetProperty="X"
                Duration="0:0:10"
                RepeatBehavior="Forever">

                <!-- KeyTime properties are expressed as Percentages. -->
                <LinearDoubleKeyFrame Value="100" KeyTime="30%" />
                <LinearDoubleKeyFrame Value="200" KeyTime="80%" />
                <LinearDoubleKeyFrame Value="500" KeyTime="90%" />
                <LinearDoubleKeyFrame Value="600" KeyTime="100%" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </BeginStoryboard>
        </EventTrigger>
      </Rectangle.Triggers>
    </Rectangle>
    <!-- </SnippetPercentageKeyTimeExample> -->

    <!-- <SnippetUniformKeyTimeExample> -->
    <!-- This rectangle is animated with KeyTimes using Uniform values.  -->
    <Rectangle Height="50" Width="50" Fill="Red">
      <Rectangle.RenderTransform>
        <TranslateTransform x:Name="TranslateTransform03" X="10" Y="190" />
      </Rectangle.RenderTransform>
      <Rectangle.Triggers>
        <EventTrigger RoutedEvent="Rectangle.Loaded">
          <BeginStoryboard>
            <Storyboard>
              <DoubleAnimationUsingKeyFrames 
                Storyboard.TargetName="TranslateTransform03" 
                Storyboard.TargetProperty="X"
                Duration="0:0:10"
                RepeatBehavior="Forever">

                <!-- KeyTime properties are expressed with values of Uniform. 
                     When a key time is set to "Uniform" the total allotted 
                     time of the animation is divided evenly between key frames.  
                     In this example, the total duration of the animation is 
                     ten seconds and there are four key frames each of which 
                     are set to "Uniform", therefore, the duration of each key frame 
                     is 3.3 seconds (10/3). -->
                <LinearDoubleKeyFrame Value="100" KeyTime="Uniform" />
                <LinearDoubleKeyFrame Value="200" KeyTime="Uniform" />
                <LinearDoubleKeyFrame Value="500" KeyTime="Uniform" />
                <LinearDoubleKeyFrame Value="600" KeyTime="Uniform" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </BeginStoryboard>
        </EventTrigger>
      </Rectangle.Triggers>
    </Rectangle>
    <!-- </SnippetUniformKeyTimeExample> -->

    <!-- <SnippetPacedKeyTimeExample> -->
    <!-- Using Paced Values. Rectangle moves between key frames at 
         uniform rate except for first key frame
         because using a Paced value on the first KeyFrame in a 
         collection of frames gives a time of zero. -->
    <Rectangle Height="50" Width="50" Fill="Orange">
      <Rectangle.RenderTransform>
        <TranslateTransform x:Name="TranslateTransform04" X="10" Y="270" />
      </Rectangle.RenderTransform>
      <Rectangle.Triggers>
        <EventTrigger RoutedEvent="Rectangle.Loaded">
          <BeginStoryboard>
            <Storyboard>
              <DoubleAnimationUsingKeyFrames 
                Storyboard.TargetName="TranslateTransform04" 
                Storyboard.TargetProperty="X"
                Duration="0:0:10"
                RepeatBehavior="Forever">

                <!-- KeyTime properties are expressed with values of Paced. 
                     Paced values are used when a constant rate is desired. 
                     The time allocated to a key frame with a KeyTime of "Paced" 
                     is determined by the time allocated to the other key 
                     frames of the animation. This time is calculated to 
                     attempt to give a "paced" or "constant velocity" 
                     for the animation. -->
                <LinearDoubleKeyFrame Value="100" KeyTime="Paced" />
                <LinearDoubleKeyFrame Value="200" KeyTime="Paced" />
                <LinearDoubleKeyFrame Value="500" KeyTime="Paced" />
                <LinearDoubleKeyFrame Value="600" KeyTime="Paced" />
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </BeginStoryboard>
        </EventTrigger>
      </Rectangle.Triggers>
    </Rectangle>
    <!-- </SnippetPacedKeyTimeExample> -->

  </Canvas>
</Page>
<!-- </SnippetKeyTimesExampleUsingWholePage> -->