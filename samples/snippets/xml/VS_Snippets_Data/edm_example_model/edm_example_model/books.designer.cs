//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]

#region EDM Relationship Metadata
[assembly: EdmRelationshipAttribute("Books", "PublishedBy", "Book", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EDM_Spec.Book), "Publisher", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EDM_Spec.Publisher))]
[assembly: EdmRelationshipAttribute("Books", "BookAuthor", "Book", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EDM_Spec.Book), "Author", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EDM_Spec.Author))]
#endregion

namespace EDM_Spec
{
    #region Contexts
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class BooksContainer : ObjectContext
    {
        #region Constructors
        /// <summary>
        /// Initializes a new BooksContainer object using the connection string found in the 'BooksContainer' section of the application configuration file.
        /// </summary>
        public BooksContainer() : base("name=BooksContainer", "BooksContainer")
        {
            OnContextCreated();
        }

        /// <summary>
        /// Initialize a new BooksContainer object.
        /// </summary>
        public BooksContainer(string connectionString) : base(connectionString, "BooksContainer")
        {
            OnContextCreated();
        }

        /// <summary>
        /// Initialize a new BooksContainer object.
        /// </summary>
        public BooksContainer(EntityConnection connection) : base(connection, "BooksContainer")
        {
            OnContextCreated();
        }
        #endregion

        #region Partial Methods
        partial void OnContextCreated();
        #endregion

        #region ObjectSet Properties
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Book> Books
        {
            get
            {
                if ((_Books == null))
                {
                    _Books = base.CreateObjectSet<Book>("Books");
                }
                return _Books;
            }
        }
        private ObjectSet<Book> _Books;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Publisher> Publishers
        {
            get
            {
                if ((_Publishers == null))
                {
                    _Publishers = base.CreateObjectSet<Publisher>("Publishers");
                }
                return _Publishers;
            }
        }
        private ObjectSet<Publisher> _Publishers;

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Author> Authors
        {
            get
            {
                if ((_Authors == null))
                {
                    _Authors = base.CreateObjectSet<Author>("Authors");
                }
                return _Authors;
            }
        }
        private ObjectSet<Author> _Authors;

        #endregion
        #region AddTo Methods

        /// <summary>
        /// Deprecated Method for adding a new object to the Books EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBooks(Book book)
        {
            base.AddObject("Books", book);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Publishers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPublishers(Publisher publisher)
        {
            base.AddObject("Publishers", publisher);
        }

        /// <summary>
        /// Deprecated Method for adding a new object to the Authors EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAuthors(Author author)
        {
            base.AddObject("Authors", author);
        }
        #endregion
    }

    #endregion


    #region Entities
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Books", Name="Author")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Author : EntityObject
    {
        #region Factory Method
        /// <summary>
        /// Create a new Author object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        public static Author CreateAuthor(global::System.String name, global::System.String address)
        {
            Author author = new Author();
            author.Name = name;

            author.Address = address;

            return author;
        }
        #endregion

        #region Primitive Properties
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                if (_Name != value)
                {
                    OnNameChanging(value);
                    ReportPropertyChanging("Name");
                    _Name = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Name");
                    OnNameChanged();
                }
            }

        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                if (_Address != value)
                {
                    OnAddressChanging(value);
                    ReportPropertyChanging("Address");
                    _Address = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Address");
                    OnAddressChanged();
                }
            }

        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();

        #endregion

        #region Navigation Properties
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Books", "BookAuthor", "Book")]
        public EntityCollection<Book> Books
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Book>("Books.BookAuthor", "Book");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Book>("Books.BookAuthor", "Book", value);
                }
            }
        }
        #endregion
    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Books", Name="Book")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Book : EntityObject
    {
        #region Factory Method
        /// <summary>
        /// Create a new Book object.
        /// </summary>
        /// <param name="iSBN">Initial value of the ISBN property.</param>
        /// <param name="title">Initial value of the Title property.</param>
        /// <param name="revision">Initial value of the Revision property.</param>
        public static Book CreateBook(global::System.String iSBN, global::System.String title, global::System.Decimal revision)
        {
            Book book = new Book();
            book.ISBN = iSBN;

            book.Title = title;

            book.Revision = revision;

            return book;
        }
        #endregion

        #region Primitive Properties
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ISBN
        {
            get
            {
                return _ISBN;
            }
            set
            {
                if (_ISBN != value)
                {
                    OnISBNChanging(value);
                    ReportPropertyChanging("ISBN");
                    _ISBN = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ISBN");
                    OnISBNChanged();
                }
            }

        }
        private global::System.String _ISBN;
        partial void OnISBNChanging(global::System.String value);
        partial void OnISBNChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Title
        {
            get
            {
                return _Title;
            }
            set
            {
                OnTitleChanging(value);
                ReportPropertyChanging("Title");
                _Title = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Title");
                OnTitleChanged();
            }

        }
        private global::System.String _Title;
        partial void OnTitleChanging(global::System.String value);
        partial void OnTitleChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Revision
        {
            get
            {
                return _Revision;
            }
            set
            {
                OnRevisionChanging(value);
                ReportPropertyChanging("Revision");
                _Revision = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Revision");
                OnRevisionChanged();
            }

        }
        private global::System.Decimal _Revision;
        partial void OnRevisionChanging(global::System.Decimal value);
        partial void OnRevisionChanged();

        #endregion

        #region Navigation Properties
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Books", "PublishedBy", "Publisher")]
        public Publisher Publisher
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Publisher>("Books.PublishedBy", "Publisher").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Publisher>("Books.PublishedBy", "Publisher").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Publisher> PublisherReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Publisher>("Books.PublishedBy", "Publisher");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Publisher>("Books.PublishedBy", "Publisher", value);
                }
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Books", "BookAuthor", "Author")]
        public EntityCollection<Author> Authors
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Author>("Books.BookAuthor", "Author");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Author>("Books.BookAuthor", "Author", value);
                }
            }
        }
        #endregion
    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Books", Name="Publisher")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Publisher : EntityObject
    {
        #region Factory Method
        /// <summary>
        /// Create a new Publisher object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        public static Publisher CreatePublisher(global::System.Int32 id, global::System.String name, global::System.String address)
        {
            Publisher publisher = new Publisher();
            publisher.Id = id;

            publisher.Name = name;

            publisher.Address = address;

            return publisher;
        }
        #endregion

        #region Primitive Properties
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }

        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }

        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }

        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();

        #endregion

        #region Navigation Properties
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Books", "PublishedBy", "Book")]
        public EntityCollection<Book> Books
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Book>("Books.PublishedBy", "Book");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Book>("Books.PublishedBy", "Book", value);
                }
            }
        }
        #endregion
    }

    #endregion

}
